{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_services/dialog/dialog.component.html","./src/app/_services/mat-progress-bar/mat-progress-bar.component.html","./src/app/app.component.html","./src/app/cluster-info/cluster-info.component.html","./src/app/code/code.component.html","./src/app/host-credentials/host-credentials.component.html","./src/app/host-credentials/host-login/host-login.component.html","./src/app/host-status/host-status.component.html","./src/app/menu-classroom/classroom/classroom-edit/classroom-edit.component.html","./src/app/menu-classroom/classroom/classroom.component.html","./src/app/menu-classroom/classroom/exercises/exercises-answer/exercises-answer-edit/exercises-answer-edit.component.html","./src/app/menu-classroom/classroom/exercises/exercises-answer/exercises-answer.component.html","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-edit.component.html","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-files/exercises-files.component.html","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-groups/exercises-groups.component.html","./src/app/menu-classroom/classroom/exercises/exercises.component.html","./src/app/menu-classroom/classroom/groups/groups-edit/groups-edit.component.html","./src/app/menu-classroom/classroom/groups/groups-members/groups-members.component.html","./src/app/menu-classroom/classroom/groups/groups.component.html","./src/app/menu-classroom/classroom/users/users-edit/users-edit.component.html","./src/app/menu-classroom/classroom/users/users-join/users-join.component.html","./src/app/menu-classroom/classroom/users/users.component.html","./src/app/menu-classroom/menu-classroom.component.html","./src/app/menu-management/classroom-manager/classroom-manager-edit/classroom-manager-edit.component.html","./src/app/menu-management/classroom-manager/classroom-manager.component.html","./src/app/menu-management/cluster-available/cluster-available.component.html","./src/app/menu-management/current-nodes/current-nodes.component.html","./src/app/menu-management/menu-management.component.html","./src/app/menu-management/monitoring/monitoring.component.html","./src/app/menu-management/settings/settings.component.html","./src/app/try-code/try-code.component.html","./src/app/users/users-edit/users-edit.component.html","./src/app/users/users.component.html","./src/app/welcome/welcome.component.html","./node_modules/tslib/tslib.es6.js","./src/app/_control/code.control.ts","./src/app/_control/node.control.ts","./src/app/_control/util.control.ts","./src/app/_helpers/HttpErrorInterceptor.ts","./src/app/_services/dialog/dialog.component.css","./src/app/_services/dialog/dialog.component.ts","./src/app/_services/event-emitter.service.ts","./src/app/_services/file.service.ts","./src/app/_services/host.service.ts","./src/app/_services/mat-progress-bar/mat-progress-bar.component.css","./src/app/_services/mat-progress-bar/mat-progress-bar.component.ts","./src/app/_services/socket.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/cluster-info/cluster-info.component.css","./src/app/cluster-info/cluster-info.component.ts","./src/app/code/code.component.css","./src/app/code/code.component.ts","./src/app/host-credentials/host-credentials.component.css","./src/app/host-credentials/host-credentials.component.ts","./src/app/host-credentials/host-login/host-login.component.css","./src/app/host-credentials/host-login/host-login.component.ts","./src/app/host-status/host-status.component.css","./src/app/host-status/host-status.component.ts","./src/app/menu-classroom/classroom/classroom-edit/classroom-edit.component.css","./src/app/menu-classroom/classroom/classroom-edit/classroom-edit.component.ts","./src/app/menu-classroom/classroom/classroom.component.css","./src/app/menu-classroom/classroom/classroom.component.ts","./src/app/menu-classroom/classroom/exercises/exercises-answer/exercises-answer-edit/exercises-answer-edit.component.css","./src/app/menu-classroom/classroom/exercises/exercises-answer/exercises-answer-edit/exercises-answer-edit.component.ts","./src/app/menu-classroom/classroom/exercises/exercises-answer/exercises-answer.component.css","./src/app/menu-classroom/classroom/exercises/exercises-answer/exercises-answer.component.ts","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-edit.component.css","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-edit.component.ts","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-files/exercises-files.component.css","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-files/exercises-files.component.ts","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-groups/exercises-groups.component.css","./src/app/menu-classroom/classroom/exercises/exercises-edit/exercises-groups/exercises-groups.component.ts","./src/app/menu-classroom/classroom/exercises/exercises.component.css","./src/app/menu-classroom/classroom/exercises/exercises.component.ts","./src/app/menu-classroom/classroom/groups/groups-edit/groups-edit.component.css","./src/app/menu-classroom/classroom/groups/groups-edit/groups-edit.component.ts","./src/app/menu-classroom/classroom/groups/groups-members/groups-members.component.css","./src/app/menu-classroom/classroom/groups/groups-members/groups-members.component.ts","./src/app/menu-classroom/classroom/groups/groups.component.css","./src/app/menu-classroom/classroom/groups/groups.component.ts","./src/app/menu-classroom/classroom/users/users-edit/users-edit.component.css","./src/app/menu-classroom/classroom/users/users-edit/users-edit.component.ts","./src/app/menu-classroom/classroom/users/users-join/users-join.component.css","./src/app/menu-classroom/classroom/users/users-join/users-join.component.ts","./src/app/menu-classroom/classroom/users/users.component.css","./src/app/menu-classroom/classroom/users/users.component.ts","./src/app/menu-classroom/menu-classroom.component.css","./src/app/menu-classroom/menu-classroom.component.ts","./src/app/menu-management/classroom-manager/classroom-manager-edit/classroom-manager-edit.component.css","./src/app/menu-management/classroom-manager/classroom-manager-edit/classroom-manager-edit.component.ts","./src/app/menu-management/classroom-manager/classroom-manager.component.css","./src/app/menu-management/classroom-manager/classroom-manager.component.ts","./src/app/menu-management/cluster-available/cluster-available.component.css","./src/app/menu-management/cluster-available/cluster-available.component.ts","./src/app/menu-management/current-nodes/current-nodes.component.css","./src/app/menu-management/current-nodes/current-nodes.component.ts","./src/app/menu-management/menu-management.component.css","./src/app/menu-management/menu-management.component.ts","./src/app/menu-management/monitoring/monitoring.component.css","./src/app/menu-management/monitoring/monitoring.component.ts","./src/app/menu-management/settings/settings.component.css","./src/app/menu-management/settings/settings.component.ts","./src/app/try-code/try-code.component.css","./src/app/try-code/try-code.component.ts","./src/app/users/users-edit/users-edit.component.css","./src/app/users/users-edit/users-edit.component.ts","./src/app/users/users.component.css","./src/app/users/users.component.ts","./src/app/welcome/welcome.component.css","./src/app/welcome/welcome.component.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<h2 mat-dialog-title>{{modalTitle}}</h2>\\n<mat-dialog-content>{{modalText}}</mat-dialog-content>\\n\\n<mat-dialog-content *ngIf=\\\"modalInput\\\">\\n  <span *ngFor=\\\"let m of modalInput\\\">\\n    <input type=\\\"{{m.Type}}\\\" [(ngModel)]=\\\"m.Model\\\" placeholder=\\\"{{m.Title}}\\\">\\n  </span>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"close('YES')\\\">{{modalYes}}</button>\\n  <button mat-button mat-dialog-close>{{modalNo}}</button>\\n</mat-dialog-actions>\\n\"","export default \"<mat-progress-bar\\n        [mode]=\\\"'indeterminate'\\\">\\n</mat-progress-bar>\\n\"","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"tr\\\"\\n               [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n               [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\">\\n    <mat-toolbar>\\n      <div class=\\\"iguana\\\">\\n        <h6><b>Iguana Cluster System</b>\\n          <br /><span class=\\\"version\\\">{{version}}</span>\\n        </h6>\\n      </div>\\n\\n      <img class=\\\"icon\\\" src=\\\"../../assets/iguana.png\\\" />\\n    </mat-toolbar>\\n\\n\\n    <mat-nav-list>\\n\\n      <mat-accordion class=\\\"example-headers-align\\\">\\n      <mat-divider *ngIf=\\\"hostConnection['Name']==='ok'\\\"></mat-divider>\\n\\n        <app-menu-classroom></app-menu-classroom>\\n\\n        <mat-divider *ngIf=\\\"hostConnection['Name']==='ok'\\\"></mat-divider>\\n\\n        <mat-expansion-panel *ngIf=\\\"hostConnection['Name']==='ok' && hostInfo['IsMaster']\\\"\\n                             (opened)=\\\"panelOpenState = true\\\"\\n                             (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Management\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <div>\\n            <app-menu-management></app-menu-management>\\n          </div>\\n        </mat-expansion-panel>\\n\\n\\n        <mat-divider *ngIf=\\\"hostConnection['Name']==='ok'\\\"></mat-divider>\\n\\n      </mat-accordion>\\n\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"accent\\\">\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n\\n      <app-host-status\\n              [hostInfo]=\\\"hostInfo\\\"\\n              [hostConnection]=\\\"hostConnection\\\">\\n      </app-host-status>\\n\\n      <span class=\\\"spacer\\\"></span>\\n\\n      <app-cluster-info *ngIf=\\\"(hostInfo.OpMode==='NODE' ||\\n                                hostInfo.OpMode==='MASTER') &&\\n                                hostConnection['Name']==='ok'\\\"\\n                        [hostInfo]=\\\"hostInfo\\\"\\n                        [hostConnection]=\\\"hostConnection\\\"\\n                        [clusterConnection]=\\\"clusterConnection\\\">\\n      </app-cluster-info>\\n      <span class=\\\"spacer\\\"></span>\\n\\n      <div class=\\\"noIP\\\" *ngIf=\\\"hostInfo.IP===''\\\">\\n        Attention, the system was unable to identify the host IP.\\n        Go to My Panel -> Settings and define the Public Host Interface.\\n      </div>\\n\\n      <span class=\\\"spacer\\\"></span>\\n\\n      <div class=\\\"hostInfo\\\">\\n\\n        <app-host-credentials *ngIf=\\\"hostConnection['Name']==='ok'\\\"\\n                              [hostInfo]=\\\"hostInfo\\\">\\n        </app-host-credentials>\\n\\n      </div>\\n\\n    </mat-toolbar>\\n    <ng-content></ng-content>\\n\\n\\n    <!--Main layout-->\\n    <main>\\n      <div class=\\\"container-fluid mt-5\\\">\\n        <div class=\\\"row wow fadeIn\\\">\\n\\n          <div class=\\\"col-md-12 mb-4\\\" *ngIf=\\\"hostConnection['Name']==='ok'\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n          <div class=\\\"col-md-12 mb-4 down\\\" *ngIf=\\\"hostConnection['Name']!=='ok'\\\">\\n            Trying to connect to the server...\\n            <app-mat-progress-bar></app-mat-progress-bar>\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n    </main>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n<!-- Footer -->\\n<footer class=\\\"page-footer font-small teal pt-4\\\">\\n  <div class=\\\"footer-copyright text-center py-3\\\">© 2021 Copyright\\n    <a href=\\\"http://lasdpc.icmc.usp.br/\\\"> LaSDPC USP-ICMC</a>\\n  </div>\\n</footer>\\n<!-- Footer -->\\n\"","export default \"\\n<ng-template #popContent>\\n    <span class=\\\"{{clusterConnection.Name}}\\\">\\n            Connection Status: <b>{{clusterConnection.Status}}</b></span>\\n    <br /><div *ngIf=\\\"clusterConnection['Name']==='wait'\\\" class=\\\"response\\\">\\n        <app-mat-progress-bar></app-mat-progress-bar>\\n    </div>\\n</ng-template>\\n\\n<div>\\n    <div class=\\\"main\\\">\\n        <img *ngIf=\\\"hostInfo.OpMode!=='NODE' && clusterConnection['Name']==='ok' && hostInfo.Cluster.Password\\\" class=\\\"icon\\\"\\n             src=\\\"../../assets/onLocked.png\\\"\\n             [ngbPopover]=\\\"popContent\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             popoverTitle=\\\"Cluster {{hostInfo.Cluster.Name}} ({{hostInfo.Cluster.MasterIP}})\\\" />\\n\\n        <img *ngIf=\\\"hostInfo.OpMode!=='NODE' && clusterConnection['Name']==='ok' && !hostInfo.Cluster.Password\\\" class=\\\"icon\\\"\\n             src=\\\"../../assets/onUnlocked.png\\\"\\n             [ngbPopover]=\\\"popContent\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             popoverTitle=\\\"Cluster {{hostInfo.Cluster.Name}} ({{hostInfo.Cluster.MasterIP}})\\\" />\\n\\n        <img *ngIf=\\\"hostInfo.OpMode!=='NODE' && clusterConnection['Name']!=='ok' && hostInfo.Cluster.Password\\\" class=\\\"icon\\\"\\n             src=\\\"../../assets/onLocked.png\\\"\\n             [ngbPopover]=\\\"popContent\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             popoverTitle=\\\"Cluster {{hostInfo.Cluster.Name}} ({{hostInfo.Cluster.MasterIP}})\\\" />\\n\\n        <img *ngIf=\\\"hostInfo.OpMode!=='NODE' && clusterConnection['Name']!=='ok' && !hostInfo.Cluster.Password\\\" class=\\\"icon\\\"\\n             src=\\\"../../assets/onUnlocked.png\\\"\\n             [ngbPopover]=\\\"popContent\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             popoverTitle=\\\"Cluster {{hostInfo.Cluster.Name}} ({{hostInfo.Cluster.MasterIP}})\\\" />\\n\\n        <img *ngIf=\\\"hostInfo.OpMode==='NODE' && clusterConnection['Name']==='info'\\\" class=\\\"icon\\\"\\n             src=\\\"../../assets/nodeWait.png\\\"\\n             [ngbPopover]=\\\"popContent\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             popoverTitle=\\\"Cluster {{hostInfo.Cluster.Name}} ({{hostInfo.Cluster.MasterIP}})\\\" />\\n\\n        <img *ngIf=\\\"hostInfo.OpMode==='NODE' && clusterConnection['Name']==='ok'\\\" class=\\\"icon\\\"\\n             src=\\\"../../assets/nodeOk.png\\\"\\n             [ngbPopover]=\\\"popContent\\\"\\n             triggers=\\\"mouseenter:mouseleave\\\"\\n             popoverTitle=\\\"Cluster {{hostInfo.Cluster.Name}} ({{hostInfo.Cluster.MasterIP}})\\\" />\\n\\n    </div>\\n\\n    <div class=\\\"mainSide\\\">\\n        <div *ngIf=\\\"hostInfo.Cluster.Name\\\">\\n            <a target=\\\"_blank\\\" class=\\\"text-link\\\"\\n               href=\\\"http://{{this.hostInfo.Cluster.MasterIP}}:{{this.hostInfo.Cluster.PortFrontend}}\\\">Cluster login page\\n            </a>\\n        </div>\\n        <div class=\\\"text-link\\\"\\n              *ngIf=\\\"hostInfo.Cluster.Name\\\">Queue status: <b>{{hostInfo.Cluster.Queue}}</b>\\n        </div>\\n    </div>\\n    <div class=\\\"mainSide\\\">\\n        <div *ngIf=\\\"userSession.Module==='Admin' &&\\n                  hostInfo.OpMode==='NODE' &&\\n                  hostInfo.Cluster.MasterIP !=''\\\" class=\\\"exit\\\">\\n            <button class=\\\"btn-sm btn-danger mr-1\\\" (click)=\\\"setOpMode();false;\\\">Exit Cluster</button>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\"","export default \"<md-button class=\\\"md-fab md-fab-bottom-right\\\" aria-label=\\\"Add a category\\\">\\n    <button type=\\\"button\\\" name=\\\"btnCompile\\\" (click)=\\\"onSubmitCode(); false;\\\" [disabled]=\\\"disabled\\\"\\n            class=\\\"btn btn-primary\\\">{{btnCompile}}\\n    </button>\\n    <div class=\\\"btn-group\\\" ngbDropdown role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">\\n        <button (click)=\\\"false;\\\" class=\\\"btn btn-primary dropdown-toggle-split\\\" ngbDropdownToggle\\n                [disabled]=\\\"disabled\\\"></button>\\n        <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\n            <button (click)=\\\"onClick('Compile'); false;\\\" ngbDropdownItem>Compile</button>\\n            <button (click)=\\\"onClick('Compile and Run'); false;\\\" ngbDropdownItem>Compile and Run</button>\\n        </div>\\n    </div>\\n</md-button>\\n\\n<div class=\\\"codeButtons\\\">\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"false;\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>Theme</button>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n            <button (click)=\\\"setTheme('vs-dark'); false;\\\" ngbDropdownItem>Dark</button>\\n            <button (click)=\\\"setTheme('vs'); false;\\\" ngbDropdownItem>Light</button>\\n        </div>\\n    </div>\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"false;\\\" id=\\\"dropdownBasic2\\\" ngbDropdownToggle>Font Size\\n        </button>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic2\\\">\\n            <button (click)=\\\"setFont(8); false;\\\" ngbDropdownItem>8</button>\\n            <button (click)=\\\"setFont(10); false;\\\" ngbDropdownItem>10</button>\\n            <button (click)=\\\"setFont(12); false;\\\" ngbDropdownItem>12</button>\\n            <button (click)=\\\"setFont(14); false;\\\" ngbDropdownItem>14</button>\\n            <button (click)=\\\"setFont(16); false;\\\" ngbDropdownItem>16</button>\\n            <button (click)=\\\"setFont(18); false;\\\" ngbDropdownItem>18</button>\\n            <button (click)=\\\"setFont(20); false;\\\" ngbDropdownItem>20</button>\\n        </div>\\n    </div>\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"false;\\\" id=\\\"dropdownBasic3\\\" ngbDropdownToggle>MiniMap\\n        </button>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic3\\\">\\n            <button (click)=\\\"setMiniMap('true'); false;\\\" ngbDropdownItem>Show</button>\\n            <button (click)=\\\"setMiniMap('false'); false;\\\" ngbDropdownItem>Hide</button>\\n        </div>\\n    </div>\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"false;\\\" id=\\\"dropdownBasic4\\\" ngbDropdownToggle>Load Example\\n            Code\\n        </button>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic4\\\">\\n            <button (click)=\\\"getCodeExample('MPI'); false;\\\" ngbDropdownItem>MPI</button>\\n            <button (click)=\\\"getCodeExample('OpenMP'); false;\\\" ngbDropdownItem>OpenMP</button>\\n            <button (click)=\\\"getCodeExample('CUDA'); false;\\\" ngbDropdownItem>CUDA</button>\\n            <button (click)=\\\"getCodeExample('OpenMP_MPI'); false;\\\" ngbDropdownItem>Hybrid OpenMP/MPI</button>\\n        </div>\\n    </div>\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"false;\\\" id=\\\"dropdownBasic5\\\" ngbDropdownToggle>Code Saving\\n        </button>\\n        <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic5\\\">\\n            <button (click)=\\\"codeTempCall('auto'); false;\\\" ngbDropdownItem>Auto (default)</button>\\n            <button (click)=\\\"codeTempCall('none'); false;\\\" ngbDropdownItem>None</button>\\n            <button (click)=\\\"codeTempCall('load'); false;\\\" ngbDropdownItem>Load last saved code</button>\\n        </div>\\n    </div>\\n    <div ngbDropdown *ngIf=\\\"hostInfo.Queue == 'Off'\\\" class=\\\"d-inline-block\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\"\\n                (click)=\\\"onQueue()\\\"\\n                ngbPopover=\\\"If turn on, you will wait for your turn in the queue, so your code will run without concurrency.\\\"\\n                triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Queuing System\\\">\\n            Queue {{queue?\\\"On\\\":\\\"Off\\\"}}\\n        </button>\\n    </div>\\n\\n</div>\\n<div *ngIf=\\\"load===0\\\">\\n    <app-mat-progress-bar></app-mat-progress-bar>\\n</div>\\n\\n<ng-template #popContent>\\n   <span *ngFor=\\\"let cpu of codePairUsers\\\">\\n       {{cpu.UserName}} <br />\\n    </span>\\n</ng-template>\\n\\n<ngx-monaco-editor *ngIf=\\\"codeInGroup==1\\\"\\n        [ngbPopover]=\\\"popContent\\\"\\n        triggers=\\\"mouseenter:mouseleave\\\"\\n        popoverTitle=\\\"Users Online in the Editor\\\"\\n        class=\\\"editor\\\"\\n        [options]=\\\"editorOptions\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [(ngModel)]=\\\"code.Code\\\"\\n        (ngModelChange)=\\\"onChange($event)\\\"\\n        (keydown)=\\\"onKeydownEvent($event)\\\"\\n        (onInit)=\\\"onInit($event)\\\">\\n</ngx-monaco-editor>\\n\\n<ngx-monaco-editor *ngIf=\\\"codeInGroup==0\\\"\\n        class=\\\"editor\\\"\\n        [options]=\\\"editorOptions\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [(ngModel)]=\\\"code.Code\\\"\\n        (ngModelChange)=\\\"onChange($event)\\\"\\n        (keydown)=\\\"onKeydownEvent($event)\\\"\\n        (onInit)=\\\"onInit($event)\\\">\\n</ngx-monaco-editor>\\n\\n<div class=\\\"card m-12 codeRun\\\">\\n    <form [formGroup]=\\\"codeForm\\\" enctype=\\\"multipart/form-data\\\">\\n\\n        <div class=\\\"form-group\\\" style=\\\"margin-top: 15px;\\\">\\n\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"col-md-{{exercise['gId'] ? '8':'12'}} user-container\\\">\\n\\n\\n                    <div #ResultsTab></div>\\n\\n                    <ul ngbNav #nav=\\\"ngbNav\\\" [(activeId)]=\\\"navActive\\\" class=\\\"nav-tabs\\\" [destroyOnHide]=\\\"false\\\">\\n                        <li ngbDropdown [ngbNavItem]=\\\"1\\\">\\n\\n                            <a ngbNavLink ngbDropdownToggle>Parameters</a>\\n                            <div ngbDropdownMenu>\\n                                <button (click)=\\\"setManualParameters('MPI'); false;\\\" ngbDropdownItem>MPI</button>\\n                                <button (click)=\\\"setManualParameters('OpenMP'); false;\\\" ngbDropdownItem>OpenMP</button>\\n                                <button (click)=\\\"setManualParameters('CUDA'); false;\\\" ngbDropdownItem>CUDA</button>\\n                                <div class=\\\"dropdown-divider\\\"></div>\\n                                <button (click)=\\\"setManualParameters('OpenMP_MPI'); false;\\\" ngbDropdownItem>Hybrid\\n                                    OpenMP/MPI\\n                                </button>\\n                                <div class=\\\"dropdown-divider\\\"></div>\\n                                <button (click)=\\\"setManualParameters('Manual'); false;\\\" ngbDropdownItem>Manual</button>\\n                            </div>\\n                            <ng-template ngbNavContent>\\n\\n                                <div class=\\\"form-row codeRun\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        Command (compile)\\n                                    </div>\\n                                    <div class=\\\"col-md-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"CompCmd\\\" (keyup)=\\\"updateParameters()\\\"\\n                                               class=\\\"form-control\\\"\\n                                               [ngClass]=\\\"{ 'is-invalid': submitted && fc.CompCmd.errors }\\\"/>\\n                                        <div *ngIf=\\\"submitted && fc.CompCmd.errors\\\" class=\\\"error response\\\">\\n                                            <div *ngIf=\\\"fc.CompCmd.errors.required\\\">Field is required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row codeRun\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        <a href=\\\"#\\\" ngbPopover=\\\"The binary and code file name must always be main.\\\"\\n                                           triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Attention\\\">\\n                                            Arguments (compile)\\n                                        </a>\\n                                    </div>\\n                                    <div class=\\\"col-md-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"CompArgs\\\" (keyup)=\\\"updateParameters()\\\"\\n                                               class=\\\"form-control\\\"\\n                                               [ngClass]=\\\"{ 'is-invalid': submitted && fc.CompArgs.errors }\\\"/>\\n                                        <div *ngIf=\\\"submitted && fc.CompArgs.errors\\\" class=\\\"error response\\\">\\n                                            <div *ngIf=\\\"fc.CompArgs.errors.required\\\">Field is required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row codeRun\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        Command (execute)\\n                                    </div>\\n                                    <div class=\\\"col-md-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"ExecCmd\\\" (keyup)=\\\"updateParameters()\\\"\\n                                               class=\\\"form-control\\\"\\n                                               [ngClass]=\\\"{ 'is-invalid': submitted && fc.ExecCmd.errors }\\\"/>\\n                                        <div *ngIf=\\\"submitted && fc.ExecCmd.errors\\\" class=\\\"error response\\\">\\n                                            <div *ngIf=\\\"fc.ExecCmd.errors.required\\\">Field is required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row codeRun\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        <a href=\\\"#\\\" ngbPopover=\\\"The binary and code file name must always be main.\\\"\\n                                           triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Attention\\\">\\n                                            Arguments (execute)\\n                                        </a>\\n                                    </div>\\n                                    <div class=\\\"col-md-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"ExecArgs\\\" (keyup)=\\\"updateParameters()\\\"\\n                                               class=\\\"form-control\\\"\\n                                               [ngClass]=\\\"{ 'is-invalid': submitted && fc.ExecArgs.errors }\\\"/>\\n                                        <div *ngIf=\\\"submitted && fc.ExecArgs.errors\\\" class=\\\"error response\\\">\\n                                            <div *ngIf=\\\"fc.ExecArgs.errors.required\\\">Field is required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row codeRun\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        <a href=\\\"#\\\" ngbPopover=\\\"You can add extra arguments for the execution.\\\"\\n                                           triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Attention\\\">\\n                                            Extra Arguments (execute)\\n                                        </a>\\n                                    </div>\\n                                    <div class=\\\"col-md-9\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"ExtraArgs\\\" (keyup)=\\\"updateParameters()\\\"\\n                                               class=\\\"form-control\\\"/>\\n                                    </div>\\n                                </div>\\n                            </ng-template>\\n                        </li>\\n\\n                        <li [ngbNavItem]=\\\"2\\\">\\n                            <a ngbNavLink>Files</a>\\n                            <ng-template ngbNavContent>\\n                                <div *ngIf=\\\"!exercise.MaxFileSize && exerciseFiles?.length===0\\\"\\n                                     class=\\\"card form-group col-md-6\\\">\\n                                    No parameters were defined for the use of files in this exercise.\\n                                </div>\\n\\n                                <div class=\\\"form-row codeRun\\\">\\n\\n                                    <div *ngIf=\\\"exercise.MaxFileSize || tryACode==='1'\\\" class=\\\"col-md-4 card\\\">\\n                                        <a href=\\\"#\\\" ngbPopover=\\\"You can upload a file and use it in your code.\\n                            To call the file, use the example shown in the box.\\\"\\n                                           triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Upload a file\\\">\\n                                            Add a file for this run <br/>\\n                                        </a>\\n                                        <span class=\\\"response\\\">(MaxFileSize: {{_util.formatBytes(exercise.MaxFileSize)}})</span>\\n                                        <form enctype=\\\"multipart/form-data\\\">\\n                                            <input class=\\\"btn-default\\\" type='file'\\n                                                   data-max-size=\\\"10\\\"\\n                                                   name=\\\"media\\\" #selectfile\\n                                                   (click)=\\\"resetFormFile()\\\">\\n                                            <br/>\\n                                            <button type=\\\"button\\\" (click)=\\\"uploadFile()\\\">Upload</button>\\n                                            <br/>\\n                                            <progress [value]=progress.loaded [max]=progress.total></progress>\\n                                            <div class=\\\"card-body\\\">\\n                                                <div *ngIf=\\\"responseFile.Name\\\" class=\\\"{{responseFile.Name}}\\\">\\n                                                    {{responseFile.Status}}\\n                                                </div>\\n                                            </div>\\n                                        </form>\\n\\n                                        <hr/>\\n                                        <span *ngIf=\\\"fileCodeExecution?.length!==0\\\">\\n                                            Files uploaded to the server:\\n                                        </span>\\n                                        <span *ngFor=\\\"let p of fileCodeExecution\\\">\\n                                        <a href=\\\"#\\\" (click)=\\\"setFileCodeExecution(p); false\\\"\\n                                           ngbPopover=\\\"Click to add the filename in extra arguments.\\\"\\n                                           triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Add in Extra Arguments\\\">\\n                                            {{p}}\\n                                        </a>\\n                                            <br/>\\n\\n                                        </span>\\n                                        <br/>\\n                                        <span>Files uploaded to the server:\\n                                                <br/>1. Files are automatically deleted after logout.\\n                                                <br/>2. To replace a file, upload another one with the same name.\\n                                        </span>\\n\\n                                    </div>\\n\\n                                    <div *ngIf=\\\"exerciseFiles?.length > 0\\\" class=\\\"col-md-4 card\\\">\\n                                        <mat-label>\\n                                            <a href=\\\"#\\\" popoverTitle=\\\"This exercise has input files.\\n                                You can call them using the example shown in the box.\\\"\\n                                               triggers=\\\"mouseenter:mouseleave\\\" ngbPopover=\\\"\\\">\\n                                                Add input files\\n                                            </a>\\n                                        </mat-label>\\n\\n\\n                                        <mat-select [formControl]=\\\"files\\\" multiple [disabled]=\\\"disabled\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    (selectionChange)=\\\"setFileParameters('')\\\">\\n                                            <mat-select-trigger class=\\\"selection\\\">\\n                                                {{files.value ? files.value[0] : ''}}\\n                                                <span *ngIf=\\\"files.value?.length > 1\\\">\\n        (+{{files.value.length - 1}} {{files.value?.length === 2 ? 'other' : 'others'}})\\n                                        </span>\\n                                            </mat-select-trigger>\\n                                            <mat-option *ngFor=\\\"let n of exerciseFiles\\\" [value]=\\\"n.FileName\\\">\\n                                                {{n.FileName}}\\n                                            </mat-option>\\n                                        </mat-select>\\n                                        <hr/>\\n                                        Click the file to download:\\n                                        <div *ngFor=\\\"let f of exerciseFiles\\\" class=\\\"files\\\">\\n                                            <div class=\\\"form-row text-center\\\">\\n                                                <a href=\\\"#\\\" (click)=\\\"download(f); false;\\\"\\n                                                   popoverTitle=\\\"Download\\\"\\n                                                   triggers=\\\"mouseenter:mouseleave\\\"\\n                                                   ngbPopover=\\\"Click to download this file.\\\">\\n                                                    {{f.FileName}}\\n                                                </a>\\n                                                <br/>\\n                                            </div>\\n                                        </div>\\n\\n                                    </div>\\n\\n                                    <div class=\\\"col-md-4 card\\\">\\n                                        You can upload a file to the code via STDIN, example:\\n                                        <code>\\n                                            program < file.txt\\n                                        </code>\\n                                        <br/>or read an array from a file:\\n                                        <code>\\n                                            FILE * pFile;\\n                                            <br/>\\n                                            pFile = fopen (\\\"file.txt\\\",\\\"r\\\");\\n                                            <br/>\\n                                            fscanf(pFile, \\\"%d \\\", &lin);\\n                                            <br/>\\n                                            fscanf(pFile, \\\"%d\\\\n\\\", &col);\\n                                            <br/>\\n                                            fscanf(pFile, \\\"%lf\\\\n\\\", &limiar);\\n                                            <br/>\\n                                        </code>\\n                                    </div>\\n\\n                                </div>\\n\\n\\n                            </ng-template>\\n                        </li>\\n\\n                        <li [ngbNavItem]=\\\"3\\\">\\n                            <a ngbNavLink>Nodes <span class=\\\"response\\\">(MPI)</span></a>\\n                            <ng-template ngbNavContent>\\n\\n                                <div class=\\\"form-group col-md-3\\\">\\n                                    Number of process\\n                                    <input type=\\\"number\\\" formControlName=\\\"NumberProc\\\"\\n                                           (click)=\\\"setManualParameters('');\\\"\\n                                           onkeydown=\\\"return false\\\"\\n                                           onclick=\\\"return false\\\"\\n                                           class=\\\"form-control\\\"\\n                                           [ngClass]=\\\"{ 'is-invalid': submitted && fc.NumberProc.errors }\\\"/>\\n                                    <div *ngIf=\\\"submitted && fc.NumberProc.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"fc.NumberProc.errors.required\\\">Number of process is required</div>\\n                                        <div *ngIf=\\\"fc.NumberProc.errors.min\\\">Process must be at least 1 number</div>\\n                                        <div *ngIf=\\\"fc.NumberProc.errors.generic\\\">{{fc.numberProc.errors.generic}}</div>\\n                                    </div>\\n                                    <div *ngIf=\\\"msgOverLoad\\\" class=\\\"runTimeout\\\">{{msgOverLoad}}</div>\\n                                </div>\\n                                <div class=\\\"form-group col-md-3\\\">\\n                                    <mat-label>\\n                                        <a href=\\\"#\\\" ngbPopover=\\\"Select one or more nodes to run the code.\\\"\\n                                           triggers=\\\"mouseenter:mouseleave\\\" popoverTitle=\\\"Cluster Nodes\\\">\\n                                            Nodes\\n                                        </a>\\n                                    </mat-label>\\n                                    <mat-select [formControl]=\\\"containers\\\" multiple [disabled]=\\\"disabled\\\"\\n                                                class=\\\"form-control\\\"\\n                                                (selectionChange)=\\\"setManualParameters('')\\\">\\n                                        <mat-select-trigger class=\\\"selection\\\">\\n                                            {{containers.value ? containers.value[0] : ''}}\\n                                            <span *ngIf=\\\"containers.value?.length > 1\\\">\\n        (+{{containers.value.length - 1}} {{containers.value?.length === 2 ? 'other' : 'others'}})\\n                                    </span>\\n                                        </mat-select-trigger>\\n                                        <mat-option *ngFor=\\\"let n of nodes\\\" [value]=\\\"n\\\">{{n}}</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                            </ng-template>\\n                        </li>\\n\\n                        <li [ngbNavItem]=\\\"4\\\">\\n                            <a ngbNavLink>Results</a>\\n                            <ng-template ngbNavContent>\\n\\n                                <div class=\\\"card m-3\\\" *ngIf=\\\"programStatus\\\">\\n                                    <h6 class=\\\"card-header\\\">{{btnCompile}} ->| Program {{programStatus}} </h6>\\n                                    <span class=\\\"queuePosition\\\">Queue Position: {{queueStatus}}</span>\\n                                    <span class=\\\"runTimeout\\\">Running timeout: {{programTimeout}}</span>\\n\\n                                    <div *ngIf=\\\"sequence?.length > 1\\\">\\n                                        <app-mat-progress-bar></app-mat-progress-bar>\\n                                    </div>\\n\\n                                    <div class=\\\"card-body\\\">\\n                                        <div *ngIf=\\\"response.Command\\\" class=\\\"serviceOk\\\">\\n                                            {{command}}\\n                                        </div>\\n                                        <hr/>\\n                                        <div *ngIf=\\\"response.Name\\\" class=\\\"{{response.Name}}\\\">\\n                                            {{response.Status}}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <hr/>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <ngx-monaco-editor class=\\\"editorResult\\\"\\n                                                       [options]=\\\"resultOptions\\\"\\n                                                       [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                       [(ngModel)]=\\\"code.Result\\\">\\n                                    </ngx-monaco-editor>\\n\\n                                </div>\\n\\n                            </ng-template>\\n                        </li>\\n\\n                        <li [ngbNavItem]=\\\"5\\\">\\n                            <a ngbNavLink>Special Tags</a>\\n                            <ng-template ngbNavContent>\\n                                <div class=\\\"card-body\\\" *ngIf=\\\"msgProcess\\\">\\n                                    <table class=\\\"table table-striped\\\">\\n                                        <tr *ngFor=\\\"let p of msgProcess | keyvalue\\\">\\n                                            <td>\\n                                                <span class='iconServer'></span>\\n                                                <b>Node {{p.key}} (Number of process per node: {{p.value.length}})</b>\\n                                                <ng-container *ngFor=\\\"let r of p.value\\\">\\n                                                    <ul>\\n                                                        <li>\\n                                                            <span class='iconTask'></span>\\n                                                            <span>{{r}}</span>\\n                                                        </li>\\n                                                    </ul>\\n                                                </ng-container>\\n                                            </td>\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n\\n                                <div class=\\\"card m-12\\\">\\n                                    <div class=\\\"card-body\\\">\\n                                        To view custom OpenMPI output by grouping processes with ranks and messages,\\n                                        use the tags according to the template below:\\n\\n                                        <p>Example of use:</p>\\n\\n                                        <code>printf(\\\"message: &#123;M&#125;%s&#123;M&#125; from processor: &#123;P&#125;%s&#123;P&#125;,\\n                                            rank: &#123;R&#125;%d&#123;R&#125; out of %d processors\\\\n\\\",\\n                                            \\\"Hello World\\\", processor_name, world_rank, world_size);</code>\\n                                    </div>\\n                                </div>\\n                            </ng-template>\\n                        </li>\\n\\n                        <li [ngbNavItem]=\\\"6\\\" (click)=\\\"getSysInfo(); false;\\\">\\n                            <a ngbNavLink>SysInfo</a>\\n                            <ng-template ngbNavContent>\\n                                <table class=\\\"table table-striped\\\">\\n                                    <tr *ngFor=\\\"let p of sysInfo\\\">\\n                                        <td>\\n                                            <b>{{p.Name}}:</b> {{p.Value}}\\n                                        </td>\\n                                    </tr>\\n                                </table>\\n                            </ng-template>\\n                        </li>\\n\\n                    </ul>\\n                    <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n\\n                </div>\\n                <div class=\\\"col-md-4 user-container\\\" *ngIf=\\\"exercise['gId']\\\">\\n                    Group Chat\\n                    <mat-divider></mat-divider>\\n                    <div style=\\\"overflow-y: scroll; min-height: 100px; height: 300px;\\\">\\n                        <div *ngFor=\\\"let m of chatList index as i\\\">\\n                            <div class=\\\"{{0 === i % 2 ? 'chat' : 'chat darker'}} {{userId === m.IdUser ? 'user' : ''}}\\\">\\n                                <mat-icon class=\\\"{{0 === i % 2 ? 'chatIcon-right' : 'chatIcon'}}\\\" mat-list-icon>\\n                                    account_circle\\n                                </mat-icon>\\n                                <p style=\\\"width: 100%; margin-left: 10px;\\\">{{m.Text}}</p>\\n                                <span class=\\\"{{0 === i % 2 ? 'time-right' : 'time-right'}} {{userId === m.IdUser ? 'time-user' : ''}}\\\">{{m.Name}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <form (ngSubmit)=\\\"sendMsgChat()\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <input id=\\\"chatMsg\\\" [(ngModel)]=\\\"chatMsg\\\"\\n                                   placeholder=\\\"type message and press enter\\\"\\n                                   class=\\\"form-control\\\" style=\\\"max-width: 70%;\\\" autofocus\\n                                   [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        </div>\\n                        <input class=\\\"btn-primary\\\" type=\\\"submit\\\" value=\\\"add\\\" style=\\\"display: none\\\">\\n                    </form>\\n\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </form>\\n</div>\\n\\n\"","export default \"\\n<div class=\\\"loginMain\\\">\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!userSession.Owner\\\">\\n    <a href=\\\"#\\\" class=\\\"login\\\" (click)=\\\"setRoute('host-login');false;\\\">Login</a>\\n  </div>\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!userSession.Owner && hostInfo['SelfRegistration']==='On'\\\">\\n    <a href=\\\"#\\\" (click)=\\\"addUser(); false;\\\">Sign up</a>\\n  </div>\\n</div>\\n\\n\\n<div *ngIf=\\\"userSession.Owner\\\" class=\\\"exit\\\">\\n  <span class=\\\"session\\\" [ngClass]=\\\"{'error':idleState !== '30 m'}\\\">Inactivity session logout: {{idleState}}</span>\\n\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n    <mat-icon>account_circle</mat-icon>\\n  </button>\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item>\\n      <span>{{userSession.Name}} ({{userSession.Module}})</span>\\n    </button>\\n\\n    <button *ngIf=\\\"userSession.Module!=='Admin'\\\" mat-menu-item (click)=\\\"setRoute('edit-user');false;\\\">\\n      <mat-icon>lock</mat-icon>\\n      <span>Update Profile</span>\\n    </button>\\n\\n    <button *ngIf=\\\"userSession.Module==='Admin'\\\" mat-menu-item (click)=\\\"setRoute('settings');false;\\\">\\n    <mat-icon>lock</mat-icon>\\n    <span>Update Profile</span>\\n    </button>\\n\\n    <button mat-menu-item (click)=\\\"logout();false;\\\">\\n      <mat-icon>exit_to_app</mat-icon>\\n      <span>Logout</span>\\n    </button>\\n  </mat-menu>\\n</div>\\n\\n\\n\"","export default \"<div class=\\\"loginMain card m-3 tags\\\">\\n\\n  <div class=\\\"login card m-3 tags\\\">\\n    <h6 class=\\\"card-header\\\">\\n      <div class=\\\"host\\\">\\n        <div class=\\\"name\\\">Host Credentials</div>\\n      </div>\\n    </h6>\\n    <div class=\\\"card-body\\\">\\n      <form *ngIf=\\\"!userSession.Owner\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n            class=\\\"d-flex justify-content-center\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"owner\\\"\\n                   class=\\\"form-control\\\" placeholder=\\\"Email\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': submitted && f.owner.errors }\\\" />\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\"\\n                   class=\\\"form-control\\\" placeholder=\\\"Password\\\"\\n                   [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n            <span class=\\\"session\\\"><a href=\\\"#\\\" (click)=\\\"recoverPassword(); false;\\\">Recover Password</a></span>\\n            <div *ngIf=\\\"submitted && f.owner.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.owner.errors.required\\\">Field is required</div>\\n              <div *ngIf=\\\"f.owner.errors.minlength\\\">Email Or Password must be at least 4 characters</div>\\n              <div *ngIf=\\\"f.owner.errors.generic\\\">{{f.owner.errors.generic}}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"buttons text-center flex-column\\\">\\n            <div class=\\\"text-center\\\">\\n              <button class=\\\"btn btn-primary mr-1\\\">OK</button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n\\n      <div class=\\\"response text-center\\\" *ngIf=\\\"response.Name\\\">\\n        <div *ngIf=\\\"response.Name==='info'\\\" class=\\\"{{response.Name}}\\\">{{response.Status}}\\n          <app-mat-progress-bar></app-mat-progress-bar>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"\\n<ng-template #popContent>\\n  <span>Your Hostname: {{hostInfo.Hostname}}</span>\\n  <br /><span>Operation Mode: <b>{{hostInfo.OpMode}}</b></span>\\n  <br /><span>Queuing System: <b>{{hostInfo.Queue}}</b> (Max. Concurrency: <b>{{hostInfo.MaxConcurrency}}</b>)</span>\\n  <br /><span class=\\\"{{hostConnection.Name}}\\\">\\n            Connection Status: <b>{{hostConnection.Status}}</b></span>\\n  <br />\\n  <div *ngIf=\\\"hostConnection['Name']==='info'\\\" class=\\\"response\\\">\\n    <app-mat-progress-bar></app-mat-progress-bar>\\n  </div>\\n</ng-template>\\n\\n<img class=\\\"icon\\\" container=\\\"body\\\" src=\\\"{{hostConnection['Name']==='ok'? '../../assets/serverOn.png':'../../assets/serverOff.png'}}\\\"\\n       [ngbPopover]=\\\"popContent\\\"\\n       triggers=\\\"mouseenter:mouseleave\\\"\\n       popoverTitle=\\\"About this server\\\" />\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>{{fe.Id.value ? \\\"Edit\\\":\\\"Add\\\"}} Classroom</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-classroom')\\\" style=\\\"margin-left: 20px;\\\">Classroom</button>\\n    </div>\\n  </h6>\\n  <br />\\n  <div class=\\\"col-md-12 group-container\\\">\\n    <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Name\\\">Name:</label>\\n        <input class=\\\"text\\\" type=\\\"text\\\" formControlName=\\\"Name\\\" name=\\\"Name\\\" id=\\\"Name\\\">\\n        <div *ngIf=\\\"submitted && fe.Name.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Name.errors.required\\\">Field Name is required</div>\\n          <div *ngIf=\\\"fe.Name.errors.minlength\\\">Name field must have a minimum of 5 characters</div>\\n          <div *ngIf=\\\"fe.Name.errors.maxlength\\\">Name must be a maximum of 50 characters</div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"KeyAccess\\\">Self-registration Key:</label>\\n        <input class=\\\"text\\\" type=\\\"text\\\" min=\\\"0\\\" max=\\\"60\\\" formControlName=\\\"KeyAccess\\\"\\n               name=\\\"KeyAccess\\\" id=\\\"KeyAccess\\\">\\n        <div *ngIf=\\\"submitted && fe.KeyAccess.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.KeyAccess.errors.maxlength\\\">The key must be up to 60 characters long</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"MaxStudents\\\">Maximum Number of Students:</label>\\n        <input class=\\\"number\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000\\\" formControlName=\\\"MaxStudents\\\"\\n               name=\\\"MaxStudents\\\" id=\\\"MaxStudents\\\">\\n        <div *ngIf=\\\"submitted && fe.MaxStudents.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.MaxStudents.errors.max\\\">The maximum number of students allowed is 100</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Name\\\">Description:</label>\\n        <ckeditor [editor]=\\\"Editor\\\" [config]=\\\"config\\\" formControlName=\\\"Description\\\"></ckeditor>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">{{fe.Id.value? \\\"Update\\\":\\\"Insert\\\"}}</button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <div style=\\\"float: left\\\">\\n            <span *ngIf=\\\"notSel===1\\\">Classroom</span>\\n            <span class=\\\"{{classroom.Enabled ? 'Enabled':'Disabled'}}\\\">\\n            {{classroom.Name}} ({{classroom.Enabled ? \\\"Enabled\\\":\\\"Disabled\\\"}})\\n            </span>\\n        </div>\\n        <div style=\\\"float: right\\\" *ngIf=\\\"classroom.Name && (userSession.Module==='Admin' ||\\n                           classroomModule==='Lecture' ||\\n                           classroom.IdUser==userSession.Id)\\\">\\n            <button\\n                    class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"disableClassroom()\\\">\\n                {{classroom.Enabled ? \\\"Disable\\\":\\\"Enable\\\"}}\\n            </button>\\n            <button\\n                    class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"editClassroom()\\\">Edit\\n            </button>\\n        </div>\\n    </h6>\\n    <div class=\\\"col-md-12 user-container\\\">\\n        <div *ngIf=\\\"notSel===1 \\\">\\n            Please, select one classroom.\\n        </div>\\n\\n        <div *ngIf=\\\"notSel===0 && loadC===0\\\">\\n            <app-mat-progress-bar></app-mat-progress-bar>\\n        </div>\\n\\n        <div *ngIf=\\\"(!classroom && loadC===1)\\\">\\n            No records found.\\n        </div>\\n\\n        <div class=\\\"form-group\\\" *ngIf=\\\"(classroom && loadC===1)\\\" style=\\\"margin-top: 15px;\\\">\\n\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header\\\" style=\\\"min-height: 141px;\\\">\\n                            Description\\n                            <mat-divider></mat-divider>\\n                            <br />\\n                            <div [innerHTML]=\\\"classroom.Description\\\" class=\\\"description\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header\\\" style=\\\"min-height: 141px;\\\">\\n                            <p class=\\\"description\\\" *ngIf=\\\"classroomModule || userSession.Module==='Admin'\\\">Self-registration key: {{classroom.KeyAccess}}</p>\\n\\n                            <div class=\\\"col-md-12 user-container\\\" *ngIf=\\\"!classroomModule && userSession.Module!=='Admin'\\\">\\n                                <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"form-group col-md-6\\\">\\n                                            <label for=\\\"KeyAccess\\\">Self-registration key:</label>\\n                                            <input type=\\\"text\\\" formControlName=\\\"KeyAccess\\\" placeholder=\\\"KeyAccess\\\"\\n                                                   name=\\\"KeyAccess\\\" class=\\\"form-control\\\" id=\\\"KeyAccess\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group col-md-6\\\">\\n                                            <button class=\\\"btn-sm btn-success\\\">Insert Key</button>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div *ngIf=\\\"submitted && fe.KeyAccess.errors\\\" class=\\\"error response\\\">\\n                                        <div *ngIf=\\\"fe.KeyAccess.errors.maxlength\\\">The key must be up to 60 characters\\n                                            long\\n                                        </div>\\n                                    </div>\\n                                </form>\\n                            </div>\\n\\n\\n                            <p class=\\\"description\\\">Maximum number of students: {{classroom.MaxStudents}}</p>\\n                            Members\\n                            <mat-divider></mat-divider>\\n                            <div *ngIf=\\\"loadM===0\\\">\\n                                <app-mat-progress-bar></app-mat-progress-bar>\\n                            </div>\\n\\n                            <div *ngIf=\\\"(!classroom && loadM===1)\\\">\\n                                No members found.\\n                            </div>\\n                            <table class=\\\"table table-striped\\\">\\n                                <tr *ngFor=\\\"let u of users\\\">\\n                                    <td>\\n                                        <img src=\\\"../../../assets/{{u.Module}}.jpg\\\" width=\\\"20px\\\"/>\\n                                        <span class=\\\"description\\\">{{u.Module}} - {{u.Name}}: {{u.Email}}</span>\\n                                    </td>\\n                                </tr>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>Answer: {{exercise.Title}} {{answerName?'('+answerName+')':''}}</span>\\n      <br />\\n      <span *ngIf=\\\"(exIsExpired >= 0)\\\"\\n            class=\\\"time\\\" style=\\\"font-size: 12px;\\\">Time to finish: {{countDown}}\\n            </span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-answer')\\\" style=\\\"margin-left: 20px;\\\">Answers</button>\\n    </div>\\n  </h6>\\n\\n  <div *ngIf=\\\"load===0\\\">\\n    <app-mat-progress-bar></app-mat-progress-bar>\\n  </div>\\n\\n  <div class=\\\"col-md-12 group-container\\\">\\n\\n    <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <br />\\n      <ul ngbNav #nav=\\\"ngbNav\\\" class=\\\"nav-tabs\\\" [(activeId)]=\\\"navActive\\\" [destroyOnHide]=\\\"false\\\">\\n        <li [ngbNavItem]=\\\"1\\\">\\n          <a ngbNavLink>Content</a>\\n          <ng-template ngbNavContent>\\n            <div class=\\\"card m-12\\\">\\n              <h6 class=\\\"card-header\\\">Exercise description</h6>\\n              <div class=\\\"card-body\\\">\\n                <div [innerHTML]=\\\"exercise.Content\\\"></div>\\n              </div>\\n            </div>\\n\\n          </ng-template>\\n        </li>\\n\\n        <li [ngbNavItem]=\\\"2\\\">\\n          <a ngbNavLink>Coding</a>\\n          <ng-template ngbNavContent>\\n\\n            <div class=\\\"form-group code\\\">\\n              <app-code></app-code>\\n            </div>\\n\\n          </ng-template>\\n        </li>\\n\\n        <li [ngbNavItem]=\\\"3\\\">\\n          <a ngbNavLink>Diff</a>\\n          <ng-template ngbNavContent>\\n\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"diff\\\">\\n                <div class=\\\"diffAdmin\\\">Admin Result</div>\\n                <div class=\\\"diffUser\\\">Your Result:\\n                  <button (click)=\\\"false\\\" *ngIf=\\\"diff\\\" [ngClass]=\\\"(diff=='EQUAL')?'btn-sm btn btn-success':'btn-sm btn btn-danger'\\\">\\n                    {{diff}}\\n                  </button>\\n                </div>\\n              </div>\\n\\n              <ngx-monaco-diff-editor\\n                      [options]=\\\"resultOptions\\\"\\n                      [originalModel]=\\\"originalModel\\\"\\n                      [modifiedModel]=\\\"modifiedModel\\\">\\n\\n              </ngx-monaco-diff-editor>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Comment\\\">Comment:</label>\\n              <textarea class=\\\"text\\\" type=\\\"text\\\" formControlName=\\\"Comment\\\" name=\\\"Comment\\\" id=\\\"Comment\\\"></textarea>\\n            </div>\\n\\n          </ng-template>\\n        </li>\\n\\n      </ul>\\n      <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n\\n      <div class=\\\"form-group\\\">\\n        <br /><button *ngIf=\\\"!Score && exIsExpired > 0 && exercise.MaxSubmissions > TotalEx\\\"\\n                      class=\\\"btn-sm btn-success\\\">Submit</button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <div style=\\\"float: left\\\">\\n            <span>Last Exercise Answers: {{exercise.Title}}</span>\\n            <br/>\\n            <span *ngIf=\\\"(exIsExpired >= 0)\\\"\\n                  class=\\\"time\\\" style=\\\"font-size: 12px;\\\">Time to finish: {{countDown}}\\n            </span>\\n        </div>\\n        <div style=\\\"float: right\\\">\\n            <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-exercise')\\\" style=\\\"margin-left: 20px;\\\">\\n                Exercises\\n            </button>\\n            <button *ngIf=\\\"(userSession.Module==='User' && totalAnswers < exercise.MaxSubmissions\\n                                        && exIsExpired >= 0 && !score)\\n            || (  (userSession.Module==='Admin' || module==='Assistant' || module==='Lecturer')\\n                   && exIsExpired >= 0 && !score\\n               )\\\" class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"addAnswer()\\\">\\n                Add\\n            </button>\\n        </div>\\n    </h6>\\n\\n    <div *ngIf=\\\"load===0\\\">\\n        <app-mat-progress-bar></app-mat-progress-bar>\\n    </div>\\n\\n    <div *ngIf=\\\"(answers?.length <= 0 && load===1)\\\">\\n        No records found.\\n    </div>\\n\\n    <div class=\\\"filter\\\">\\n        <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($any($event.target).value)\\\" placeholder=\\\"Filter: \\\">\\n        </mat-form-field>\\n        <div *ngIf=\\\"userSession.Module==='Admin' || module==='Assistant' || module==='Lecturer' \\\" class=\\\"buttonMenu\\\">\\n\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn-sm btn-success\\\" (click)=\\\"checkSimilarity(); false;\\\" style=\\\"margin-left: 20px;\\\">Check\\n                    Similarity\\n                </button>\\n            </div>\\n            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"false;\\\" id=\\\"dropdownBasic2\\\" ngbDropdownToggle>Export\\n                    Results\\n                </button>\\n                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic2\\\">\\n                    <button (click)=\\\"download('allExec'); false;\\\" ngbDropdownItem disabled>All Executions</button>\\n                    <button (click)=\\\"download('lastExec'); false;\\\" ngbDropdownItem>Last Executions</button>\\n                    <button (click)=\\\"download('allCode'); false;\\\" ngbDropdownItem disabled>All Codes</button>\\n                    <button (click)=\\\"download('lastCode'); false;\\\" ngbDropdownItem>Last Codes</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"example-container mat-elevation-z8 \\\">\\n\\n        <table mat-table\\n               [dataSource]=\\\"dataSource\\\" multiTemplateDataRows\\n               class=\\\"mat-elevation-z8\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"Id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}}</td>\\n            </ng-container>\\n\\n            <!-- Title Column -->\\n            <ng-container matColumnDef=\\\"Name\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name/Group</th>\\n                <td mat-cell *matCellDef=\\\"let row;let i = dataIndex;\\\">\\n                    <a *ngIf=\\\"row.gId && (userSession.Module==='Admin' || module==='Assistant' || module==='Lecturer')\\\"\\n                       href=\\\"#\\\" (click)=\\\"getHistoryGroup(row.gId); false;\\\"\\n                       placement=\\\"top\\\" ngbTooltip=\\\"Click to show the group history\\\">\\n                        {{row.gId ? row.gName : row.Name}}\\n                    </a>\\n                    <a *ngIf=\\\"!row.gId || (row.gId && userSession.Module!=='Admin' && module!=='Assistant' && module!=='Lecturer')\\\">\\n                        {{row.gId ? row.gName : row.Name}}\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <!-- ExpirationDate Column -->\\n            <ng-container matColumnDef=\\\"Date\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Submission</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Date}}</td>\\n            </ng-container>\\n\\n            <!-- Status Column -->\\n            <ng-container matColumnDef=\\\"Status\\\">\\n                <th mat-header-cell *matHeaderCellDef> Last Result</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                    <button data-html=\\\"true\\\" id=\\\"button\\\" placement=\\\"top\\\"\\n                            [ngClass]=\\\"(element.Status=='EQUAL')?'btn-sm btn btn-success':'btn-sm btn btn-danger'\\\">\\n                        {{element.Status}}\\n                    </button>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Score Time Column -->\\n            <ng-container matColumnDef=\\\"Score\\\">\\n                <th mat-header-cell *matHeaderCellDef> Score / Feedback</th>\\n                <td mat-cell *matCellDef=\\\"let row;let i = dataIndex;\\\">\\n                    <a *ngIf=\\\"userSession.Module==='Admin' || module==='Assistant' || module==='Lecturer'\\\"\\n                       href=\\\"#\\\" (click)=\\\"changeScore(i, row); false;\\\"\\n                       placement=\\\"top\\\" ngbTooltip=\\\"Click to change\\\">\\n                        {{row.Score ? row.Score:\\\"No\\\"}}/{{row.Feedback ? \\\"Yes\\\":\\\"No\\\"}}\\n                    </a>\\n                    <a *ngIf=\\\"userSession.Module!=='Admin' && module!=='Assistant' && module!=='Lecturer'\\\"\\n                       href=\\\"#\\\" (click)=\\\"showFeedback(i); false;\\\"\\n                       placement=\\\"top\\\" ngbTooltip=\\\"Click to show the feedback\\\">\\n                        {{row.Score ? row.Score:\\\"No\\\"}}/{{row.Feedback ? \\\"Yes\\\":\\\"No\\\"}}\\n                    </a>\\n                </td>\\n            </ng-container>\\n\\n            <!-- Response Time Column -->\\n            <ng-container matColumnDef=\\\"TotalEx\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Attempts Number</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.TotalEx}}</td>\\n            </ng-container>\\n\\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n            <ng-container matColumnDef=\\\"expandedDetail\\\">\\n                <td mat-cell *matCellDef=\\\"let element;let r = dataIndex;\\\" [attr.colspan]=\\\"displayedColumns.length\\\">\\n                    <div class=\\\"element-detail\\\"\\n                         [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n\\n\\n                        <table mat-table [dataSource]=\\\"element.run\\\" matSort>\\n\\n                            <!-- Index Column -->\\n                            <ng-container matColumnDef=\\\"Index2\\\">\\n                                <mat-header-cell *matHeaderCellDef> #</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let row;let i = index\\\"> {{i+1}}</mat-cell>\\n                            </ng-container>\\n\\n                            <!-- Name Column -->\\n                            <ng-container matColumnDef=\\\"Name2\\\">\\n                                <mat-header-cell *matHeaderCellDef> Submitted by</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Name}}</mat-cell>\\n                            </ng-container>\\n\\n                            <!-- Date Column -->\\n                            <ng-container matColumnDef=\\\"Date2\\\">\\n                                <mat-header-cell *matHeaderCellDef> Submission</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Date}}</mat-cell>\\n                            </ng-container>\\n\\n                            <!-- CheckCount Column -->\\n                            <ng-container matColumnDef=\\\"CheckCount2\\\">\\n                                <mat-header-cell *matHeaderCellDef> Code Analysis</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                                    <a href=\\\"#\\\" (click)=\\\"showList(element.CheckList); false;\\\">\\n                                        <mat-progress-bar id=\\\"checkBar\\\"\\n                                                          placement=\\\"top\\\" ngbTooltip=\\\"Click to see code analysis\\\"\\n                                                          mode=\\\"determinate\\\"\\n                                                          value=\\\"{{element.CheckCount}}\\\"></mat-progress-bar>\\n                                    </a>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <!-- ExecTime Column -->\\n                            <ng-container matColumnDef=\\\"ExecTime2\\\">\\n                                <mat-header-cell *matHeaderCellDef> Response Time</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let row\\\"> {{row.ExecTime}}</mat-cell>\\n                            </ng-container>\\n\\n                            <!-- Events Column -->\\n                            <ng-container matColumnDef=\\\"History2\\\">\\n                                <mat-header-cell *matHeaderCellDef mat-sort-header> Events</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                                    <a href=\\\"#\\\" (click)=\\\"showEvents(element.Id); false;\\\"\\n                                       placement=\\\"top\\\" ngbTooltip=\\\"Click to see the exercise events\\\">\\n                                        {{element.History}}\\n                                    </a>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <!-- Status Column -->\\n                            <ng-container matColumnDef=\\\"Status2\\\">\\n                                <mat-header-cell *matHeaderCellDef> Status</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Status}}</mat-cell>\\n                            </ng-container>\\n\\n                            <!-- Action Column -->\\n                            <ng-container matColumnDef=\\\"Action2\\\">\\n                                <mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element;let i = index\\\" class=\\\"action-link\\\">\\n                                    <div style=\\\"word-wrap: break-word;\\\">\\n                                        <button mat-icon-button\\n                                                *ngIf=\\\"userSession.Module==='Admin' || module==='Assistant' || module==='Lecturer'\\\"\\n                                                (click)=\\\"deleteAnswer(element.Id, element.Name, r, i); false;\\\"\\n                                                placement=\\\"top\\\" ngbTooltip=\\\"Delete exercise answer\\\">\\n                                            <mat-icon>delete</mat-icon>\\n                                        </button>\\n                                        <button mat-icon-button\\n                                                (click)=\\\"editAnswer(element); false;\\\"\\n                                                placement=\\\"top\\\" ngbTooltip=\\\"Show exercise answer\\\">\\n                                            <mat-icon>code</mat-icon>\\n                                        </button>\\n                                    </div>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <mat-header-row class=\\\"header2\\\" *matHeaderRowDef=\\\"displayedColumns2\\\"></mat-header-row>\\n                            <mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\">\\n                            </mat-row>\\n                        </table>\\n\\n                    </div>\\n                </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\"\\n                class=\\\"element-row\\\"\\n                [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n                (click)=\\\"expandedElement = element\\\">\\n            </tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>{{fe.Id.value ? \\\"Edit\\\":\\\"Add\\\"}} Exercise</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-exercise')\\\" style=\\\"margin-left: 20px;\\\">Exercises</button>\\n    </div>\\n  </h6>\\n  <br />\\n  <div class=\\\"col-md-12 group-container\\\">\\n    <div *ngIf=\\\"!fe.Id.value\\\">\\n      <span class=\\\"alert-info\\\">Fill in the contents and parameters first, then click the Insert button to enable Groups, Files, and Code.</span>\\n      <br />\\n      <br />\\n    </div>\\n    <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <ul ngbNav #nav=\\\"ngbNav\\\" class=\\\"nav-tabs\\\" [destroyOnHide]=\\\"false\\\">\\n        <li [ngbNavItem]=\\\"1\\\">\\n          <a ngbNavLink>Content</a>\\n          <ng-template ngbNavContent>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Title\\\">Title:</label>\\n              <input class=\\\"text\\\" type=\\\"text\\\" formControlName=\\\"Title\\\" name=\\\"Title\\\" id=\\\"Title\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Content\\\">Content:</label>\\n              <ckeditor [editor]=\\\"Editor\\\" [config]=\\\"config\\\" formControlName=\\\"Content\\\"></ckeditor>\\n            </div>\\n\\n          </ng-template>\\n        </li>\\n\\n        <li [ngbNavItem]=\\\"2\\\">\\n          <a ngbNavLink>Parameters</a>\\n          <ng-template ngbNavContent>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Date\\\">Expiration Date: </label>\\n\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"date\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                         name=\\\"dp\\\" formControlName=\\\"Date\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                      <img class=\\\"icon\\\" src=\\\"../../assets/calendar.png\\\" />\\n                    </button>\\n                  </div>\\n                </div>\\n                <ngb-timepicker formControlName=\\\"Time\\\"></ngb-timepicker>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"MaxSubmissions\\\">Maximum Number of Submissions:</label>\\n              <input class=\\\"number\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000\\\" formControlName=\\\"MaxSubmissions\\\"\\n                     name=\\\"MaxSubmissions\\\" id=\\\"MaxSubmissions\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"MaxTimeout\\\">Maximum Timeout (seconds):</label>\\n              <input class=\\\"number\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000\\\" formControlName=\\\"MaxTimeout\\\"\\n                     name=\\\"MaxTimeout\\\" id=\\\"MaxTimeout\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"MaxFileSize\\\">Maximum file size that the student can use with input (bytes). <br />Leave zero to disable:</label>\\n              <input class=\\\"number\\\" type=\\\"number\\\" formControlName=\\\"MaxFileSize\\\"\\n                     name=\\\"MaxFileSize\\\" id=\\\"MaxFileSize\\\"\\n                     (click)=\\\"getInputMaxFileSize($event)\\\"\\n                     (keyup)=\\\"getInputMaxFileSize($event)\\\">{{maxFileSize}}\\n            </div>\\n\\n          </ng-template>\\n        </li>\\n\\n        <li [ngbNavItem]=\\\"4\\\" [disabled]=\\\"!exerciseId\\\">\\n          <a ngbNavLink>Groups</a>\\n          <ng-template ngbNavContent>\\n\\n            <exercises-app-groups [exerciseId]=\\\"exerciseId\\\"\\n                          *ngIf=\\\"exerciseId\\\"></exercises-app-groups>\\n\\n          </ng-template>\\n        </li>\\n\\n        <li [ngbNavItem]=\\\"5\\\" [disabled]=\\\"!exerciseId\\\">\\n          <a ngbNavLink>Files</a>\\n          <ng-template ngbNavContent>\\n            <exercises-app-files [exerciseId]=\\\"exerciseId\\\"\\n                                 *ngIf=\\\"exerciseId\\\"></exercises-app-files>\\n          </ng-template>\\n        </li>\\n\\n        <li [ngbNavItem]=\\\"6\\\" [disabled]=\\\"!fe.Id.value\\\">\\n          <a ngbNavLink (click)=\\\"updateCodeTab()\\\">Code</a>\\n          <ng-template ngbNavContent>\\n            <div class=\\\"form-group code\\\">\\n              <app-code></app-code>\\n            </div>\\n          </ng-template>\\n        </li>\\n      </ul>\\n      <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">{{exerciseId? \\\"Update\\\":\\\"Insert\\\"}}</button>\\n      </div>\\n      <div *ngIf=\\\"submitted && fe.Title.errors\\\" class=\\\"error response\\\">\\n        <div *ngIf=\\\"fe.Title.errors.required\\\">Title is required</div>\\n        <div *ngIf=\\\"fe.Name.errors.minlength\\\">Title field must have a minimum of 5 characters</div>\\n        <div *ngIf=\\\"fe.Title.errors.maxlength\\\">Title must be up to 100 characters long</div>\\n      </div>\\n      <div *ngIf=\\\"submitted && fe.Date.errors\\\" class=\\\"error response\\\">\\n        <div *ngIf=\\\"fe.Date.errors.required\\\">Date is required</div>\\n      </div>\\n      <div *ngIf=\\\"submitted && fe.Time.errors\\\" class=\\\"error response\\\">\\n        <div *ngIf=\\\"fe.Time.errors.required\\\">Time is required</div>\\n      </div>\\n      <div *ngIf=\\\"submitted && fe.MaxTimeout.errors\\\" class=\\\"error response\\\">\\n        <div *ngIf=\\\"fe.MaxTimeout.errors.required\\\">MaxTimeout is required</div>\\n      </div>\\n      <div *ngIf=\\\"submitted && fe.MaxSubmissions.errors\\\" class=\\\"error response\\\">\\n        <div *ngIf=\\\"fe.MaxSubmissions.errors.required\\\">MaxSubmissions is required</div>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\\n\"","export default \"\\n<div *ngIf=\\\"load===0 && exerciseId\\\">\\n  <app-mat-progress-bar></app-mat-progress-bar>\\n</div>\\n\\n<div *ngIf=\\\"!exerciseId\\\">Save the exercise first to enter a group.</div>\\n\\n<div *ngIf=\\\"exerciseId\\\" class=\\\"m-12\\\">\\n\\n  <form *ngIf=\\\"exerciseId\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"uploadFile()\\\">\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-3\\\">\\n        <input #inputFile class=\\\"btn-sm btn-primary\\\" type='file' name=\\\"media\\\" #selectfile >\\n      </div>\\n      <div class=\\\"form-group col-md-3\\\">\\n        <button class=\\\"btn-sm btn-primary\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"uploadFile()\\\">Upload</button>\\n      </div>\\n      <div class=\\\"form-group col-md-3\\\">\\n        <progress [value]=progress.loaded  [max]=progress.total></progress>\\n      </div>\\n    </div>\\n\\n  </form>\\n\\n  <div *ngIf=\\\"(files?.length <= 0 && load===1)\\\">\\n    No records found.\\n  </div>\\n\\n  <div class=\\\"example-container mat-elevation-z8 \\\">\\n\\n    <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\" matSort>\\n\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"Id\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Title Column -->\\n      <ng-container matColumnDef=\\\"Name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.FileName}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Size Column -->\\n      <ng-container matColumnDef=\\\"Size\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Size </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{_util.formatBytes(row.Size)}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Action Column -->\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n          <div>\\n            <button mat-icon-button\\n                    (click)=\\\"delete(element); false;\\\">\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </div>\\n          <div>\\n            <button placement=\\\"top\\\" ngbTooltip=\\\"Click to download\\\"\\n                    mat-icon-button\\n                    (click)=\\\"download(element); false;\\\">\\n              <mat-icon>save_alt</mat-icon>\\n            </button>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n    Files are inserted or deleted after choice. You don't need to click the Update button.\\n\\n  </div>\\n\\n</div>\\n\"","export default \"<div *ngIf=\\\"load===0\\\">\\n  <app-mat-progress-bar></app-mat-progress-bar>\\n</div>\\n\\n<div class=\\\"col-md-6 group-container\\\">\\n  <div *ngIf=\\\"!exerciseId\\\">Save the exercise first to enter a group.</div>\\n\\n  <form  [formGroup]=\\\"editForm\\\">\\n\\n    <mat-chip-list #chipList aria-label=\\\"Member selection\\\">\\n\\n      <div class=\\\"form-group\\\">\\n\\n        <mat-chip\\n                *ngFor=\\\"let member of members\\\"\\n                [selectable]=\\\"selectable\\\"\\n                [removable]=\\\"removable\\\"\\n                (removed)=\\\"remove(member)\\\">\\n          {{member.Name}}\\n          <mat-icon matChipRemove *ngIf=\\\"removable\\\">X</mat-icon>\\n        </mat-chip>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n\\n        <input\\n                placeholder=\\\"New group...\\\"\\n                #memberInput\\n                [formControl]=\\\"memberCtrl\\\"\\n                [matAutocomplete]=\\\"auto\\\"\\n                [matChipInputFor]=\\\"chipList\\\"\\n                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                (matChipInputTokenEnd)=\\\"add(memberInput)\\\">\\n      </div>\\n    </mat-chip-list>\\n    <div class=\\\"form-group\\\">\\n      Members are automatically inserted or deleted in the group once selected. You don't need to click the Update button.\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\n        <mat-option *ngFor=\\\"let member of filteredMembers | async\\\" [value]=\\\"member\\\">\\n          {{member.Name}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>Exercises</span>\\n    </div>\\n\\n    <div style=\\\"float: right\\\">\\n      <button\\n              class=\\\"btn-sm btn-primary\\\" style=\\\"width:110px\\\" (click)=\\\"setKey()\\\">Exercise Key\\n      </button>\\n    </div>\\n\\n    <div style=\\\"float: right\\\">\\n      <button *ngIf=\\\"userSession.Module==='Admin' || module==='Lecturer' || module==='Assistant'\\\"\\n              class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"addExercise()\\\">Add</button>\\n    </div>\\n  </h6>\\n\\n  <div *ngIf=\\\"load===0\\\">\\n    <app-mat-progress-bar></app-mat-progress-bar>\\n  </div>\\n\\n  <div *ngIf=\\\"(exercises?.length <= 0 && load===1)\\\">\\n    No records found.\\n  </div>\\n\\n  <div class=\\\"filter\\\">\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($any($event.target).value)\\\" placeholder=\\\"Filter: \\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"example-container mat-elevation-z8 \\\">\\n\\n    <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\" matSort>\\n\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"Id\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Title Column -->\\n      <ng-container matColumnDef=\\\"Title\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Title </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.hasGroup ? row.Title+\\\" (\\\"+row.hasGroup+\\\")\\\" : row.Title}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- MaxSubmissions Column -->\\n      <ng-container matColumnDef=\\\"MaxSubmissions\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\\n          <span placement=\\\"top\\\"\\n                ngbTooltip=\\\"Maximum Number of Submissions / Timeout\\\">MNS/T</span>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.MaxSubmissions}}/{{row.MaxTimeout}}s </mat-cell>\\n      </ng-container>\\n\\n      <!-- Date Column -->\\n      <ng-container matColumnDef=\\\"Date\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Expiration Date </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <div style=\\\"word-wrap: break-word;\\\"> {{row.Date}}<br />\\n            <span *ngIf=\\\"row.IsExpired < 0\\\" class=\\\"expired\\\">[expired]</span>\\n            <span *ngIf=\\\"row.IsExpired > 0 && row.IsExpired <= 86400\\\" class=\\\"Notexpired\\\">[expires soon!]</span>\\n            <span *ngIf=\\\"row.IsExpired > 86400\\\" class=\\\"Notexpired\\\">[about {{(row.IsExpired/60/60/24).toFixed(0)}} day(s)]</span>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <!-- Response Time Column -->\\n      <ng-container matColumnDef=\\\"ExecTime\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\\n                    <span placement=\\\"top\\\"\\n                          ngbTooltip=\\\"Admin Response Time\\\">RT</span>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.ExecTime}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"CheckCount\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\\n          <span placement=\\\"top\\\"\\n                ngbTooltip=\\\"Admin Code Analysis\\\">Code Analysis</span>\\n          </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n          <a href=\\\"#\\\" placement=\\\"top\\\" ngbTooltip=\\\"Click to see code analysis\\\"\\n             (click)=\\\"showList(element.CheckList); false;\\\">\\n            <mat-progress-bar id=\\\"checkBar\\\" mode=\\\"determinate\\\" value=\\\"{{element.CheckCount}}\\\"></mat-progress-bar>\\n          </a>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <!-- Delivered Column -->\\n      <ng-container matColumnDef=\\\"Answers\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Delivered </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n          <div style=\\\"word-wrap: break-word;\\\">\\n            <span *ngIf=\\\"userSession.Module!=='Admin'\\\">{{element.Name}}</span>\\n            <button placement=\\\"top\\\" ngbTooltip=\\\"{{element.cAnswers}} exercise answers\\\"\\n                    mat-icon-button (click)=\\\"viewAnswer(element, element.IsExpired)\\\">\\n              <mat-icon>list</mat-icon> ({{element.cAnswers}})\\n            </button>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <!-- Action Column -->\\n      <ng-container *ngIf=\\\"userSession.Module==='Admin' || module==='Lecturer' || module==='Assistant'\\\" matColumnDef=\\\"Action\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n          <div style=\\\"word-wrap: break-word;\\\">\\n            <button mat-icon-button\\n                    (click)=\\\"deleteExercise(element)\\\">\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n\\n            <button mat-icon-button\\n                    (click)=\\\"editExercise(element)\\\">\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n          </div>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>{{fe.Id.value ? \\\"Edit\\\":\\\"Add\\\"}} Group</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-group')\\\" style=\\\"margin-left: 20px;\\\">Groups</button>\\n    </div>\\n  </h6>\\n\\n  <div class=\\\"col-md-6 group-container\\\">\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Name\\\">Group Name:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\">\\n        <div *ngIf=\\\"submitted && fe.Name.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Name.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Name.errors.minlength\\\">Name must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.Name.errors.maxlength\\\">Name must be a maximum of 60 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"KeyAccess\\\">Group self-registration Key:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"KeyAccess\\\" placeholder=\\\"KeyAccess\\\" name=\\\"KeyAccess\\\" class=\\\"form-control\\\" id=\\\"KeyAccess\\\">\\n        <div *ngIf=\\\"submitted && fe.KeyAccess.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.KeyAccess.errors.minlength\\\">Name must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.KeyAccess.errors.maxlength\\\">KeyAccess must be a maximum of 60 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Description\\\">Description:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"Description\\\" placeholder=\\\"Description\\\"\\n               name=\\\"Description\\\" class=\\\"form-control\\\" id=\\\"Description\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">{{fe.Id.value ? \\\"Update\\\":\\\"Insert\\\"}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>Group Members: {{groupName}}</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-group')\\\" style=\\\"margin-left: 20px;\\\">Groups</button>\\n    </div>\\n  </h6>\\n\\n  <div class=\\\"col-md-6 group-container\\\">\\n    <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"hidden\\\">\\n        <input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\" readonly>\\n      </div>\\n\\n      <mat-chip-list #chipList aria-label=\\\"Member selection\\\">\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <mat-chip\\n                  *ngFor=\\\"let member of members\\\"\\n                  [selectable]=\\\"selectable\\\"\\n                  [removable]=\\\"removable\\\"\\n                  (removed)=\\\"remove(member)\\\">\\n            {{member.Name}}\\n            <mat-icon matChipRemove *ngIf=\\\"removable\\\">X</mat-icon>\\n          </mat-chip>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n\\n          <input\\n                  placeholder=\\\"New member...\\\"\\n                  #memberInput\\n                  [formControl]=\\\"memberCtrl\\\"\\n                  [matAutocomplete]=\\\"auto\\\"\\n                  [matChipInputFor]=\\\"chipList\\\"\\n                  [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                  [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                  (matChipInputTokenEnd)=\\\"add(memberInput)\\\">\\n        </div>\\n      </mat-chip-list>\\n      <div class=\\\"form-group\\\">\\n\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\n          <mat-option *ngFor=\\\"let member of filteredMembers | async\\\" [value]=\\\"member\\\">\\n            {{member.Name}}\\n          </mat-option>\\n        </mat-autocomplete>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">Update</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>Groups</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"addGroup()\\\">Add</button>\\n    </div>\\n  </h6>\\n\\n  <div *ngIf=\\\"load===0\\\">\\n    <app-mat-progress-bar></app-mat-progress-bar>\\n  </div>\\n\\n  <div *ngIf=\\\"(groups?.length <= 0 && load===1)\\\">\\n    No records found.\\n  </div>\\n\\n  <div class=\\\"filter\\\">\\n    <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($any($event.target).value)\\\" placeholder=\\\"Filter: \\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"example-container mat-elevation-z8 \\\">\\n\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"Id\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"Name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.Name}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"KeyAccess\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Self-registration Key </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.KeyAccess}} </mat-cell>\\n      </ng-container>\\n\\n      <!-- Action Column -->\\n      <ng-container matColumnDef=\\\"Action\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n          <button mat-icon-button (click)=\\\"addMembers(element)\\\" style=\\\"margin-left: 20px;\\\"\\n                  ngbPopover=\\\"Click to add or delete users\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\"\\n                  popoverTitle=\\\"Members\\\">\\n            <mat-icon>groups</mat-icon>\\n            ({{element.mCount}})\\n          </button>\\n          <button mat-icon-button (click)=\\\"deleteGroup(element)\\\">\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <button mat-icon-button (click)=\\\"editGroup(element)\\\" style=\\\"margin-left: 20px;\\\">\\n            <mat-icon>edit</mat-icon>\\n          </button>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>{{fe.Id.value ? \\\"Edit\\\":\\\"Add\\\"}} User</span>\\n    </div>\\n    <div style=\\\"float: right\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-user-classroom')\\\" style=\\\"margin-left: 20px;\\\">Users</button>\\n    </div>\\n  </h6>\\n\\n  <div class=\\\"col-md-6 user-container\\\">\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n      </div>\\n\\n      <hr />\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\">\\n        <div *ngIf=\\\"submitted && fe.Name.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Name.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Name.errors.minlength\\\">Name must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.Name.errors.maxlength\\\">Name must be a maximum of 60 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"error\\\" *ngIf=\\\"fe.Id.value===1\\\">Attention, the Admin password and email must be changed in the Settings module.\\n        The change here is not definitive.</div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\" formControlName=\\\"Password\\\" placeholder=\\\"Password\\\" name=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"Password\\\">\\n        <div *ngIf=\\\"submitted && fe.Password.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Password.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Password.errors.minlength\\\">Password must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.Password.errors.maxlength\\\">Password must be a maximum of 50 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\" formControlName=\\\"CPassword\\\" placeholder=\\\"Confirm Password\\\" name=\\\"CPassword\\\" class=\\\"form-control\\\" id=\\\"CPassword\\\">\\n        <div *ngIf=\\\"submitted && fe.CPassword.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.CPassword.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.CPassword.errors.minlength\\\">Password must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.CPassword.errors.maxlength\\\">Password must be a maximum of 50 characters</div>\\n          <div *ngIf=\\\"fe.CPassword.errors.mismatch\\\">The passwords are different</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" formControlName=\\\"Email\\\" placeholder=\\\"Email\\\" name=\\\"Email\\\" class=\\\"form-control\\\" id=\\\"Email\\\">\\n        <div *ngIf=\\\"submitted && fe.Email.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Email.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Email.errors.maxlength\\\">Email must be a maximum of 100 characters</div>\\n          <div *ngIf=\\\"fe.Email.errors.email\\\">Please enter a valid email</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n        <label for=\\\"Module\\\">Module:</label>\\n        <select formControlName=\\\"Module\\\" placeholder=\\\"Module\\\" name=\\\"Module\\\" class=\\\"form-control\\\" id=\\\"Module\\\">\\n          <option value=\\\"Lecturer\\\">Lecturer</option>\\n          <option value=\\\"Student\\\">Student</option>\\n          <option value=\\\"Assistant\\\">Assistant</option>\\n        </select>\\n        <div *ngIf=\\\"submitted && fe.Module.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Module.errors.required\\\">Field is required</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"fe.Id.value\\\">\\n        <label for=\\\"ForceChangePass\\\">Force password change at next login?</label>\\n        <select formControlName=\\\"ForceChangePass\\\" placeholder=\\\"ForceChangePass\\\"\\n                name=\\\"ForceChangePass\\\" class=\\\"form-control\\\" id=\\\"ForceChangePass\\\">\\n          <option value=\\\"1\\\">Yes</option>\\n          <option value=\\\"0\\\">No</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"disabled\\\" class=\\\"btn-sm btn-success\\\">{{fe.Id.value ? \\\"Update\\\":\\\"Insert\\\"}}</button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>Classroom Members</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-user-classroom')\\\" style=\\\"margin-left: 20px;\\\">Users</button>\\n    </div>\\n  </h6>\\n\\n  <div class=\\\"col-md-6 group-container\\\">\\n    <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"hidden\\\">\\n        <input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\" readonly>\\n      </div>\\n\\n      <mat-chip-list #chipList aria-label=\\\"Member selection\\\">\\n\\n        <div class=\\\"form-group\\\">\\n\\n          <mat-chip\\n                  *ngFor=\\\"let member of members\\\"\\n                  [selectable]=\\\"selectable\\\">\\n            {{member.Name}}\\n          </mat-chip>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n\\n          <input\\n                  placeholder=\\\"New member...\\\"\\n                  #memberInput\\n                  [formControl]=\\\"memberCtrl\\\"\\n                  [matAutocomplete]=\\\"auto\\\"\\n                  [matChipInputFor]=\\\"chipList\\\"\\n                  [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                  [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n                  (matChipInputTokenEnd)=\\\"add(memberInput)\\\">\\n        </div>\\n      </mat-chip-list>\\n      <div class=\\\"form-group\\\">\\n\\n        <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\n          <mat-option *ngFor=\\\"let member of filteredMembers | async\\\" [value]=\\\"member\\\">\\n            {{member.Name}}\\n          </mat-option>\\n        </mat-autocomplete>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">Update</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <div style=\\\"float: left\\\">\\n            <span>Users</span>\\n        </div>\\n        <div style=\\\"float: right\\\">\\n            <button class=\\\"btn-sm btn-primary\\\" (click)=\\\"addUser()\\\">New</button>\\n        </div>\\n        <div style=\\\"float: right; width: 50px;\\\">\\n            <button class=\\\"btn-sm btn-primary\\\" (click)=\\\"joinUser()\\\">Join</button>\\n        </div>\\n    </h6>\\n\\n    <div *ngIf=\\\"load===0\\\">\\n        <app-mat-progress-bar></app-mat-progress-bar>\\n    </div>\\n\\n    <div *ngIf=\\\"(users?.length <= 0 && load===1)\\\">\\n        No records found.\\n    </div>\\n\\n    <div class=\\\"filter\\\">\\n        <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($any($event.target).value)\\\" placeholder=\\\"Filter: \\\">\\n        </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"mat-elevation-z8 \\\">\\n\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"Id\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"Name\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Name}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"Email\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Email}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Module Column -->\\n            <ng-container matColumnDef=\\\"Module\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Module </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Module}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Action Column -->\\n            <ng-container matColumnDef=\\\"Action\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                    <button *ngIf=\\\"(element.Module!=='Lecturer' && module==='Assistant')\\n                    || module==='Lecturer' || userSession.Module==='Admin'\\\" mat-icon-button (click)=\\\"deleteUser(element)\\\">\\n                        <mat-icon>delete</mat-icon>\\n                    </button>\\n                    <button *ngIf=\\\"(element.Module!=='Lecturer' && module==='Assistant')\\n                    || module==='Lecturer' || userSession.Module==='Admin'\\\" mat-icon-button (click)=\\\"editUser(element)\\\" style=\\\"margin-left: 20px;\\\">\\n                        <mat-icon>edit</mat-icon>\\n                    </button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </mat-row>\\n        </mat-table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n    </div>\\n</div>\\n\"","export default \"<form [formGroup]=\\\"myGroup\\\">\\n    <mat-form-field appearance=\\\"fill\\\" *ngIf=\\\"(userSession.Id || userSession.Module==='Admin') && classroom?.length > 0\\\">\\n        <mat-label>Classroom</mat-label>\\n        <mat-select formControlName=\\\"classroomControl\\\"\\n                    (selectionChange)=\\\"onChange()\\\"\\n                    [compareWith]=\\\"compareObjects\\\"\\n                    required [(ngModel)]=\\\"classSelected\\\">\\n            <mat-option *ngFor=\\\"let c of classroom\\\" [value]=\\\"c\\\">\\n                {{c.Name}}\\n            </mat-option>\\n        </mat-select>\\n        <mat-hint *ngIf=\\\"classroom?.length <= 0\\\">No registered classroom.</mat-hint>\\n    </mat-form-field>\\n</form>\\n\\n<div class=\\\"divTable\\\" [ngClass]=\\\"{'emptyClassroom': classroom?.length <= 0, 'hasClassroom': classroom?.length > 0}\\\">\\n    <div class=\\\"divTableBody\\\">\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"classSelected.Id\\\">\\n\\n            <div class=\\\"divTableCell\\\">\\n                <mat-icon>info</mat-icon>\\n            </div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"onChange(); false;\\\"\\n                                         style=\\\"margin-left: 20px;\\\">Info</a></div>\\n        </div>\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"classSelected.Id && (userModule==='Assistant'\\n                                                        || userModule==='Lecturer'\\n                                                        || userSession.Module==='Admin'\\n                                                        || classSelected.IdUser==userSession.Id)\\\">\\n            <div class=\\\"divTableCell\\\">\\n                <mat-icon>person</mat-icon>\\n            </div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('view-user-classroom'); false;\\\"\\n                                         style=\\\"margin-left: 20px;\\\">Users</a>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"classSelected.Id && (userModule==='Assistant'\\n                                                        || userModule==='Lecturer'\\n                                                        || userSession.Module==='Admin'\\n                                                        || classSelected.IdUser==userSession.Id)\\\">\\n            <div class=\\\"divTableCell\\\">\\n                <mat-icon>group</mat-icon>\\n            </div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('view-group'); false;\\\"\\n                                         style=\\\"margin-left: 20px;\\\">Groups</a>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"classSelected.Id\\\">\\n            <div class=\\\"divTableCell\\\">\\n                <mat-icon>format_list_numbered</mat-icon>\\n            </div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('view-exercise'); false;\\\"\\n                                         style=\\\"margin-left: 20px;\\\">Exercises</a></div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"classSelected.Id\\\">\\n            <div class=\\\"divTableCell\\\">\\n                <mat-icon>code</mat-icon>\\n            </div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('view-code'); false;\\\"\\n                                         style=\\\"margin-left: 20px;\\\">Try a Code</a></div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>{{fe.Id.value ? \\\"Edit\\\":\\\"Add\\\"}} Classroom</span>\\n    </div>\\n    <div style=\\\"float: right\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-classroom-manager')\\\" style=\\\"margin-left: 20px;\\\">Classroom</button>\\n    </div>\\n  </h6>\\n\\n  <div class=\\\"col-md-6 user-container\\\">\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Name\\\">Name:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\">\\n        <div *ngIf=\\\"submitted && fe.Name.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Name.errors.required\\\">Field Name is required</div>\\n          <div *ngIf=\\\"fe.Name.errors.minlength\\\">Name field must have a minimum of 5 characters</div>\\n          <div *ngIf=\\\"fe.Name.errors.maxlength\\\">Name must be a maximum of 50 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"IdUser\\\">Owner:</label>\\n        <select formControlName=\\\"IdUser\\\" placeholder=\\\"Owner\\\" name=\\\"IdUser\\\" class=\\\"form-control\\\" id=\\\"IdUser\\\">\\n          <option *ngFor=\\\"let u of users\\\" [value]=\\\"u.Id\\\">{{u.Name}}</option>\\n        </select>\\n        <div *ngIf=\\\"submitted && fe.IdUser.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.IdUser.errors.required\\\">Field Owner is required</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Description\\\">Description:</label>\\n        <ckeditor [editor]=\\\"Editor\\\" [config]=\\\"config\\\" formControlName=\\\"Description\\\"></ckeditor>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"MaxStudents\\\">MaxStudents:</label>\\n        <input type=\\\"number\\\" formControlName=\\\"MaxStudents\\\" placeholder=\\\"MaxStudents\\\"\\n               name=\\\"MaxStudents\\\" class=\\\"form-control\\\" id=\\\"MaxStudents\\\">\\n        <div *ngIf=\\\"submitted && fe.MaxStudents.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.MaxStudents.errors.max\\\">The maximum number of students allowed is 100</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Enabled\\\">Enabled:</label>\\n        <select formControlName=\\\"Enabled\\\" placeholder=\\\"Enabled\\\" name=\\\"Enabled\\\" class=\\\"form-control\\\" id=\\\"Enabled\\\">\\n          <option [value]=\\\"1\\\" selected>Yes</option>\\n          <option [value]=\\\"0\\\">No</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"KeyAccess\\\">KeyAccess:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"KeyAccess\\\" placeholder=\\\"KeyAccess\\\"\\n               name=\\\"KeyAccess\\\" class=\\\"form-control\\\" id=\\\"KeyAccess\\\">\\n        <div *ngIf=\\\"submitted && fe.KeyAccess.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.KeyAccess.errors.maxlength\\\">The key must be up to 60 characters long</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">{{fe.Id.value ? \\\"Update\\\":\\\"Insert\\\"}}</button>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <div style=\\\"float: left\\\">\\n            <span>Classrooms</span>\\n        </div>\\n        <div style=\\\"float: right\\\">\\n            <button class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"addClassroom()\\\">Add</button>\\n        </div>\\n    </h6>\\n\\n    <div *ngIf=\\\"load===0\\\">\\n        <app-mat-progress-bar></app-mat-progress-bar>\\n    </div>\\n\\n    <div *ngIf=\\\"(classroom?.length <= 0 && load===1)\\\">\\n        No records found.\\n    </div>\\n\\n    <div class=\\\"filter\\\">\\n        <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($any($event.target).value)\\\" placeholder=\\\"Filter: \\\">\\n        </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"mat-elevation-z8 \\\">\\n\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"Id\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"Name\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Name}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- IdUser Column -->\\n            <ng-container matColumnDef=\\\"Owner\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Owner </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Owner}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- MaxStudents Column -->\\n            <ng-container matColumnDef=\\\"MaxStudents\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> MaxStudents </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.MaxStudents}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Enabled Column -->\\n=            <ng-container matColumnDef=\\\"Enabled\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Enabled </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Enabled ? 'Yes' : 'No'}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- KeyAccess Column -->\\n            <ng-container matColumnDef=\\\"KeyAccess\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> KeyAccess </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.KeyAccess}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Action Column -->\\n            <ng-container matColumnDef=\\\"Action\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                    <button mat-icon-button (click)=\\\"deleteClassroom(element)\\\">\\n                        <mat-icon>delete</mat-icon>\\n                    </button>\\n                    <button mat-icon-button (click)=\\\"editClassroom(element)\\\" style=\\\"margin-left: 20px;\\\">\\n                        <mat-icon>edit</mat-icon>\\n                    </button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </mat-row>\\n        </mat-table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <span>Cluster on Network</span>\\n        <br/>\\n        <span class=\\\"help\\\">In this section, the nodes detected on the local computer network are displayed.\\n          If this host is a node, you can connect to a host configured as a master on the network.</span>\\n    </h6>\\n    <div class=\\\"col-md-12 user-container\\\">\\n\\n        <div class=\\\"form-group\\\" style=\\\"margin-top: 15px;\\\">\\n\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header\\\" style=\\\"min-height: 141px;\\\">\\n                            <app-mat-progress-bar *ngIf=\\\"!hostInfo.OpMode\\\"></app-mat-progress-bar>\\n\\n                            <div *ngIf=\\\"responseCo.Name\\\" class=\\\"{{responseCo.Name}} response text-center\\\">\\n                                {{responseCo.Status}}\\n                                <app-mat-progress-bar *ngIf=\\\"responseCo.Name==='info'\\\"></app-mat-progress-bar>\\n                            </div>\\n                            <table class=\\\"table table-striped\\\">\\n                                <tr *ngFor=\\\"let c of clusters\\\">\\n                                    <td>\\n                                        <ul>\\n                                            <li [className]=\\\"c.Name==='master' ? 'master':''\\\">\\n                                                {{c.Name}} - {{c.MasterIP}}\\n                                                <p>\\n                                                    <span class=\\\"connected\\\">Last Check: {{c.LastActivity | slice:0:16}}</span>\\n                                                    <span *ngIf=\\\"hostInfo.Cluster.Id===c.Id\\\" class=\\\"connected\\\"> | (connected)</span>\\n                                                    <img *ngIf=\\\"c.Password\\\" class=\\\"key\\\" src=\\\"../../assets/key.png\\\"/>\\n\\n                                                    <a *ngIf=\\\"hostInfo.Cluster.Id!==c.Id && hostInfo['IsMaster']\\\"\\n                                                       href=\\\"#\\\" (click)=\\\"connectToCluster(c);false;\\\" class=\\\"connected\\\">-\\n                                                        Connect Now</a>\\n                                                </p>\\n                                            </li>\\n                                        </ul>\\n                                    </td>\\n                                </tr>\\n                            </table>\\n                            <div *ngIf=\\\"!(clusters)?.length\\\"><span\\n                                    class=\\\"connected\\\">*No master detected on the network</span></div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header text-center\\\">\\n                            Change the host's operating mode:\\n\\n                            <div class=\\\"card-body op-mode\\\">\\n                                <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [value]=\\\"hostInfo.OpMode\\\"\\n                                                         (click)=\\\"setOpMode(group.value)\\\">\\n                                    <mat-button-toggle value=\\\"MASTER\\\">\\n                                        MASTER\\n                                    </mat-button-toggle>\\n                                    <mat-button-toggle value=\\\"NODE\\\">NODE\\n                                    </mat-button-toggle>\\n                                    <mat-button-toggle value=\\\"LOCAL\\\">LOCAL\\n                                    </mat-button-toggle>\\n                                </mat-button-toggle-group>\\n                            </div>\\n\\n                            <div class=\\\"response text-center\\\" *ngIf=\\\"responseOp.Name\\\">\\n                                <div *ngIf=\\\"responseOp.Name==='ok' || responseOp.Name==='info'\\\" class=\\\"{{responseOp.Name}}\\\">\\n                                    {{responseOp.Status}}\\n                                    <app-mat-progress-bar></app-mat-progress-bar>\\n                                </div>\\n                                <div *ngIf=\\\"responseOp.Name==='error'\\\" class=\\\"{{responseOp.Name}}\\\">{{responseOp.Status}}</div>\\n                            </div>\\n\\n                            <span class=\\\"description\\\">\\n                                Go to <a href=\\\"#\\\" (click)=\\\"setRoute('settings'); false;\\\">Settings</a> to change operating mode permanently.\\n                            </span>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <span>Current Virtual Nodes in the Cluster</span>\\n        <br/>\\n        <span class=\\\"help\\\">Here the hosts and their respective nodes are listed.\\n          You can add or remove nodes in the host/cluster.</span>\\n    </h6>\\n    <div class=\\\"col-md-12 user-container\\\">\\n\\n        <div class=\\\"form-group\\\" style=\\\"margin-top: 15px;\\\">\\n\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header nodesSelection\\\">\\n                            Increase or decrease the virtual nodes number\\n                            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"justify-content-center\\\">\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <input type=\\\"number\\\" formControlName=\\\"srvNumber\\\"\\n                                               onkeydown=\\\"return false\\\"\\n                                               onclick=\\\"return false\\\"\\n                                               class=\\\"form-control\\\"\\n                                               [ngClass]=\\\"{ 'is-invalid': submitted && f.srvNumber.errors }\\\"\\n                                        />\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-1\\\">\\n                                        <button class=\\\"btn btn-primary mr-1\\\"\\n                                                [disabled]=\\\"!f.srvNumber.errors && response.Name==='info'\\\">OK\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div *ngIf=\\\"submitted && f.srvNumber.errors\\\" class=\\\"invalid-feedback\\\">\\n                                        <div *ngIf=\\\"f.srvNumber.errors.required\\\">Number of nodes is required</div>\\n                                        <div *ngIf=\\\"f.srvNumber.errors.min\\\">Nodes must be at least 0 number or more\\n                                        </div>\\n                                        <div *ngIf=\\\"f.srvNumber.errors.generic\\\">{{f.srvNumber.errors.generic}}</div>\\n                                    </div>\\n                                    <div *ngIf=\\\"response.Name\\\" class=\\\"{{response.Name}} response\\\">\\n                                        {{response.Status}}\\n                                        <app-mat-progress-bar *ngIf=\\\"response.Name==='info'\\\"></app-mat-progress-bar>\\n                                    </div>\\n                                </div>\\n\\n                                <span class=\\\"description\\\">\\n                                    Current node mode: {{hostInfo.Cluster.NodeMode}}\\n                                    <hr />\\n                                SINGLE: creates a node for each vCPU present on the host, simulating a cluster.\\n                                <br />MULTI.: allocates all vCPUs to Master virtual node.\\n                                <br />SHARED: makes all vCPUs available to nodes, regardless of quantity.\\n                                    <hr />\\n                                    Go to <a href=\\\"#\\\" (click)=\\\"setRoute('settings'); false;\\\">Settings</a> to change node mode.\\n                            </span>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <mat-list>\\n                            <mat-list-item *ngFor=\\\"let n of nodes\\\">\\n                                <mat-icon mat-list-icon>computer</mat-icon>\\n                                <div mat-line><b>Host: {{n.Hostname}}</b>\\n                                    <i class=\\\"nodes\\\">(Mem: {{n.Memory}}MB | vCPU: {{n.NumberOfCPUs}})</i>\\n                                </div>\\n                                <mat-list class=\\\"listNodes\\\">\\n                                    <div *ngFor=\\\"let c of n.Container\\\">\\n                                        <mat-list-item mat-line class=\\\"nodes\\\">---</mat-list-item>\\n                                        <mat-list-item mat-line class=\\\"nodes\\\"><b>{{c.Name==='master'? 'Physical\\n                                            Node':'Virtual Node'}}: {{c.Name}}</b></mat-list-item>\\n                                        <mat-list-item mat-line class=\\\"nodes\\\">vCPU: {{hostInfo.Cluster.NodeMode==='SHARED'?\\n                                            'shared':hostInfo.Cluster.NodeMode==='MULTI'?'all':'1'}} (<span [className]=\\\"c.State==='running' ? 'ok':'error'\\\">{{c.State}}</span>)\\n                                        </mat-list-item>\\n                                    </div>\\n                                </mat-list>\\n                                <mat-divider></mat-divider>\\n                            </mat-list-item>\\n                        </mat-list>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"divTable\\\">\\n    <div class=\\\"divTableBody\\\">\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>class</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('view-classroom-manager'); false;\\\" style=\\\"margin-left: 20px;\\\">Classrooms</a></div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>computer</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('cluster-available'); false;\\\" style=\\\"margin-left: 20px;\\\">Cluster on Network</a></div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>developer_board</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\"\\n                                         (click)=\\\"setRoute('current-nodes'); false;\\\" style=\\\"margin-left: 20px;\\\">Nodes</a></div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>filter</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('monitoring'); false;\\\" style=\\\"margin-left: 20px;\\\">Monitoring</a></div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>settings</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\"\\n                                         (click)=\\\"setRoute('settings'); false;\\\" style=\\\"margin-left: 20px;\\\">Settings</a>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>person</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"setRoute('view-user'); false;\\\" style=\\\"margin-left: 20px;\\\">System Users</a></div>\\n        </div>\\n\\n        <div class=\\\"divTableRow\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n            <div class=\\\"divTableCell\\\"><mat-icon>power_settings_new</mat-icon></div>\\n            <div class=\\\"divTableCell\\\"><a href=\\\"#\\\" (click)=\\\"reboot(); false;\\\" style=\\\"margin-left: 20px;\\\">Reboot</a></div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <span>Monitoring</span>\\n        <br/>\\n        <span class=\\\"help\\\">In this section, the system shows users online and their running tasks.</span>\\n    </h6>\\n    <div class=\\\"col-md-12 user-container\\\">\\n\\n        <div class=\\\"form-group\\\" style=\\\"margin-top: 15px;\\\">\\n\\n            <div class=\\\"form-row\\\" *ngIf=\\\"hostInfo.OpMode!=='NODE'\\\">\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Users online\\n                            <mat-divider></mat-divider>\\n\\n                            <mat-list>\\n                                <mat-list-item *ngFor=\\\"let h of hosts\\\">\\n                                    <mat-icon mat-list-icon>account_circle</mat-icon>\\n                                    <div mat-line [className]=\\\"h.Owner===hostInfo['Owner'] ? 'master':''\\\">{{h.Owner}}\\n                                    </div>\\n                                    <div mat-line> Last Activity: {{h.LastActivity | slice:0:16}}</div>\\n                                </mat-list-item>\\n                            </mat-list>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-md-6 user-container\\\">\\n                    <div class=\\\"card m-12\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Tasks\\n                            <mat-divider></mat-divider>\\n\\n                            <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table table-striped\\\" matSort>\\n\\n                                <!-- User Column -->\\n                                <ng-container matColumnDef=\\\"User\\\">\\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header> User</mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.User}}</mat-cell>\\n                                </ng-container>\\n\\n                                <!-- Position Column -->\\n                                <ng-container matColumnDef=\\\"Position\\\">\\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header> Position</mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.Position}}</mat-cell>\\n                                </ng-container>\\n\\n                                <!-- Queue Column -->\\n                                <ng-container matColumnDef=\\\"Queue\\\">\\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header> Queue</mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.Concurrency}}</mat-cell>\\n                                </ng-container>\\n\\n                                <!-- Command Column -->\\n                                <ng-container matColumnDef=\\\"Command\\\">\\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header> Command</mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.Sequence}}</mat-cell>\\n                                </ng-container>\\n\\n                                <!-- Time Column -->\\n                                <ng-container matColumnDef=\\\"Time\\\">\\n                                    <mat-header-cell *matHeaderCellDef mat-sort-header> Time</mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let row\\\"> {{row.Count}}</mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n                                </mat-row>\\n                            </mat-table>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"form-row\\\" *ngIf=\\\"hostInfo.OpMode==='NODE'\\\">\\n\\n                    <div class=\\\"col-md-6 user-container\\\">\\n                        <div class=\\\"card m-12\\\">\\n                            <div class=\\\"card-header text-center\\\">\\n                                Monitoring does not work in node mode, only local and cluster modes.\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <span>Settings</span>\\n        <br/>\\n        <span class=\\\"help\\\">If the field is left empty, the system will attempt to automatically detect the settings.</span>\\n    </h6>\\n    <div class=\\\"col-md-12 user-container\\\">\\n\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <ul ngbNav #nav=\\\"ngbNav\\\" class=\\\"nav-tabs\\\" [destroyOnHide]=\\\"false\\\">\\n                <li [ngbNavItem]=\\\"1\\\">\\n                    <a ngbNavLink>Network</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"PublicInterface\\\">Public Host Interface:</label>\\n                            <span class=\\\"description\\\" for=\\\"PublicInterface\\\">Defines which network interface backend\\n          and frontend will use to listen to network services.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"PublicInterface\\\"\\n                                   placeholder=\\\"Default: empty | Example: eth0\\\"\\n                                   name=\\\"PublicInterface\\\" class=\\\"form-control\\\" id=\\\"PublicInterface\\\">\\n                            <div *ngIf=\\\"submitted && fe.PublicInterface.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.PublicInterface.errors.minlength\\\">Public Interface field must have a minimum of 4 characters</div>\\n                                <div *ngIf=\\\"fe.PublicInterface.errors.maxlength\\\">Public Interface must be a maximum of 15 characters</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"BackendPort\\\">Backend Service Port:</label>\\n                            <span class=\\\"description\\\">Sets the port value to list the services between the backends in the network.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"BackendPort\\\" placeholder=\\\"Default: 10001\\\"\\n                                   name=\\\"BackendPort\\\" class=\\\"form-control\\\" id=\\\"BackendPort\\\">\\n                            <div *ngIf=\\\"submitted && fe.BackendPort.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.BackendPort.errors.min\\\">Backend Port field must have a minimum value of 1500</div>\\n                                <div *ngIf=\\\"fe.BackendPort.errors.max\\\">Backend Port must be a maximum of value 65534</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"FrontendPort\\\">Frontend Service Port:</label>\\n                            <span class=\\\"description\\\">Sets the port value to list the services for the frontends.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"FrontendPort\\\" placeholder=\\\"Default: 8000\\\"\\n                                   name=\\\"FrontendPort\\\" class=\\\"form-control\\\" id=\\\"FrontendPort\\\">\\n                            <div *ngIf=\\\"submitted && fe.FrontendPort.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.FrontendPort.errors.min\\\">Frontend Port field must have a minimum value of 1500</div>\\n                                <div *ngIf=\\\"fe.FrontendPort.errors.max\\\">Frontend Port must be a maximum of value 65534</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"WebSocketPort\\\">Websocket Service Port:</label>\\n                            <span class=\\\"description\\\">Sets the frontend websocket communication port.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"WebSocketPort\\\" placeholder=\\\"Default: 8001\\\"\\n                                   name=\\\"WebSocketPort\\\" class=\\\"form-control\\\" id=\\\"WebSocketPort\\\">\\n                            <div *ngIf=\\\"submitted && fe.WebSocketPort.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.WebSocketPort.errors.min\\\">WebSocket Port field must have a minimum value of 1500</div>\\n                                <div *ngIf=\\\"fe.WebSocketPort.errors.max\\\">WebSocket Port must be a maximum of value 65534</div>\\n                            </div>\\n                        </div>\\n\\n\\n                    </ng-template>\\n                </li>\\n\\n                <li [ngbNavItem]=\\\"2\\\">\\n                    <a ngbNavLink>Cluster</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"ClusterName\\\">Cluster:</label>\\n                            <span class=\\\"description\\\">The default cluster name.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"ClusterName\\\" placeholder=\\\"Default: CLUSTER01\\\"\\n                                   name=\\\"ClusterName\\\" class=\\\"form-control\\\" id=\\\"ClusterName\\\">\\n                            <div *ngIf=\\\"submitted && fe.ClusterName.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.ClusterName.errors.alphaNumeric\\\">Spaces and special characters are not allowed. Alphanumeric characters only.</div>\\n                                <div *ngIf=\\\"fe.ClusterName.errors.minlength\\\">Cluster Name field must have a minimum of 4 characters</div>\\n                                <div *ngIf=\\\"fe.ClusterName.errors.maxlength\\\">Cluster Name must be a maximum of 20 characters</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"ClusterPassword\\\">Cluster Password:</label>\\n                            <span class=\\\"description\\\">Defines the cluster password for connection between nodes.\\n          If the password is left empty, the nodes will connect automatically if their\\n          operating modes are set to NODE.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"ClusterPassword\\\" placeholder=\\\"Default: empty\\\"\\n                                   name=\\\"ClusterPassword\\\" class=\\\"form-control\\\" id=\\\"ClusterPassword\\\">\\n                            <div *ngIf=\\\"submitted && fe.ClusterPassword.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.ClusterPassword.errors.minlength\\\">Cluster Password field must have a minimum of 4 characters</div>\\n                                <div *ngIf=\\\"fe.ClusterPassword.errors.maxlength\\\">Cluster Password must be a maximum of 20 characters</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"NodeMode\\\">Node Mode:</label>\\n                            <span class=\\\"description\\\">\\n                                SINGLE: creates a node for each vCPU present on the host, simulating a cluster.\\n                                <br />MULTI.: allocates all vCPUs to Master virtual node.\\n                                <br />SHARED: makes all vCPUs available to nodes, regardless of quantity.\\n                            </span>\\n                            <select formControlName=\\\"NodeMode\\\" name=\\\"NodeMode\\\" class=\\\"form-control\\\"\\n                                    id=\\\"NodeMode\\\">\\n                                <option value=\\\"\\\">Default: SHARED</option>\\n                                <option value=\\\"SINGLE\\\">SINGLE</option>\\n                                <option value=\\\"MULTI\\\">MULTI</option>\\n                                <option value=\\\"SHARED\\\">SHARED</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fe.NodeMode.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.NodeMode.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"OperationMode\\\">Operation Mode:</label>\\n                            <span class=\\\"description\\\">\\n                                LOCAL: prepares the system to work on one host or virtual machine.\\n                                <br />MASTER: defines the host or virtual machine as the master node of the cluster, listing the service available to other hosts on the network.\\n                                <br />NODE: sets the host or virtual machine as node mode, enabling the search for a master host to connect.\\n                            </span>\\n                            <select formControlName=\\\"OperationMode\\\" name=\\\"OperationMode\\\" class=\\\"form-control\\\"\\n                                    id=\\\"OperationMode\\\">\\n                                <option value=\\\"\\\">Default: LOCAL</option>\\n                                <option value=\\\"LOCAL\\\">LOCAL</option>\\n                                <option value=\\\"NODE\\\">NODE</option>\\n                                <option value=\\\"MASTER\\\">MASTER</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fe.OperationMode.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.OperationMode.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"StartContainers\\\">Number of Nodes:</label>\\n                            <span class=\\\"description\\\">The number of containers (virtual nodes) to be started on backend init.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"StartContainers\\\" placeholder=\\\"Default: 0\\\"\\n                                   name=\\\"StartContainers\\\" class=\\\"form-control\\\" id=\\\"StartContainers\\\">\\n                            <div *ngIf=\\\"submitted && fe.StartContainers.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.StartContainers.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"MaxContainers\\\">Maximum Number of Nodes:</label>\\n                            <span class=\\\"description\\\">The maximum number of containers running as nodes.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"MaxContainers\\\" placeholder=\\\"Default: 30\\\"\\n                                   name=\\\"MaxContainers\\\" class=\\\"form-control\\\" id=\\\"MaxContainers\\\">\\n                            <div *ngIf=\\\"submitted && fe.MaxContainers.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.MaxContainers.errors.min\\\">Max Containers field must have a minimum value of 1500</div>\\n                                <div *ngIf=\\\"fe.MaxContainers.errors.max\\\">Max Containers must be a maximum of value 65534</div>\\n                            </div>\\n                        </div>\\n\\n                    </ng-template>\\n                </li>\\n\\n                <li [ngbNavItem]=\\\"3\\\">\\n                    <a ngbNavLink>Admin</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"HostUser\\\">Host User:</label>\\n                            <span class=\\\"description\\\">Sets the default user for the host and for accessing\\n          the frontend Administrator roles.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"HostUser\\\" placeholder=\\\"Default: user@user\\\"\\n                                   name=\\\"HostUser\\\" class=\\\"form-control\\\" id=\\\"HostUser\\\">\\n                            <div *ngIf=\\\"submitted && fe.HostUser.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.HostUser.errors.minlength\\\">Host User field must have a minimum of 4 characters</div>\\n                                <div *ngIf=\\\"fe.HostUser.errors.maxlength\\\">Host User must be a maximum of 20 characters</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"HostPassword\\\">Host Password:</label>\\n                            <span class=\\\"description\\\">Sets the default user password.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"HostPassword\\\" placeholder=\\\"Default: user\\\"\\n                                   name=\\\"HostPassword\\\" class=\\\"form-control\\\" id=\\\"HostPassword\\\">\\n                            <div *ngIf=\\\"submitted && fe.HostPassword.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.HostPassword.errors.minlength\\\">Host Password field must have a minimum of 4 characters</div>\\n                                <div *ngIf=\\\"fe.HostPassword.errors.maxlength\\\">Host Password must be a maximum of 20 characters</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SelfRegistration\\\">Self Registration:</label>\\n                            <span class=\\\"description\\\">Allows users to create their own logins on the server.</span>\\n                            <select formControlName=\\\"SelfRegistration\\\" placeholder=\\\"Default: On\\\"\\n                                    name=\\\"SelfRegistration\\\" class=\\\"form-control\\\" id=\\\"SelfRegistration\\\">\\n                                <option value=\\\"\\\">Default: On</option>\\n                                <option value=\\\"On\\\">On</option>\\n                                <option value=\\\"Off\\\">Off</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fe.SelfRegistration.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.SelfRegistration.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                    </ng-template>\\n                </li>\\n\\n                <li [ngbNavItem]=\\\"4\\\">\\n                    <a ngbNavLink>Coding</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"CodeExecTimeout\\\">Code Execution Timeout:</label>\\n                            <span class=\\\"description\\\">Defines a timeout to code execution (in seconds).</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"CodeExecTimeout\\\" placeholder=\\\"Default: 20\\\"\\n                                   name=\\\"CodeExecTimeout\\\" class=\\\"form-control\\\" id=\\\"CodeExecTimeout\\\">\\n                            <div *ngIf=\\\"submitted && fe.CodeExecTimeout.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.CodeExecTimeout.errors.min\\\">Code Execution Timeout field must have a minimum value of 10</div>\\n                                <div *ngIf=\\\"fe.CodeExecTimeout.errors.max\\\">Code Execution Timeout must be a maximum of value 1000</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"CodeMaxFileSize\\\">File Size Upload:</label>\\n                            <span class=\\\"description\\\">Sets the maximum file size to upload (in bytes).</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"CodeMaxFileSize\\\" placeholder=\\\"Default: 5242880\\\"\\n                                   name=\\\"CodeMaxFileSize\\\" class=\\\"form-control\\\" id=\\\"CodeMaxFileSize\\\"\\n                                   (click)=\\\"getInputMaxFileSize($event)\\\"\\n                                   (keyup)=\\\"getInputMaxFileSize($event)\\\">{{CodeMaxFileSize}}\\n                            <div *ngIf=\\\"submitted && fe.CodeMaxFileSize.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.CodeMaxFileSize.errors.min\\\">File Size Upload field must have a minimum value of 1</div>\\n                                <div *ngIf=\\\"fe.CodeMaxFileSize.errors.max\\\">File Size Upload must be a maximum of value 10000000000</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Queue\\\">Queuing System:</label>\\n                            <span class=\\\"description\\\">If enabled, a queue system will prevent two codes from running at the same time.\\n          If disabled, it will become optional for each run.</span>\\n                            <select formControlName=\\\"Queue\\\" placeholder=\\\"Default: Off\\\" name=\\\"Queue\\\" class=\\\"form-control\\\"\\n                                    id=\\\"Queue\\\">\\n                                <option value=\\\"\\\">Default: Off</option>\\n                                <option value=\\\"On\\\">On</option>\\n                                <option value=\\\"Off\\\">Off</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fe.Queue.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.Queue.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"MaxConcurrency\\\">Maximum Queue Concurrency:</label>\\n                            <span class=\\\"description\\\">Defines the maximum number of users in the queue, competing for resources.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"MaxConcurrency\\\" placeholder=\\\"Default: 30\\\"\\n                                   name=\\\"MaxConcurrency\\\" class=\\\"form-control\\\" id=\\\"MaxConcurrency\\\">\\n                            <div *ngIf=\\\"submitted && fe.MaxConcurrency.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.MaxConcurrency.errors.min\\\">Max Concurrency field must have a minimum value of 1</div>\\n                                <div *ngIf=\\\"fe.MaxConcurrency.errors.max\\\">Max Concurrency must be a maximum of value 10000000000</div>\\n                            </div>\\n                        </div>\\n\\n                    </ng-template>\\n                </li>\\n\\n                <li [ngbNavItem]=\\\"5\\\">\\n                    <a ngbNavLink>Debug</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Debug\\\">Debug:</label>\\n                            <span class=\\\"description\\\">Shows debug messages on the backend.</span>\\n                            <select formControlName=\\\"Debug\\\" placeholder=\\\"Default: Off\\\" name=\\\"Debug\\\" class=\\\"form-control\\\"\\n                                    id=\\\"Debug\\\">\\n                                <option value=\\\"\\\">Default: Off</option>\\n                                <option value=\\\"On\\\">On</option>\\n                                <option value=\\\"Off\\\">Off</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fe.Debug.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.Debug.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Error\\\">Error:</label>\\n                            <span class=\\\"description\\\">Shows error messages on the backend.</span>\\n                            <select formControlName=\\\"Error\\\" placeholder=\\\"Default: Off\\\" name=\\\"Error\\\" class=\\\"form-control\\\"\\n                                    id=\\\"Error\\\">\\n                                <option value=\\\"\\\">Default: Off</option>\\n                                <option value=\\\"On\\\">On</option>\\n                                <option value=\\\"Off\\\">Off</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fe.Error.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.Error.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                    </ng-template>\\n                </li>\\n\\n                <li [ngbNavItem]=\\\"6\\\">\\n                    <a ngbNavLink>SMTP Account</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpServer\\\">Smtp Server:</label>\\n                            <span class=\\\"description\\\">Server address responsible for sending the account\\n          registration and password recovery emails.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"SmtpServer\\\" placeholder=\\\"Default: empty\\\"\\n                                   name=\\\"SmtpServer\\\" class=\\\"form-control\\\" id=\\\"SmtpServer\\\">\\n                            <div *ngIf=\\\"submitted && fe.SmtpServer.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.SmtpServer.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpPort\\\">Smtp Port:</label>\\n                            <span class=\\\"description\\\">Mail server port.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"SmtpPort\\\" placeholder=\\\"Default: empty\\\"\\n                                   name=\\\"SmtpPort\\\" class=\\\"form-control\\\" id=\\\"SmtpPort\\\">\\n                            <div *ngIf=\\\"submitted && fe.SmtpPort.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.SmtpPort.errors.min\\\">Smtp Port field must have a minimum value of 1</div>\\n                                <div *ngIf=\\\"fe.SmtpPort.errors.max\\\">Smtp Port must be a maximum of value 65534</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpUser\\\">Smtp User:</label>\\n                            <span class=\\\"description\\\">Registered user for sending emails.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"SmtpUser\\\" placeholder=\\\"Default: empty\\\"\\n                                   name=\\\"SmtpUser\\\" class=\\\"form-control\\\" id=\\\"SmtpUser\\\">\\n                            <div *ngIf=\\\"submitted && fe.SmtpUser.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.SmtpUser.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpPassword\\\">Smtp User Password:</label>\\n                            <span class=\\\"description\\\">User Password registered for sending e-mails.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"SmtpPassword\\\" placeholder=\\\"Default: empty\\\"\\n                                   name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" id=\\\"SmtpPassword\\\">\\n                            <div *ngIf=\\\"submitted && fe.SmtpPassword.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.SmtpPassword.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                    </ng-template>\\n                </li>\\n\\n                <li [ngbNavItem]=\\\"\\\">\\n                    <a ngbNavLink>Database Account</a>\\n                    <ng-template ngbNavContent>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DbHost\\\">DB Server:</label>\\n                            <span class=\\\"description\\\">DB Server address.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"DbHost\\\" placeholder=\\\"Default: localhost\\\"\\n                                   name=\\\"DbHost\\\" class=\\\"form-control\\\" id=\\\"DbHost\\\">\\n                            <div *ngIf=\\\"submitted && fe.DbHost.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.DbHost.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DbPort\\\">DB Port:</label>\\n                            <span class=\\\"description\\\">DB server port.</span>\\n                            <input type=\\\"number\\\" formControlName=\\\"DbPort\\\" placeholder=\\\"Default: 3306\\\"\\n                                   name=\\\"SmtpPort\\\" class=\\\"form-control\\\" id=\\\"DbPort\\\">\\n                            <div *ngIf=\\\"submitted && fe.DbPort.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.DbPort.errors.min\\\">DB Port field must have a minimum value of 1</div>\\n                                <div *ngIf=\\\"fe.DbPort.errors.max\\\">DB Port must be a maximum of value 65534</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DbUser\\\">DB User:</label>\\n                            <span class=\\\"description\\\">DB user to connection.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"DbUser\\\" placeholder=\\\"Default: root\\\"\\n                                   name=\\\"DbUser\\\" class=\\\"form-control\\\" id=\\\"DbUser\\\">\\n                            <div *ngIf=\\\"submitted && fe.DbUser.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.DbUser.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DbPassword\\\">DB Password:</label>\\n                            <span class=\\\"description\\\">DB password to connection.</span>\\n                            <input type=\\\"text\\\" formControlName=\\\"DbPassword\\\" placeholder=\\\"Default: 1gu@nACS\\\"\\n                                   name=\\\"DbPassword\\\" class=\\\"form-control\\\" id=\\\"DbPassword\\\">\\n                            <div *ngIf=\\\"submitted && fe.DbPassword.errors\\\" class=\\\"error response\\\">\\n                                <div *ngIf=\\\"fe.DbPassword.errors.required\\\">Field is required</div>\\n                            </div>\\n                        </div>\\n\\n                    </ng-template>\\n                </li>\\n\\n            </ul>\\n            <div [ngbNavOutlet]=\\\"nav\\\" class=\\\"mt-2\\\"></div>\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn-sm btn-success\\\">Update</button>\\n            </div>\\n        </form>\\n\\n        <div class=\\\"response text-center\\\" *ngIf=\\\"response.Name\\\">\\n            <div *ngIf=\\\"response.Name==='ok' || response.Name==='info'\\\" class=\\\"{{response.Name}}\\\">\\n                {{response.Status}}\\n                <app-mat-progress-bar></app-mat-progress-bar>\\n            </div>\\n            <div *ngIf=\\\"response.Name==='error'\\\" class=\\\"{{response.Name}}\\\">{{response.Status}}</div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <span>Try a Code</span>\\n  </h6>\\n\\n  <div class=\\\"card-body hostStatus\\\">\\n    <app-code></app-code>\\n  </div>\\n\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <h6 class=\\\"card-header\\\">\\n    <div style=\\\"float: left\\\">\\n      <span>{{fe.Id.value ? \\\"Edit\\\":\\\"Add\\\"}} System User</span>\\n    </div>\\n    <div style=\\\"float: right\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n      <button class=\\\"btn-sm btn-success\\\" (click)=\\\"setRoute('view-user')\\\" style=\\\"margin-left: 20px;\\\">Users</button>\\n    </div>\\n  </h6>\\n\\n  <div class=\\\"col-md-6 user-container\\\">\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n      </div>\\n\\n      <div class=\\\"error\\\" *ngIf=\\\"ForceChangePass==='1'\\\">Attention, before using the system, you must change the password.</div>\\n      <hr />\\n      <div class=\\\"form-group\\\">\\n        <input *ngIf=\\\"ForceChangePass!=='1'\\\" type=\\\"text\\\" formControlName=\\\"Name\\\" placeholder=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" id=\\\"Name\\\">\\n        <div *ngIf=\\\"submitted && fe.Name.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Name.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Name.errors.minlength\\\">Name must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.Name.errors.maxlength\\\">Name must be a maximum of 60 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"error\\\" *ngIf=\\\"fe.Id.value===1\\\">Attention, the Admin password and email must be changed in the Settings module.\\n        The change here is not definitive.</div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\" formControlName=\\\"Password\\\" placeholder=\\\"Password\\\" name=\\\"Password\\\" class=\\\"form-control\\\" id=\\\"Password\\\">\\n        <div *ngIf=\\\"submitted && fe.Password.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Password.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Password.errors.minlength\\\">Password must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.Password.errors.maxlength\\\">Password must be a maximum of 50 characters</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\" formControlName=\\\"CPassword\\\" placeholder=\\\"Confirm Password\\\" name=\\\"CPassword\\\" class=\\\"form-control\\\" id=\\\"CPassword\\\">\\n        <div *ngIf=\\\"submitted && fe.CPassword.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.CPassword.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.CPassword.errors.minlength\\\">Password must be at least 4 characters</div>\\n          <div *ngIf=\\\"fe.CPassword.errors.maxlength\\\">Password must be a maximum of 50 characters</div>\\n          <div *ngIf=\\\"fe.CPassword.errors.mismatch\\\">The passwords are different</div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"ForceChangePass!=='1'\\\" class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" formControlName=\\\"Email\\\" placeholder=\\\"Email\\\" name=\\\"Email\\\" class=\\\"form-control\\\" id=\\\"Email\\\">\\n        <div *ngIf=\\\"submitted && fe.Email.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Email.errors.required\\\">Field is required</div>\\n          <div *ngIf=\\\"fe.Email.errors.maxlength\\\">Email must be a maximum of 100 characters</div>\\n          <div *ngIf=\\\"fe.Email.errors.email\\\">Please enter a valid email</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n        <label for=\\\"Module\\\">Module:</label>\\n        <select formControlName=\\\"Module\\\" placeholder=\\\"Module\\\" name=\\\"Module\\\" class=\\\"form-control\\\" id=\\\"Module\\\">\\n          <option value=\\\"Admin\\\">Admin</option>\\n          <option value=\\\"User\\\">User</option>\\n        </select>\\n        <div *ngIf=\\\"submitted && fe.Module.errors\\\" class=\\\"error response\\\">\\n          <div *ngIf=\\\"fe.Module.errors.required\\\">Field is required</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"userSession.Module==='Admin'\\\">\\n        <label for=\\\"ForceChangePass\\\">Force password change at next login?</label>\\n        <select formControlName=\\\"ForceChangePass\\\" placeholder=\\\"ForceChangePass\\\"\\n                name=\\\"ForceChangePass\\\" class=\\\"form-control\\\" id=\\\"ForceChangePass\\\">\\n          <option value=\\\"1\\\">Yes</option>\\n          <option value=\\\"0\\\">No</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn-sm btn-success\\\">{{fe.Id.value ? \\\"Update\\\":\\\"Insert\\\"}}</button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h6 class=\\\"card-header\\\">\\n        <div style=\\\"float: left\\\">\\n            <span>System Users</span>\\n        </div>\\n        <div style=\\\"float: right\\\">\\n            <button class=\\\"btn-sm btn-primary\\\" style=\\\"width:100px\\\" (click)=\\\"addUser()\\\">Add</button>\\n        </div>\\n    </h6>\\n\\n    <div *ngIf=\\\"load===0\\\">\\n        <app-mat-progress-bar></app-mat-progress-bar>\\n    </div>\\n\\n    <div *ngIf=\\\"(users?.length <= 0 && load===1)\\\">\\n        No records found.\\n    </div>\\n\\n    <div class=\\\"filter\\\">\\n        <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($any($event.target).value)\\\" placeholder=\\\"Filter: \\\">\\n        </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"mat-elevation-z8 \\\">\\n\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- ID Column -->\\n            <ng-container matColumnDef=\\\"Id\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"Name\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Name}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"Email\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Email}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Module Column -->\\n            <ng-container matColumnDef=\\\"Module\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Module </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Module}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Action Column -->\\n            <ng-container matColumnDef=\\\"Action\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Action </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\n                    <button mat-icon-button (click)=\\\"deleteUser(element)\\\">\\n                        <mat-icon>delete</mat-icon>\\n                    </button>\\n                    <button mat-icon-button (click)=\\\"editUser(element)\\\" style=\\\"margin-left: 20px;\\\">\\n                        <mat-icon>edit</mat-icon>\\n                    </button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </mat-row>\\n        </mat-table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"card m-3\\\">\\n  <div class=\\\"welcome\\\">\\n\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col\\\">\\n        <span>\\n          Hello!\\n          <br />\\n          The Iguana Cluster System allows the execution of parallelized codes in OpenMP, MPI, and CUDA.\\n          <br />\\n          <br />\\n          <span *ngIf=\\\"hostInfo.SelfRegistration==='On'\\\">\\n            <a href=\\\"#\\\" (click)=\\\"setRoute(); false;\\\">Register a user</a> and execute your codes in parallel.\\n          </span>\\n          <br />\\n          <br />\\n          Simple, quick, and easy.\\n          <hr />\\n          Author: Naylor Garcia Bachiega\\n          <br />\\n          Developed for doctoral work at the University of São Paulo - ICMC/USP\\n          <br /><br />\\n          Advisor: Paulo Sérgio Lopes de Souza\\n        </span>\\n      </div>\\n      <div *ngIf=\\\"!userSession.Owner\\\" class=\\\"flex-column\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <app-host-login></app-host-login>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {RemoteSelection} from \"@convergencelabs/monaco-collab-ext/typings/RemoteSelection\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class CodeControl {\r\n\r\n\r\n    public constructor() {\r\n    }\r\n\r\n    showProcess(response) {\r\n        let lines = [];\r\n        let process = [];\r\n\r\n        lines = response.split('\\n');\r\n        lines.forEach(function (v, k) {\r\n\r\n            //PROCESSOR\r\n            let reg = '{P}(.+){P}';\r\n            let matP = v.match(reg);\r\n            if (matP && matP[1] && !process[matP[1]]) {\r\n                process[matP[1]] = [];\r\n            }\r\n            //RANK && MESSAGE\r\n            reg = '{R}(.+){R}';\r\n            let matR = v.match(reg);\r\n            reg = '{M}(.+){M}';\r\n            let matM = v.match(reg);\r\n\r\n            let val = \"\";\r\n            if (matR && matR[1])\r\n                val = \"Rank \" + matR[1];\r\n\r\n            if (matM && matM[1])\r\n                val += \": \" + matM[1];\r\n\r\n            if (val != \"\")\r\n                process[matP[1]].push(val);\r\n\r\n        });\r\n        return process;\r\n    }\r\n\r\n    getColor() {\r\n        let colors = [];\r\n        colors = [\"#00ffff\", \"#f0ffff\", \"#f5f5dc\",\r\n            \"#00ffff\", \"#ff00ff\", \"#ffd700\", \"#ffff00\",\r\n            \"#f0e68c\", \"#add8e6\", \"#e0ffff\", \"#90ee90\",\r\n            \"#d3d3d3\", \"#ffb6c1\", \"#ffffe0\", \"#00ff00\",\r\n            \"#ffa500\", \"#ffc0cb\", \"#c0c0c0\", \"#ffffff\" ]\r\n\r\n        return colors[Math.floor(Math.random() * 19)]\r\n    }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport {HostService} from \"../_services/host.service\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class NodeControl {\r\n\r\n    public constructor() {}\r\n\r\n    nodes(data, index): any {\r\n        let nodesTemp: string[] = [];\r\n        let num = 0;\r\n\r\n        if (data) {\r\n            data.forEach(function (v, k) {\r\n                num += parseInt(v['NumberOfCPUs']);\r\n\r\n                if (v['Container'] != null) {\r\n                    let c = Object.keys(v['Container']).length;\r\n                    if (c > 0) {\r\n                        v['Container'].forEach(function (v1, k1) {\r\n                            if (v1['IP'] != \"\")\r\n                                nodesTemp.push(v1['IP']);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            if (index == 'cpu')\r\n                return num;\r\n            if (index == 'nodes')\r\n                return nodesTemp;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {DialogComponent} from \"../_services/dialog/dialog.component\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ResponseStr} from \"../_model/service\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class UtilControl {\r\n\r\n\r\n    public constructor(\r\n        public dialog: MatDialog,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n    ) {\r\n    }\r\n\r\n    setResponse(text, action, panel, route) {\r\n        if (!panel)\r\n            panel = action\r\n\r\n        let snackBarRef = this._snackBar.open(text, action, {\r\n            duration: 5000, panelClass: [panel]\r\n        });\r\n\r\n        if (route) {\r\n            snackBarRef.onAction().subscribe(() =>\r\n                this.router.navigate([route])\r\n            );\r\n        }\r\n\r\n        return snackBarRef;\r\n    }\r\n\r\n    openModal(title, text, yes, no, input) {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.autoFocus = true;\r\n        dialogConfig.data = {\r\n            id: 1,\r\n            title: title,\r\n            text: text,\r\n            yes: yes,\r\n            no: no,\r\n            input: input,\r\n        };\r\n\r\n        const modalDialog = this.dialog.open(DialogComponent, dialogConfig);\r\n\r\n        return modalDialog;\r\n    }\r\n\r\n    formatBytes(bytes,decimal=2){\r\n        if (bytes < 10)\r\n            return bytes + \" Bytes\";\r\n        if(0===bytes)\r\n            return\"0 Bytes\";\r\n        const c=0>decimal?0:decimal,d=Math.floor(Math.log(bytes)/Math.log(1024));\r\n        return parseFloat((bytes/Math.pow(1024,d)).toFixed(c))+\" \"+[\"Bytes\",\"KB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\",\"ZB\",\"YB\"][d]\r\n    }\r\n\r\n    public delay(ms: number):\r\n        Promise<boolean> {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, ms);\r\n        });\r\n    }\r\n\r\n    countdown(distance) {\r\n        distance = distance * 1000;\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        // Display the result in the element with id=\"demo\"\r\n        return days + \"d \" + hours + \"h \"\r\n            + minutes + \"m \" + seconds + \"s \";\r\n    }\r\n\r\n    numberFormat(number) {\r\n        if (number.toString().length < 2)\r\n            number = \"0\" + number;\r\n        return number\r\n    }\r\n\r\n}","import {map} from 'rxjs/internal/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {HostService} from \"../_services/host.service\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(\n      private host: HostService,\n      private router: Router,\n  ){}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    //console.log(request);\n\n    if (window.localStorage.getItem(\"ForceChangePass\") == \"1\")\n      this.router.navigate(['edit-user']);\n\n    let session = JSON.stringify(this.host.getSessionID());\n    let auth = [];\n    auth[0] = this.host.encrypt(session);\n    auth[1] = localStorage.getItem('OWNER');\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: auth,\n      }\n    });\n\n    return next.handle(request).pipe(\n        // We use the map operator to change the data from the response\n        map(resp => {\n\n          //Exceptions\n          if (request.url.indexOf('assets') != -1 ||\n              request.url == \"/api/fileRequest\" ||\n            request.url == \"/api/fileResponse\")\n            return resp;\n\n          if (resp instanceof HttpResponse) {\n            // and make changes to it, then return that clone\n            return  resp.clone({ body: this.host.decrypt(resp.body) });\n          }\n        })\n    );\n  }\n}\n","export default \"/deep/.mat-dialog-container {\\n  background: #418ad5 !important;\\n  display: block;\\n  white-space: pre-line;\\n  font-size: 12px;\\n}\\n\\ntextarea:focus, input:focus{\\n  outline: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX3NlcnZpY2VzL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDhCQUE4QjtFQUM5QixjQUFjO0VBQ2QscUJBQXFCO0VBQ3JCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9fc2VydmljZXMvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiL2RlZXAvLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZDogIzQxOGFkNSAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2hpdGUtc3BhY2U6IHByZS1saW5lO1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbnRleHRhcmVhOmZvY3VzLCBpbnB1dDpmb2N1c3tcbiAgb3V0bGluZTogbm9uZTtcbn0iXX0= */\"","import { Component, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef} from \"@angular/material/dialog\";\nimport {dialogStr} from \"../../_model/dialog\";\n\n@Component({\n  selector: 'app-my-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\n\n\nexport class DialogComponent  {\n\n  modalTitle: string;\n  modalText: string;\n  modalYes: string;\n  modalNo: string;\n  modalInput: dialogStr[] = [];\n\n  constructor(public dialogRef: MatDialogRef<DialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.modalTitle = data.title;\n    this.modalText = data.text;\n    this.modalYes = data.yes;\n    this.modalNo = data.no;\n    this.modalInput = data.input;\n    //console.log(data)\n  }\n\n  close(button) {\n    let values = {'button': button, 'input': this.modalInput};\n    this.dialogRef.close(values);\n  }\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {HostInfoStr} from \"../_model/hostInfo\";\nimport {CodeEmitterStr} from \"../_model/code\";\nimport {ResponseStr} from \"../_model/service\";\nimport {ExercisesStr} from \"../_model/exercises\";\nimport {ClassroomStr} from \"../_model/classroom\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventEmitterService {\n\n  newOpMode = new EventEmitter();\n  hostInfo = new EventEmitter();\n  loginChange = new EventEmitter();\n  code = new EventEmitter();\n  exercise = new EventEmitter();\n  classroom = new EventEmitter();\n\n  constructor() { }\n\n  // Detect when login or logout happens\n  setLoginChange(data: ResponseStr) {\n    this.loginChange.emit(data);\n  }\n\n  // Keep the HostInfo updated\n  setHostInfo(data: HostInfoStr) {\n    this.hostInfo.emit(data);\n  }\n\n  setNewOpMode(data: string) {\n    this.newOpMode.emit(data);\n  }\n\n  setCode(code: CodeEmitterStr) {\n    //console.log(code);\n    this.code.emit(code);\n  }\n\n  setExercise(exercise: ExercisesStr) {\n    //console.log(code);\n    this.exercise.emit(exercise);\n  }\n\n  setClassroom(classroom: ClassroomStr) {\n    //console.log(code);\n    this.classroom.emit(classroom);\n  }\n}","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable()\nexport class ExcelService {\n\n  constructor() { }\n\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    //console.log('worksheet',worksheet);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    //const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'buffer' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n\n  private saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], {\n      type: EXCEL_TYPE\n    });\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n  }\n\n}","import {Injectable} from '@angular/core';\nimport {Observable, of, throwError} from \"rxjs\";\nimport {catchError, map, retry} from \"rxjs/internal/operators\";\nimport {HttpClient, HttpErrorResponse, HttpEvent, HttpParams, HttpRequest,} from \"@angular/common/http\";\nimport {AuthStr} from \"../_model/service\";\nimport * as CryptoJS from 'crypto-js';\nimport {empty} from \"rxjs/internal/Observer\";\nimport {Router} from \"@angular/router\";\nimport {SettingsComponent} from \"../menu-management/settings/settings.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HostService {\n\n  constructor(private http: HttpClient,\n              private router: Router,\n  ) {\n  }\n\n  ///////////// BACKEND CALL API /////////////////////////////////\n  request(data, call): Observable<any> {\n\n    //console.log(\"Host-Service | data, call\", data, call);\n\n    //CALLs ///////////////\n    // simpleRequest\n    // dbRequest\n    // dbUpdate\n    // setLogin\n    // runExecCode\n    // setOpMode\n    // setConfigs\n\n    return this.http.post<any>('/api/' + call,\n        this.encrypt(JSON.stringify(data)),\n        {responseType: 'text' as 'json'})\n        .pipe(\n            map(response => {\n              return JSON.parse(response);\n            }),\n            retry(1),\n            catchError((err: HttpErrorResponse) => {\n              if (data['Request'] == \"hostInfo\")\n                return '-';\n              else\n                return throwError(empty);\n            })\n        )\n  }\n\n  uploadFileData(file: File, metadata): Observable<HttpEvent<any>> {\n\n    let formData = new FormData();\n\n    formData.append('metadata', new Blob([JSON.stringify(metadata)], {type: 'application/json'}));\n    formData.append('media', file);\n\n    let params = new HttpParams();\n\n    const options = {\n      params: params,\n      reportProgress: true,\n    };\n\n    const req = new HttpRequest('POST', '/api/fileRequest', formData, options);\n    return this.http.request(req);\n  }\n\n  downloadFileData(data, option) {\n    let auth = this.getSessionID();\n    data = this.encrypt(JSON.stringify(data));\n    option = this.encrypt(option);\n\n    location.href = '/api/fileResponse?user=' + encodeURIComponent(auth.Owner) +\n        '&option=' + encodeURIComponent(option) +\n        '&data=' + encodeURIComponent(data);\n  }\n\n  /////////// FRONTEND FUNCTIONS //////////////\n  CodeExample(example) {\n    //console.log(\"CodeExample: \", example);\n    return this.http.get('assets/' + example + '.c', {responseType: 'text'})\n        .toPromise();\n  }\n\n  killSessionID() {\n    localStorage.clear();\n  }\n\n  setSessionID(owner, module, params) {\n    localStorage.setItem('OWNER', owner);\n    localStorage.setItem('MODULE', module);\n\n    let param = params.split(\"|\");\n\n    localStorage.setItem('ID', param[0]);\n    localStorage.setItem('PASS', param[1]);\n    localStorage.setItem('TOKEN', param[2]);\n    localStorage.setItem('NAME', param[3]);\n  }\n\n  getSessionID() {\n    let auth = {} as AuthStr;\n\n    auth.Owner = localStorage.getItem('OWNER');\n    auth.Password = localStorage.getItem('PASS');\n    auth.Name = localStorage.getItem('NAME');\n    auth.Module = localStorage.getItem('MODULE');\n    auth.Id = Number(localStorage.getItem('ID'));\n    auth.Token = localStorage.getItem('TOKEN');\n\n    if ((auth.Owner == \"\" || auth.Owner == \"undefined\" || auth.Owner == null)\n        && auth.Module != \"SelfRegistration\")\n      return auth = {Owner: \"\", Password: \"\", Name: \"\", Module: \"\", Id: null, Token: \"\"};\n\n    return auth\n  }\n\n  checkSessionID(service) {\n    let admin = [\n        'ClusterAvailableComponent',\n        'SettingsComponent',\n        'CurrentNodesComponent',\n        'ClassroomManagerComponent',\n    ];\n\n    if (this.getSessionID().Module == 'SelfRegistration')\n      return\n\n    if (this.getSessionID().Id == null || !this.getSessionID()) {\n      this.router.navigate(['welcome']);\n    }\n\n    if (this.getSessionID().Module != 'Admin' && admin.includes(service)) {\n      this.router.navigate(['welcome']);\n    }\n\n  }\n\n  encrypt(value: string): string {\n    let token = \"NPZ8fvABP5pKSwU3\";\n    if (localStorage.getItem('OWNER'))\n      token = localStorage.getItem('TOKEN');\n\n    return CryptoJS.AES.encrypt(value, token.trim()).toString();\n  }\n\n  decrypt(textToDecrypt) {\n    let token = \"NPZ8fvABP5pKSwU3\";\n    if (localStorage.getItem('OWNER'))\n      token = localStorage.getItem('TOKEN');\n\n    let d = CryptoJS.AES.decrypt(textToDecrypt, token.trim()).toString(CryptoJS.enc.Utf8);\n\n    if (d) {\n      try {\n        let o = JSON.parse(d);\n        if (o[\"Name\"] == \"error\" && o[\"Status\"] == \"token\") {\n          localStorage.setItem('TOKEN', 'error');\n        }\n      } catch (e) {\n      }\n    }\n\n    return d;\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error, result);\n\n      return of(result as T);\n    };\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19zZXJ2aWNlcy9tYXQtcHJvZ3Jlc3MtYmFyL21hdC1wcm9ncmVzcy1iYXIuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-mat-progress-bar',\n  templateUrl: './mat-progress-bar.component.html',\n  styleUrls: ['./mat-progress-bar.component.css']\n})\nexport class MatProgressBarComponent implements OnInit {\n\n  progresValue:number;\n  rangeArray:number[];\n\n  constructor() {\n    this.progresValue = 0;\n    this.rangeArray = new Array(100);\n  }\n\n  ngOnInit() {\n  }\n\n  @HostListener(\"window:scroll\", [])\n\n  onWindowScroll() {\n    var element = document.documentElement,\n      body = document.body,\n      scrollTop = 'scrollTop',\n      scrollHeight = 'scrollHeight';\n      this.progresValue =\n        (element[scrollTop]||body[scrollTop]) /\n        ((element[scrollHeight]||body[scrollHeight]) - element.clientHeight) * 100;\n  }\n\n}\n","import {EventEmitter, Injectable} from \"@angular/core\";\r\nimport {CodePairStr} from \"../_model/code\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class SocketService {\r\n    private socket: WebSocket;\r\n    private listener: EventEmitter<any> = new EventEmitter();\r\n\r\n    public constructor() {\r\n\r\n        let webSocketPort = window.localStorage.getItem(\"WebSocketPort\");\r\n        let url = new URL('/ws/', window.location.href);\r\n        url.protocol = url.protocol.replace('http', 'ws');\r\n\r\n        this.socket = new WebSocket(\"ws://\"+url.hostname+\":\"+webSocketPort+\"/ws\");\r\n        this.socket.onopen = event => {\r\n            this.listener.emit({type: \"open\", data: event});\r\n        };\r\n        this.socket.onclose = event => {\r\n            this.listener.emit({type: \"close\", data: event});\r\n        };\r\n        this.socket.onmessage = event => {\r\n            this.listener.emit({type: \"message\", data: JSON.parse(event.data)});\r\n        };\r\n    }\r\n\r\n    public isOpen() { return this.socket.readyState === this.socket.OPEN }\r\n\r\n    public send(data: CodePairStr) {\r\n        try {\r\n            if (!this.isOpen()) {\r\n                console.log(\"Socket is not open\");\r\n                return;\r\n            }\r\n            this.socket.send(JSON.stringify(data));\r\n        } catch (e) {\r\n            console.log(e.error);\r\n        }\r\n    }\r\n\r\n    public close() {\r\n        this.socket.close();\r\n    }\r\n\r\n    public getEventListener() {\r\n        return this.listener;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ExercisesComponent} from \"./menu-classroom/classroom/exercises/exercises.component\";\nimport {ExercisesEditComponent} from \"./menu-classroom/classroom/exercises/exercises-edit/exercises-edit.component\";\nimport {ExercisesAnswerComponent} from \"./menu-classroom/classroom/exercises/exercises-answer/exercises-answer.component\";\nimport {ExercisesAnswerEditComponent} from \"./menu-classroom/classroom/exercises/exercises-answer/exercises-answer-edit/exercises-answer-edit.component\";\nimport {ExercisesGroupsComponent} from \"./menu-classroom/classroom/exercises/exercises-edit/exercises-groups/exercises-groups.component\";\nimport {ClassroomComponent} from \"./menu-classroom/classroom/classroom.component\";\nimport {ClassroomEditComponent} from \"./menu-classroom/classroom/classroom-edit/classroom-edit.component\";\nimport {GroupsComponent} from './menu-classroom/classroom/groups/groups.component';\nimport {GroupsEditComponent} from \"./menu-classroom/classroom/groups/groups-edit/groups-edit.component\";\nimport {GroupsMembersComponent} from \"./menu-classroom/classroom/groups/groups-members/groups-members.component\";\nimport {UsersClassroomJoinComponent} from \"./menu-classroom/classroom/users/users-join/users-join.component\";\nimport {SettingsComponent} from \"./menu-management/settings/settings.component\";\nimport {TryCodeComponent} from \"./try-code/try-code.component\";\nimport {UsersComponent} from \"./users/users.component\";\nimport {UsersEditComponent} from \"./users/users-edit/users-edit.component\";\nimport {ClassroomManagerComponent} from \"./menu-management/classroom-manager/classroom-manager.component\";\nimport {ClassroomManagerEditComponent} from \"./menu-management/classroom-manager/classroom-manager-edit/classroom-manager-edit.component\";\nimport {WelcomeComponent} from \"./welcome/welcome.component\";\nimport {HostLoginComponent} from \"./host-credentials/host-login/host-login.component\";\nimport {CurrentNodesComponent} from \"./menu-management/current-nodes/current-nodes.component\";\nimport {ClusterAvailableComponent} from \"./menu-management/cluster-available/cluster-available.component\";\nimport {MonitoringComponent} from \"./menu-management/monitoring/monitoring.component\";\nimport {UsersClassroomEditComponent} from \"./menu-classroom/classroom/users/users-edit/users-edit.component\";\nimport {UsersClassroomComponent} from \"./menu-classroom/classroom/users/users.component\";\n\nconst routes: Routes = [\n  { path: 'welcome',                component: WelcomeComponent,              },\n  { path: '',                       component: WelcomeComponent,              },\n  { path: '404',                    component: WelcomeComponent,              },\n  { path: 'view-code',              component: TryCodeComponent,              },\n  { path: 'settings',               component: SettingsComponent,             },\n  { path: 'edit-user',              component: UsersEditComponent             },\n  { path: 'add-user',               component: UsersEditComponent             },\n  { path: 'view-user',              component: UsersComponent,                },\n  { path: 'view-classroom',         component: ClassroomComponent             },\n  { path: 'edit-classroom',         component: ClassroomEditComponent         },\n  { path: 'add-classroom',          component: ClassroomEditComponent         },\n  { path: 'add-join-classroom',     component: UsersClassroomJoinComponent,   },\n  { path: 'edit-user-classroom',    component: UsersClassroomEditComponent,   },\n  { path: 'add-user-classroom',     component: UsersClassroomEditComponent,   },\n  { path: 'view-user-classroom',    component: UsersClassroomComponent,       },\n  { path: 'edit-group',             component: GroupsEditComponent            },\n  { path: 'add-group',              component: GroupsEditComponent            },\n  { path: 'add-members',            component: GroupsMembersComponent,        },\n  { path: 'view-group',             component: GroupsComponent,               },\n  { path: 'view-exercise',          component: ExercisesComponent,            },\n  { path: 'edit-exercise',          component: ExercisesEditComponent         },\n  { path: 'add-exercise',           component: ExercisesEditComponent         },\n  { path: 'add-groupex',            component: ExercisesGroupsComponent,      },\n  { path: 'view-answer',            component: ExercisesAnswerComponent,      },\n  { path: 'add-answer',             component: ExercisesAnswerEditComponent,  },\n  { path: 'edit-answer',            component: ExercisesAnswerEditComponent,  },\n  { path: 'host-login',             component: HostLoginComponent,            },\n  { path: 'cluster-available',      component: ClusterAvailableComponent,     },\n  { path: 'current-nodes',          component: CurrentNodesComponent,         },\n  { path: 'monitoring',             component: MonitoringComponent,           },\n  { path: 'edit-classroom-manager', component: ClassroomManagerEditComponent, },\n  { path: 'add-classroom-manager',  component: ClassroomManagerEditComponent, },\n  { path: 'view-classroom-manager', component: ClassroomManagerComponent,     },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n.hostInfo {\\n  text-align: right;\\n  padding: 0 50px 0 0 !important;\\n}\\n\\nmain {\\n  margin-left: 25px !important;\\n  margin-top: -40px !important;\\n}\\n\\n.col-md-9 {\\n  margin-top: -15px !important;\\n}\\n\\n.mb-4, .my-4 {\\n  margin-left: -15px !important;\\n\\n}\\n\\n.jumbotron {\\n  padding: 1rem 0rem;\\n}\\n\\n.navbar {\\n  padding: 0 0 0 0;\\n  margin-top: -20px !important;\\n}\\n\\n.spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.MASTER {\\n  background-color: #878787;\\n}\\n\\nfooter {\\n  background-color: #e9ecef;\\n}\\n\\n.mat-drawer-container {\\n  background-color: rgb(111 111 111 / 32%);\\n  color: #fff;\\n}\\n\\n.mat-drawer {\\n  background: #fff;\\n  color: #000;\\n}\\n\\n.mat-drawer.mat-drawer-side {\\n  /* background: rgb(111 111 111 / 32%); */\\n}\\n\\n.mat-sidenav-fixed {\\n  /* background: rgb(111 111 111 / 32%); */\\n}\\n\\n.mat-drawer-container {\\n  background-color: #fff;\\n  color: #000;\\n}\\n\\n::ng-deep .mat-expansion-indicator {\\n  background: rgba(255, 255, 255, 0.56) !important;\\n  color: #000 !important;\\n}\\n\\n::ng-deep .mat-expansion-panel {\\n  background: #fff;\\n  color: #000;\\n  /* box-shadow: 0 0 0 0 !important; */\\n}\\n\\n.mat-list-base {\\n  width: 95%;\\n  padding-left: 8px;\\n}\\n\\n::ng-deep .mat-toolbar {\\n  background: rgb(208 208 208) !important;\\n}\\n\\n::ng-deep .mat-drawer-inner-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n::ng-deep .mat-expansion-panel-header-title {\\n  color: #000 ;\\n}\\n\\n::ng-deep .mat-expansion-panel:not([class*=mat-elevation-z]) {\\n   box-shadow: 0 0 0 0 !important;\\n}\\n\\n::ng-deep .mat-expansion-panel {\\n  /* background: rgb(111 111 111 / 32%); */\\n  /* display: block */\\n  color: #000;\\n}\\n\\n::ng-deep .mat-expansion-panel-body {\\n  padding: 5px 5px 5px 20px !important;\\n}\\n\\n::ng-deep .card {\\n  border-radius: 0px !important;\\n}\\n\\n::ng-deep .mat-divider {\\n  border-top-color: #000 !important;\\n}\\n\\n.icon {\\n  width: 60px;\\n  height: 60px;\\n}\\n\\n.down {\\n  min-height: 200px;\\n}\\n\\n.version {\\n  font-size: 12px;\\n}\\n\\n.iguana {\\n  color: #000;\\n}\\n\\n.noIP {\\n  font-size: 12px;\\n  color: #f60202;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1Qiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSw2QkFBNkI7O0FBRS9COztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx3Q0FBd0M7RUFDeEMsV0FBVztBQUNiOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLHdDQUF3QztBQUMxQzs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnREFBZ0Q7RUFDaEQsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsdUNBQXVDO0FBQ3pDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtHQUNHLDhCQUE4QjtBQUNqQzs7QUFFQTtFQUNFLHdDQUF3QztFQUN4QyxtQkFBbUI7RUFDbkIsV0FBVztBQUNiOztBQUVBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uaG9zdEluZm8ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcGFkZGluZzogMCA1MHB4IDAgMCAhaW1wb3J0YW50O1xufVxuXG5tYWluIHtcbiAgbWFyZ2luLWxlZnQ6IDI1cHggIWltcG9ydGFudDtcbiAgbWFyZ2luLXRvcDogLTQwcHggIWltcG9ydGFudDtcbn1cblxuLmNvbC1tZC05IHtcbiAgbWFyZ2luLXRvcDogLTE1cHggIWltcG9ydGFudDtcbn1cblxuLm1iLTQsIC5teS00IHtcbiAgbWFyZ2luLWxlZnQ6IC0xNXB4ICFpbXBvcnRhbnQ7XG5cbn1cblxuLmp1bWJvdHJvbiB7XG4gIHBhZGRpbmc6IDFyZW0gMHJlbTtcbn1cblxuLm5hdmJhciB7XG4gIHBhZGRpbmc6IDAgMCAwIDA7XG4gIG1hcmdpbi10b3A6IC0yMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuLk1BU1RFUiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4Nzg3ODc7XG59XG5cbmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG59XG5cbi5tYXQtZHJhd2VyLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTEgMTExIDExMSAvIDMyJSk7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubWF0LWRyYXdlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4ubWF0LWRyYXdlci5tYXQtZHJhd2VyLXNpZGUge1xuICAvKiBiYWNrZ3JvdW5kOiByZ2IoMTExIDExMSAxMTEgLyAzMiUpOyAqL1xufVxuXG4ubWF0LXNpZGVuYXYtZml4ZWQge1xuICAvKiBiYWNrZ3JvdW5kOiByZ2IoMTExIDExMSAxMTEgLyAzMiUpOyAqL1xufVxuXG4ubWF0LWRyYXdlci1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBjb2xvcjogIzAwMDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZXhwYW5zaW9uLWluZGljYXRvciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41NikgIWltcG9ydGFudDtcbiAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZXhwYW5zaW9uLXBhbmVsIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgY29sb3I6ICMwMDA7XG4gIC8qIGJveC1zaGFkb3c6IDAgMCAwIDAgIWltcG9ydGFudDsgKi9cbn1cblxuLm1hdC1saXN0LWJhc2Uge1xuICB3aWR0aDogOTUlO1xuICBwYWRkaW5nLWxlZnQ6IDhweDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IHJnYigyMDggMjA4IDIwOCkgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZHJhd2VyLWlubmVyLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbjo6bmctZGVlcCAubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXItdGl0bGUge1xuICBjb2xvcjogIzAwMCA7XG59XG5cbjo6bmctZGVlcCAubWF0LWV4cGFuc2lvbi1wYW5lbDpub3QoW2NsYXNzKj1tYXQtZWxldmF0aW9uLXpdKSB7XG4gICBib3gtc2hhZG93OiAwIDAgMCAwICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0LWV4cGFuc2lvbi1wYW5lbCB7XG4gIC8qIGJhY2tncm91bmQ6IHJnYigxMTEgMTExIDExMSAvIDMyJSk7ICovXG4gIC8qIGRpc3BsYXk6IGJsb2NrICovXG4gIGNvbG9yOiAjMDAwO1xufVxuXG46Om5nLWRlZXAgLm1hdC1leHBhbnNpb24tcGFuZWwtYm9keSB7XG4gIHBhZGRpbmc6IDVweCA1cHggNXB4IDIwcHggIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5jYXJkIHtcbiAgYm9yZGVyLXJhZGl1czogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0LWRpdmlkZXIge1xuICBib3JkZXItdG9wLWNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG5cbi5pY29uIHtcbiAgd2lkdGg6IDYwcHg7XG4gIGhlaWdodDogNjBweDtcbn1cblxuLmRvd24ge1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbn1cblxuLnZlcnNpb24ge1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5pZ3VhbmEge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLm5vSVAge1xuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiAjZjYwMjAyO1xufSJdfQ== */\"","import {Component, ViewChild} from '@angular/core';\nimport {HostService} from \"./_services/host.service\";\nimport {EventEmitterService} from \"./_services/event-emitter.service\";\nimport {HostInfoStr} from \"./_model/hostInfo\";\nimport {ClusterStr} from \"./_model/cluster\";\nimport {ParamStr, RequestStr, ResponseStr} from \"./_model/service\";\nimport {Router} from \"@angular/router\";\nimport {MatSidenav} from \"@angular/material/sidenav\";\nimport {UtilControl} from \"./_control/util.control\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  // @ts-ignore\n  @ViewChild('drawer') sidenav: MatSidenav;\n\n  idleState = 'Not started.';\n  timedOut = false;\n  lastPing?: Date = null;\n  title = 'angular-idle-timeout';\n\n  hostConnection: ResponseStr;\n  clusterConnection: ResponseStr;\n\n  tmp_hostConnection: ResponseStr;\n  tmp_clusterConnection: ResponseStr;\n  tmp_OkConnection: ResponseStr;\n\n  hostInfo = {} as HostInfoStr;\n  cluster = {} as ClusterStr;\n\n  newOpMode: string;\n\n  panelOpenState: boolean;\n  isHandset$: any;\n\n  load = 0;\n\n  version: string;\n  conn: any;\n\n  subLogin: Subscription;\n  subNewOpMode: Subscription;\n\n  constructor(\n      private router: Router,\n      private host: HostService,\n      public _util: UtilControl,\n      private _eventEmitter: EventEmitterService,\n  ){}\n\n  ngOnInit() {\n\n    this.hostInfo.Cluster = this.cluster;\n\n    this.tmp_hostConnection = {\n      Name: \"info\",\n      Status: \"waiting data from host...\",\n    };\n    this.tmp_clusterConnection = {\n      Name: \"info\",\n      Status: \"waiting for some cluster on the network...\",\n    };\n\n    this.tmp_OkConnection = {\n      Name: \"ok\",\n      Status: \"connected\",\n    };\n\n    this.hostConnection = this.tmp_hostConnection;\n    this.clusterConnection = this.tmp_clusterConnection;\n\n    this.getVersion();\n\n    //Getting value from child HostCredentials\n    this.subLogin = this._eventEmitter.loginChange.subscribe(\n        data => {\n          //console.log('App Root | _eventEmitter.SendMsgAppRoot  ', data);\n          this.getHostInfo();\n\n          if (data['Name'] == \"stopSession\")\n            this.sidenav.close();\n          //if (data['Name'] == \"startSession\")\n          //  this.sidenav.toggle();\n        },\n    );\n\n    //Getting value from child OperationModeComponent\n    this.subNewOpMode = this._eventEmitter.newOpMode.subscribe(\n        data => {\n          this.sidenav.close();\n          this.newOpMode = data;\n          this.clusterConnection = this.tmp_clusterConnection;\n          this.hostConnection = this.tmp_hostConnection;\n\n          this.host.killSessionID();\n        },\n    );\n\n    this.managerStatus();\n\n  }\n\n  ngOnDestroy() {\n    this.subLogin.unsubscribe();\n    this.subNewOpMode.unsubscribe();\n  }\n\n  getVersion() {\n    let params: ParamStr[] = [];\n\n    let request: RequestStr = {\n      Request: \"version\",\n      Param: params,\n    };\n\n    let queue;\n    this.host.request(request, 'simpleRequest')\n        .subscribe(data => {\n          this.version = data;\n        });\n  }\n\n  checkToken() {\n    // Let's check if token is already valid\n    // This value come from HttpErrorInterceptor\n    let auth = this.host.getSessionID();\n    if (auth.Token == \"error\") {\n      console.log(\"erro the token\");\n\n      this._util.openModal('Token Error',\n          'This token is no more valid! Please, login again...',\n          'Close', '', '');\n      this.host.killSessionID();\n      this._eventEmitter.setLoginChange({Name: \"error\", Status: \"logout\"});\n    }\n\n  }\n\n  first = 0;\n\n  getHostInfo() {\n    let params: ParamStr[] = [];\n    let request: RequestStr = {\n      Request: \"hostInfo\",\n      Param: params,\n    };\n\n    this.checkToken();\n\n    this.host.request(request, 'simpleRequest')\n        .subscribe(data => {\n\n          //console.log('App Root | hostInfo, this.newOpMode: ', data, this.newOpMode);\n          this.hostInfo = data;\n\n          if (this.hostInfo.WebSocketPort)\n            window.localStorage.setItem('WebSocketPort', this.hostInfo.WebSocketPort);\n\n          if (data == '-' ||\n              data['OpMode'] == '' ||\n              (this.newOpMode && this.hostInfo.OpMode != this.newOpMode)) {\n            // If no connection, show error message\n            this.hostConnection = this.tmp_hostConnection;\n            this.host.killSessionID();\n            this.first = 0;\n            this.sidenav.close();\n\n          } else {\n            //console.log(this.hostInfo);\n\n            this.hostConnection = this.tmp_OkConnection;\n            //Send HostInfo to all children\n            this._eventEmitter.setHostInfo(this.hostInfo);\n\n            //Get Credential\n            if (this.host.getSessionID().Module == \"Admin\")\n              this.hostInfo['IsMaster'] = true;\n\n            if (this.hostInfo.Cluster.MasterIP && this.hostInfo.Cluster.MasterIP != \"\") {\n              this.clusterConnection = this.tmp_OkConnection;\n\n              if (this.first == 0 && this.hostInfo.OpMode == 'NODE') {\n                let ret = this._util.openModal('Master Frontend',\n                    'Do you want to be redirected to the master frontend?',\n                    'Yes', 'No', '');\n\n                ret.afterClosed().subscribe(data => {\n                  if (data['button'] == 'YES') {\n                    window.open(\"http://\"+this.hostInfo.Cluster.MasterIP+\":\"\n                        +this.hostInfo.Cluster.PortFrontend, \"_blank\");\n                  }\n                });\n\n                this.first = 1;\n              }\n            } else {\n              this.clusterConnection = this.tmp_clusterConnection;\n            }\n          }\n\n        });\n  }\n\n  // Let's check host connection after 10 seconds and forever....\n  async managerStatus() {\n    let n = 0;\n\n    while (true)\n    {\n      this.getHostInfo();\n\n      if (this.hostConnection[\"Name\"] == \"info\" && n == 2) {\n        this.conn = this._util.openModal('Connection Failed',\n            'There is no connection with the server!',\n            'Close', '', '');\n      }\n\n      if (this.conn && this.hostConnection[\"Name\"] == \"ok\" && n > 0) {\n        this.conn.close();\n        n = 0;\n      }\n\n      await this._util.delay(10000);\n\n      if (this.hostConnection[\"Name\"] == \"info\")\n        n++;\n\n    }\n  }\n\n}","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\n\n//DECLARATIONS\nimport { MonitoringComponent } from './menu-management/monitoring/monitoring.component';\nimport { AppComponent } from './app.component';\nimport { CodeComponent } from \"./code/code.component\";\nimport { ClusterAvailableComponent } from './menu-management/cluster-available/cluster-available.component';\nimport { CurrentNodesComponent } from './menu-management/current-nodes/current-nodes.component';\nimport { ClusterInfoComponent } from './cluster-info/cluster-info.component';\nimport { DialogComponent } from './_services/dialog/dialog.component';\nimport { ExercisesComponent } from './menu-classroom/classroom/exercises/exercises.component';\nimport { ExercisesAnswerComponent } from './menu-classroom/classroom/exercises/exercises-answer/exercises-answer.component';\nimport { ExercisesAnswerEditComponent } from \"./menu-classroom/classroom/exercises/exercises-answer/exercises-answer-edit/exercises-answer-edit.component\";\nimport { ExercisesEditComponent } from './menu-classroom/classroom/exercises/exercises-edit/exercises-edit.component';\nimport { ExercisesFilesComponent } from \"./menu-classroom/classroom/exercises/exercises-edit/exercises-files/exercises-files.component\";\nimport { ExercisesGroupsComponent } from './menu-classroom/classroom/exercises/exercises-edit/exercises-groups/exercises-groups.component';\nimport { ExcelService } from \"./_services/file.service\";\nimport { ClassroomComponent } from \"./menu-classroom/classroom/classroom.component\";\nimport { ClassroomEditComponent } from \"./menu-classroom/classroom/classroom-edit/classroom-edit.component\";\nimport { GroupsComponent } from './menu-classroom/classroom/groups/groups.component';\nimport { GroupsEditComponent } from \"./menu-classroom/classroom/groups/groups-edit/groups-edit.component\";\nimport { GroupsMembersComponent } from \"./menu-classroom/classroom/groups/groups-members/groups-members.component\";\nimport { UsersClassroomJoinComponent } from \"./menu-classroom/classroom/users/users-join/users-join.component\";\nimport { HostCredentialsComponent } from './host-credentials/host-credentials.component';\nimport { HostLoginComponent } from './host-credentials/host-login/host-login.component';\nimport { HostStatusComponent } from './host-status/host-status.component';\nimport { ClassroomManagerComponent } from \"./menu-management/classroom-manager/classroom-manager.component\";\nimport { ClassroomManagerEditComponent } from \"./menu-management/classroom-manager/classroom-manager-edit/classroom-manager-edit.component\";\nimport { MatProgressBarComponent } from './_services/mat-progress-bar/mat-progress-bar.component';\nimport { MenuClassroomComponent } from './menu-classroom/menu-classroom.component';\nimport { MenuManagementComponent } from \"./menu-management/menu-management.component\";\nimport { SettingsComponent } from \"./menu-management/settings/settings.component\";\nimport { UsersClassroomComponent } from \"./menu-classroom/classroom/users/users.component\";\nimport { UsersClassroomEditComponent } from \"./menu-classroom/classroom/users/users-edit/users-edit.component\";\nimport { UsersComponent } from './users/users.component';\nimport { UsersEditComponent } from './users/users-edit/users-edit.component';\nimport { TryCodeComponent } from \"./try-code/try-code.component\";\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\n\n//IMPORTS\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientJsonpModule, HttpClientModule } from '@angular/common/http';\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSnackBarModule} from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n//PROVIDES\nimport { HttpErrorInterceptor } from './_helpers/HttpErrorInterceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { EventEmitterService } from './_services/event-emitter.service';\n\n//EXPORTS\nimport {CommonModule} from \"@angular/common\";\nimport {enableProdMode} from '@angular/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LayoutModule } from '@angular/cdk/layout';\n\nenableProdMode();\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClusterAvailableComponent,\n    ClusterInfoComponent,\n    CurrentNodesComponent,\n    DialogComponent,\n    ExercisesComponent,\n    ExercisesEditComponent,\n    ExercisesFilesComponent,\n    ExercisesAnswerComponent,\n    ExercisesAnswerEditComponent,\n    ExercisesGroupsComponent,\n    CodeComponent,\n    ClassroomComponent,\n    ClassroomEditComponent,\n    GroupsComponent,\n    GroupsEditComponent,\n    GroupsMembersComponent,\n    HostCredentialsComponent,\n    HostLoginComponent,\n    HostStatusComponent,\n    MatProgressBarComponent,\n    MenuClassroomComponent,\n    MenuManagementComponent,\n    ClassroomManagerComponent,\n    ClassroomManagerEditComponent,\n    MonitoringComponent,\n    SettingsComponent,\n    UsersComponent,\n    UsersEditComponent,\n    UsersClassroomComponent,\n    UsersClassroomJoinComponent,\n    UsersClassroomEditComponent,\n    TryCodeComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    CommonModule,\n    CKEditorModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    MonacoEditorModule.forRoot(),\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    FlexLayoutModule,\n    NgIdleKeepaliveModule.forRoot(),\n    NgbModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    LayoutModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true,\n    }, EventEmitterService,\n    ExcelService,\n  ],\n  bootstrap: [\n    AppComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  entryComponents: [\n    DialogComponent,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AppModule { }\n","export default \".tags {\\n  min-height: 150px;\\n  min-width: 20vw;\\n  max-width: calc(100vw - 35px);\\n}\\n\\n.text-link {\\n  font-size: 14px;\\n}\\n\\n.icon {\\n  width: 60px;\\n  height: 60px;\\n}\\n\\n.main {\\n  float: left;\\n}\\n\\n.mainSide {\\n  float: left;\\n  margin-left: 10px;\\n}\\n\\n::ng-deep .btn-group-sm>.btn, .btn-sm {\\n  padding: 0rem 0rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2x1c3Rlci1pbmZvL2NsdXN0ZXItaW5mby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC9jbHVzdGVyLWluZm8vY2x1c3Rlci1pbmZvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFncyB7XG4gIG1pbi1oZWlnaHQ6IDE1MHB4O1xuICBtaW4td2lkdGg6IDIwdnc7XG4gIG1heC13aWR0aDogY2FsYygxMDB2dyAtIDM1cHgpO1xufVxuXG4udGV4dC1saW5rIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4uaWNvbiB7XG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDYwcHg7XG59XG5cbi5tYWluIHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5tYWluU2lkZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuOjpuZy1kZWVwIC5idG4tZ3JvdXAtc20+LmJ0biwgLmJ0bi1zbSB7XG4gIHBhZGRpbmc6IDByZW0gMHJlbSAhaW1wb3J0YW50O1xufSJdfQ== */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {AuthStr, ResponseStr, ServiceOpModeStr} from \"../_model/service\";\nimport {HostService} from \"../_services/host.service\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport {ClusterStr} from \"../_model/cluster\";\nimport {HostInfoStr} from \"../_model/hostInfo\";\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../_control/util.control\";\n\n@Component({\n  selector: 'app-cluster-info',\n  templateUrl: './cluster-info.component.html',\n  styleUrls: ['./cluster-info.component.css']\n})\nexport class ClusterInfoComponent implements OnInit {\n  //Getting hostInfo from APP ROOT\n  @Input('hostInfo') hostInfo: HostInfoStr;\n  @Input('hostConnection') hostConnection: ResponseStr;\n  @Input('clusterConnection') clusterConnection: ResponseStr;\n\n  userSession = {} as AuthStr;\n  response = {} as ResponseStr;\n  subLogin: Subscription;\n\n  constructor(\n    private host: HostService,\n    public _util: UtilControl,\n    private _eventEmitter: EventEmitterService\n  ) {}\n\n  ngOnInit() {\n\n    //Getting value from child HostCredentials\n    this.subLogin = this._eventEmitter.loginChange.subscribe(\n      data => {\n        //console.log('App Root | _eventEmitter.SendMsgAppRoot  ', data);\n        this.userSession = this.host.getSessionID();\n      },\n    );\n\n    this.userSession = this.host.getSessionID();\n  }\n\n  ngOnDestroy() {\n    this.subLogin.unsubscribe();\n  }\n\n  setOpMode() {\n\n    let ret = this._util.openModal('Exit Cluster',\n      'Do you confirm leaving the cluster??',\n      'Yes', 'No', '');\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data['button'] == 'YES') {\n\n        let cluster = {} as ClusterStr;\n\n        let serviceOpMode: ServiceOpModeStr = {\n          NewOpMode: \"LOCAL\",\n          Cluster: cluster,\n        };\n        //console.log('OperationMode: serviceOpMode ', serviceOpMode)\n\n        this.response['Name'] = \"info\";\n        this.response['Status'] = \"Request sent, wait ...\";\n\n        this.host.request(serviceOpMode, 'setOpMode')\n          .subscribe(data => {\n            this.response = data;\n            if (this.response['Name'] == \"ok\") {\n              // Inform the App Root about new change in OpMode\n              this.host.killSessionID();\n              this._eventEmitter.setNewOpMode(\"LOCAL\");\n            }\n          });\n      }\n    });\n\n  }\n\n\n\n}\n\n","export default \".files {\\n  padding-left: 10px;\\n}\\n\\n.codeButtons {\\n  padding-bottom: 10px;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.form-control {\\n  max-width: 500px;\\n}\\n\\n.text {\\n  min-width: 500px !important;\\n  display: block;\\n}\\n\\n.editor {\\n  height: 90vh !important;\\n  width: 100%;\\n}\\n\\n.editorResult {\\n  height: 200px !important;\\n  width: 100%;\\n}\\n\\n.card {\\n  white-space: pre-line !important;\\n}\\n\\n.codeRun {\\n  font-size: 14px !important;\\n  padding: .75rem 1.25rem;\\n\\n}\\n\\n.serviceOk {\\n  font-size: 14px;\\n  color: #0b51c5;\\n  display: block;\\n  white-space: pre-line;\\n}\\n\\n.runTimeout {\\n  padding: .75rem 1.25rem;\\n  font-size: 12px;\\n  color: #9d1e15;\\n  display: block;\\n  white-space: pre-line;\\n}\\n\\n.queuePosition {\\n  padding: .75rem 1.25rem;\\n  font-size: 12px;\\n  color: #28a745;\\n  display: block;\\n  white-space: pre-line;\\n}\\n\\n.selection {\\n  color: #0a0a0a;\\n  font-size: 14px;\\n}\\n\\n.md-fab-bottom-right{\\n  position: fixed !important;\\n  right: 100px; /* Add this and change value to set the margin you want */\\n  bottom: 10px;\\n  z-index: 9999;\\n}\\n\\n.btn-primary {\\n  color: #000;\\n  background-color: #fff !important;\\n  border-color: #007bff;\\n}\\n\\n.btn-primary.focus, .btn-primary:focus {\\n  color: #000 !important;\\n}\\n\\n.nav-tabs {\\n  width: 80%;\\n}\\n\\n.chat {\\n  border: 2px solid #dedede;\\n  background-color: #f1f1f1;\\n  border-radius: 5px;\\n  margin: 10px 0;\\n  width: 95%;\\n}\\n\\n.darker {\\n  border-color: #ccc;\\n  background-color: #ddd;\\n}\\n\\n.user {\\n  border-color: rgba(131, 129, 129, 0.3);\\n  background-color: rgba(19, 19, 19, 0.3);\\n}\\n\\n.chat::after {\\n  content: \\\"\\\";\\n  clear: both;\\n  display: table;\\n}\\n\\n.chatIcon {\\n  float: left;\\n  max-width: 10px;\\n  width: 100%;\\n  margin-right: 20px;\\n  border-radius: 50%;\\n}\\n\\n.chatIcon-right {\\n  float: right;\\n  margin-right: 10px;\\n}\\n\\n.time-right {\\n  float: right;\\n  color: #aaa;\\n  margin-left: 10px;\\n}\\n\\n.time-left {\\n  float: left;\\n  color: #999;\\n  margin-right: 10px;\\n}\\n\\n.time-user {\\n  float: left;\\n  color: rgba(19, 19, 19, 0.3);\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29kZS9jb2RlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsdUJBQXVCOztBQUV6Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsY0FBYztFQUNkLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2YsY0FBYztFQUNkLGNBQWM7RUFDZCxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLGNBQWM7RUFDZCxjQUFjO0VBQ2QscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsWUFBWSxFQUFFLHlEQUF5RDtFQUN2RSxZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLGlDQUFpQztFQUNqQyxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLHNDQUFzQztFQUN0Qyx1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsV0FBVztFQUNYLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLFdBQVc7RUFDWCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsNEJBQTRCO0VBQzVCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2NvZGUvY29kZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbGVzIHtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG4uY29kZUJ1dHRvbnMge1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbn1cblxuLnRleHQge1xuICBtaW4td2lkdGg6IDUwMHB4ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZWRpdG9yIHtcbiAgaGVpZ2h0OiA5MHZoICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZWRpdG9yUmVzdWx0IHtcbiAgaGVpZ2h0OiAyMDBweCAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcmQge1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmUgIWltcG9ydGFudDtcbn1cblxuLmNvZGVSdW4ge1xuICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcbiAgcGFkZGluZzogLjc1cmVtIDEuMjVyZW07XG5cbn1cblxuLnNlcnZpY2VPayB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICMwYjUxYzU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG59XG5cbi5ydW5UaW1lb3V0IHtcbiAgcGFkZGluZzogLjc1cmVtIDEuMjVyZW07XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICM5ZDFlMTU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG59XG5cbi5xdWV1ZVBvc2l0aW9uIHtcbiAgcGFkZGluZzogLjc1cmVtIDEuMjVyZW07XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICMyOGE3NDU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG59XG5cbi5zZWxlY3Rpb24ge1xuICBjb2xvcjogIzBhMGEwYTtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubWQtZmFiLWJvdHRvbS1yaWdodHtcbiAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XG4gIHJpZ2h0OiAxMDBweDsgLyogQWRkIHRoaXMgYW5kIGNoYW5nZSB2YWx1ZSB0byBzZXQgdGhlIG1hcmdpbiB5b3Ugd2FudCAqL1xuICBib3R0b206IDEwcHg7XG4gIHotaW5kZXg6IDk5OTk7XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1jb2xvcjogIzAwN2JmZjtcbn1cblxuLmJ0bi1wcmltYXJ5LmZvY3VzLCAuYnRuLXByaW1hcnk6Zm9jdXMge1xuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xufVxuXG4ubmF2LXRhYnMge1xuICB3aWR0aDogODAlO1xufVxuXG4uY2hhdCB7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNkZWRlZGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHdpZHRoOiA5NSU7XG59XG5cbi5kYXJrZXIge1xuICBib3JkZXItY29sb3I6ICNjY2M7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XG59XG5cbi51c2VyIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDEzMSwgMTI5LCAxMjksIDAuMyk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTksIDE5LCAxOSwgMC4zKTtcbn1cblxuLmNoYXQ6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY2xlYXI6IGJvdGg7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4uY2hhdEljb24ge1xuICBmbG9hdDogbGVmdDtcbiAgbWF4LXdpZHRoOiAxMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5jaGF0SWNvbi1yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4udGltZS1yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbiAgY29sb3I6ICNhYWE7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4udGltZS1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGNvbG9yOiAjOTk5O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG5cbi50aW1lLXVzZXIge1xuICBmbG9hdDogbGVmdDtcbiAgY29sb3I6IHJnYmEoMTksIDE5LCAxOSwgMC4zKTtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufSJdfQ== */\"","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport {ParamStr, RequestStr, ResponseStr, UniversalDTOStr} from \"../_model/service\";\nimport {\n    CodeEmitterStr,\n    CodePairStr, CodePairUsers,\n    CodeResponseStr,\n    CodeStr,\n    CodeTempStr,\n    QueueStr\n} from \"../_model/code\";\nimport {HostInfoStr} from \"../_model/hostInfo\";\nimport {ContainerStr} from \"../_model/node\";\nimport {ExercisesStr} from \"../_model/exercises\";\nimport {Subscription} from \"rxjs\";\nimport {SocketService} from \"../_services/socket.service\";\nimport {EditorContentManager, RemoteCursorManager, RemoteSelectionManager} from \"@convergencelabs/monaco-collab-ext\";\nimport {editor} from \"monaco-editor\";\nimport {Md5} from 'ts-md5/dist/md5';\nimport {RemoteSelection} from \"@convergencelabs/monaco-collab-ext/typings/RemoteSelection\";\nimport {RemoteCursor} from \"@convergencelabs/monaco-collab-ext/typings/RemoteCursor\";\nimport {CodeControl} from \"../_control/code.control\";\nimport {NodeControl} from \"../_control/node.control\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {UtilControl} from \"../_control/util.control\";\nimport {GroupHistoryStr} from \"../_model/groups\";\n\n@Component({\n    selector: 'app-code',\n    templateUrl: './code.component.html',\n    styleUrls: ['./code.component.css']\n})\n\nexport class CodeComponent implements OnInit {\n// @ts-ignore\n    @ViewChild(\"ResultsTab\", {static: false}) re;\n\n    // @ts-ignore\n    @ViewChild('selectfile') el: ElementRef;   //in html we make variable of selectfile\n    progress = {loaded: 0, total: 0};\n\n    codeForm: FormGroup;\n    submitted = false;\n\n    editor: any;\n    editorOptions = {\n        theme: 'vs-dark',\n        language: 'c',\n        automaticLayout: true,\n        cursorSmoothCaretAnimation: true,\n        fontSize: 12,\n        suggest: true,\n        tabCompletion: true,\n        glyphMargin: true,\n        minimap:\n            {\n                enabled: true,\n                showSlider: \"always\",\n            },\n    };\n\n    resultOptions = {\n        theme: 'vs-dark',\n        language: 'c',\n        automaticLayout: true,\n        readOnly: true,\n    };\n    load = 0;\n\n    cleanDecorations: boolean;\n    otherUserTyping: number;\n    nameUserTyping: string;\n    codePairUsers = {} as CodePairUsers[];\n    offsetLine: number;\n    offsetCol: number;\n    hideMsgUpdateCode = 0;\n    receivedMsg = 0;\n    countLines = 0;\n    cursorEditors: Map<string, RemoteCursor>;\n    selectionEditors: Map<string, RemoteSelection>;\n    lastUpdate: number;\n    lastHistGroup: number;\n    firstUpdate = 1;\n    chatMsg: string;\n    chatList = [];\n    userId: number;\n    groupHistory = {ESelection: 0, EInsert: 0, EDelete: 0, EReplace: 0} as GroupHistoryStr;\n    codeInGroup = -1;\n\n    response = {} as CodeResponseStr;\n    responseTemp = {} as CodeResponseStr;\n    responseQueue = {} as QueueStr;\n    responseFile = {} as ResponseStr;\n\n    codePacket: CodeStr;\n    disabled: boolean;\n    btnCompile: string;\n    btnCompileTemp: string;\n    sequence: string[];\n    programStatus: string;\n    queueStatus: string;\n    programTimeout: number;\n    msgProcess: any[];\n\n    OpMode: string;\n\n    code = {} as CodeEmitterStr;\n    codeTemp = {} as CodeTempStr;\n    codeTempMode: string;\n\n    hostInfo = {} as HostInfoStr;\n    nodes;\n\n    containers = new FormControl();\n\n    command: string;\n    codeExample: string;\n    loadParameters: string;\n\n    exercise = {} as ExercisesStr;\n\n    exerciseFiles: { Id: number, IdExercise: number, FileName: string }[];\n    files = new FormControl();\n    fileName = '';\n    fileCodeExecution!: string[];\n\n    navActive = 1;\n    queue = false;\n    tryACode = \"0\";\n\n    sysInfo!: ParamStr[];\n\n    numberOfCPUs = 0;\n    msgOverLoad = \"\";\n\n    hasChoiceCompile = 0;\n\n    subCode: Subscription;\n    subExercise: Subscription;\n    subSocket: Subscription;\n\n    constructor(\n        private host: HostService,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        private socket: SocketService,\n        private _code: CodeControl,\n        private _node: NodeControl,\n        public _util: UtilControl,\n        @Inject(DOCUMENT) private _document: Document,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        this.codeForm = this.formBuilder.group({\n            CompCmd: ['',\n                [Validators.required,\n                    Validators.minLength(1),\n                ]\n            ],\n            CompArgs: ['',\n                [Validators.required,\n                    Validators.minLength(1),\n                ]\n            ],\n            ExecCmd: ['', []],\n            ExecArgs: ['', []],\n            ExtraArgs: ['', []],\n            File: ['', []],\n            NumberProc: ['',\n                [Validators.required,\n                    Validators.min(1),\n                ]\n            ],\n            run: ['', []],\n        }, {});\n\n        this.disabled = false;\n        this.btnCompile = \"Compile and Run\";\n\n        this.userId = Number(this.host.getSessionID().Id);\n\n        this.exercise.Id = parseInt(window.localStorage.getItem(\"ExerciseId\"));\n\n        //Getting value from child CodeComponent\n        this.subCode = this._eventEmitter.code.subscribe(\n            data => {\n                this.code = data;\n\n                if (this.code.Command) {\n                    let r = this.code.Command.split(\"|\");\n                    this.loadParameters = r[0];\n                    this.fc['CompCmd'].setValue(r[1]);\n                    this.fc['CompArgs'].setValue(r[2]);\n                    this.fc['ExecCmd'].setValue(r[3]);\n                    this.fc['ExecArgs'].setValue(r[4]);\n                    this.fc['ExtraArgs'].setValue(r[5]);\n                    this.fc['NumberProc'].setValue(r[6]);\n\n                    if (this.loadParameters != \"Manual\") {\n                        this.fc['CompCmd'].disable();\n                        this.fc['CompArgs'].disable();\n                        this.fc['ExecCmd'].disable();\n                        this.fc['ExecArgs'].disable();\n                    }\n\n                }\n            },\n        );\n\n        this.tryACode = window.localStorage.getItem(\"TryACode\");\n        if (this.tryACode)\n            this.codeInGroup = 0;\n\n        if (this.exercise.Id)\n            this.getFiles();\n\n        //Getting value from child CodeComponent\n        this.subExercise = this._eventEmitter.exercise.subscribe(\n            data => {\n                this.exercise = data;\n                if (data && this.exercise && this.exercise.Id) {\n                    window.localStorage.setItem(\"ExerciseId\", this.exercise.Id.toString());\n                    this.getFiles();\n                }\n                if (this.exercise['gId']) {\n                    this.getHistoryGroup();\n\n                    if (this.exercise['gId'] > 0 && !this.subSocket) {\n                        this.codeInGroup = 1;\n\n                        this.openSocket(this.exercise.Code);\n\n                        let c = {} as CodePairStr;\n                        c.IdGroup = this.exercise['gId'];\n                        c.IdUser = this.userId;\n                        c.UserName = this.host.getSessionID().Name;\n                        c.Option = \"getCode\";\n                        this.socketSend(c);\n                    }\n                } else {\n                    this.codeInGroup = 0;\n                }\n            },\n        );\n\n        this.getActiveNodes();\n        this.getHostInfo();\n        this.getFilesCodeExecution();\n        //this.codeForm.disable();\n    }\n\n    onInit(editor) {\n        this.editor = editor;\n        this.load = 1;\n\n        const existCondition = setInterval(() => {\n            if (this.exercise) {\n                this.codePair();\n                this.getUsersCoding();\n                clearInterval(existCondition);\n            }\n        }, 1000);\n\n        this.codeTempMode = \"auto\";\n        this.cleanDecorations = false;\n    }\n\n    ngOnDestroy() {\n        this.subCode.unsubscribe();\n        this.subExercise.unsubscribe();\n\n        if (this.subSocket)\n            this.subSocket.unsubscribe();\n    }\n\n\n    onQueue() {\n        this.queue = !this.queue;\n    }\n\n    onChange(editor) {\n        //Save in temp code\n        if (!this.exercise['gId'])\n            this.codeTemp.IdUser = this.userId;\n        if (this.exercise['gId'])\n            this.codeTemp.IdGroup = Number(this.exercise['gId']);\n        this.codeTemp.Code = this.code.Code;\n        this.codeTemp.Command = this.code.Command;\n    }\n\n    setTheme(val: string) {\n        this.editor.setTheme(val);\n    }\n\n    onKeydownEvent(editor) {\n        //To autodetect de compiler language\n        this.setAutoParameters(this.code.Code);\n\n        if (this.cleanDecorations == true) {\n            this.editor.getModel().setValue(this.code.Code);\n            this.cleanDecorations = false;\n        }\n\n        if (!this.lastUpdate)\n            this.lastUpdate = Math.floor(Date.now() / 1000);\n        if ((Math.floor(Date.now() / 1000) - this.lastUpdate) > 5) {\n            this.lastUpdate = Math.floor(Date.now() / 1000);\n            if (this.codeTempMode == \"auto\")\n                this.updateCodeTemp();\n            this.getUsersCoding();\n        }\n\n        if ((Math.floor(Date.now() / 1000) - this.otherUserTyping) < 5) {\n            this._util.setResponse(this.nameUserTyping + ' is typing... ' +\n                'Please, wait 3 sec and try again!'\n                , 'error', null, null);\n            let c = {} as CodePairStr;\n            c.IdGroup = this.exercise['gId'];\n            c.IdUser = this.userId;\n            c.UserName = this.host.getSessionID().Name;\n            c.Option = \"sendCode\";\n            c.Hash = \"\";\n            this.socketSend(c);\n            this.receivedMsg = 1;\n            this.hideMsgUpdateCode = 1;\n        }\n    }\n\n    setErrorCode(error) {\n        let sl = 0;\n        let sc = 0;\n        let ed = this.editor;\n\n        error.split('\\n').forEach( (line) => {\n            let regexp = line.match('(main.c):([0-9]+):([0-9]+)');\n\n            if (error && Array.isArray(regexp) &&\n                regexp.length >= 3 && regexp[1] == \"main.c\") {\n                if (Number(regexp[2]) > 0)\n                    sl = regexp[2];\n                if (Number(regexp[3]) > 0)\n                    sc = regexp[3];\n\n                ed.deltaDecorations([], [\n                    {\n                        range: new monaco.Range(sl, sc, sl, sc),\n                        options: {\n                            isWholeLine: true,\n                            className: 'myContentClass',\n                            glyphMarginClassName: 'myGlyphMarginClass',\n                            glyphMarginHoverMessage: {value: line},\n                        }\n                    }\n                ]);\n\n            }\n        });\n        this.editor = ed;\n        this.cleanDecorations = true;\n    }\n\n    setFont(val: number) {\n        let font = {\"fontSize\": val}\n        this.editor.updateOptions(font);\n    }\n\n    setMiniMap(val: string) {\n        this.editor.updateOptions({minimap: {enabled: val}});\n    }\n\n    getHostInfo() {\n        let params: ParamStr[] = [];\n        let request: RequestStr = {\n            Request: \"hostInfo\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.hostInfo = data;\n            });\n    }\n\n    getSysInfo() {\n        let params: ParamStr[] = [];\n        let request: RequestStr = {\n            Request: \"sysInfo\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.sysInfo = data['Param'];\n                if (data['Request'] != 'ok')\n                    this._util.setResponse('There was a problem executing the request.', 'info', null, null);\n                else\n                    this._util.setResponse('Data found.', 'ok', null, null);\n            });\n    }\n\n    getFilesCodeExecution() {\n        let params: ParamStr[] = [];\n        let request: RequestStr = {\n            Request: \"filesCodeExecution\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.fileCodeExecution = data;\n            });\n    }\n\n    // convenience getter for easy access to form fields\n    get fc() {\n        return this.codeForm.controls;\n    }\n\n    getCodeExample(example) {\n        this.hasChoiceCompile = 1;\n\n        this.host.CodeExample(example)\n            .then(result => {\n                this.receivedMsg = 0;\n                const contentManager = new EditorContentManager({\n                    editor: this.editor,\n                });\n                contentManager.replace(0, result.length + 1, result);\n\n            })\n            .catch(error => {\n                console.log('Error Getting Data: ', error);\n            });\n        this.OpMode = 'vs-dark';\n\n        this.codeExample = example;\n\n        this.setParameters(this.codeExample);\n    }\n\n    setFileCodeExecution(file) {\n        let ExtraArgs = this.fc['ExtraArgs'].value.toString();\n        let ExtraArgsTemp = ExtraArgs.split(\" \");\n\n        if (ExtraArgsTemp.indexOf(file) > -1) {\n            return;\n        } else {\n            if (ExtraArgsTemp.indexOf(\"<\") == -1)\n                ExtraArgs += \"<\";\n            ExtraArgs += \" \" + file;\n        }\n\n        this.fc['ExtraArgs'].setValue(ExtraArgs);\n    }\n\n    setFileParameters(tec) {\n        this.hasChoiceCompile = 1;\n\n        let ExtraArgs = this.fc['ExtraArgs'].value.toString();\n        let ExtraArgsTemp = ExtraArgs.split(\" \");\n\n        //check if all files in the selected box are in the input ExtraArgs\n        if (this.files.value) {\n            for (var i = 0; i < this.files.value.length; i++) {\n                if (ExtraArgsTemp.indexOf(this.files.value[i]) > -1) {\n                    continue;\n                } else {\n                    if (i == 0 && ExtraArgsTemp.indexOf(\"<\") == -1)\n                        ExtraArgs += \"<\";\n                    ExtraArgs += \" \" + this.files.value[i];\n                }\n            }\n        }\n\n        // Removing key index from exerciseFiles\n        if (this.exerciseFiles) {\n            let exerciseFilesTemp = [];\n            for (var i = 0; i < this.exerciseFiles.length; i++) {\n                exerciseFilesTemp[i] = this.exerciseFiles[i]['FileName'];\n            }\n\n            //check if all files in the input ExtraArgs are in the selected box\n            ExtraArgsTemp = ExtraArgs.split(\" \");\n            ExtraArgs = \"\";\n            for (var i = 0; i < ExtraArgsTemp.length; i++) {\n                if (exerciseFilesTemp.indexOf(ExtraArgsTemp[i]) > -1) {\n                    if (this.files.value.indexOf(ExtraArgsTemp[i]) > -1) {\n                        ExtraArgs += \" \" + ExtraArgsTemp[i];\n                    }\n                } else {\n                    ExtraArgs += \" \" + ExtraArgsTemp[i];\n                }\n            }\n        }\n\n        // Check if file uploaded from input File\n        ExtraArgsTemp = ExtraArgs.split(\" \");\n        if (this.fileName != null) {\n            if (ExtraArgsTemp.indexOf(this.fileName) === -1) {\n                if (ExtraArgsTemp.indexOf(\"<\") == -1)\n                    ExtraArgs += \"<\";\n                ExtraArgs += \" \" + this.fileName;\n            }\n        }\n\n        this.fc['ExtraArgs'].setValue(ExtraArgs);\n\n        this.setParameters(tec);\n    }\n\n    setManualParameters(tec) {\n        this.hasChoiceCompile = 1;\n        this.setParameters(tec);\n    }\n\n    setAutoParameters(code) {\n        if (!code)\n            return;\n\n        let c = 0;\n        if (code.indexOf('mpi.h') !== -1) {\n            this.setParameters('MPI');\n            c += 1\n        }\n        if (code.indexOf('omp.h') !== -1) {\n            this.setParameters('OpenMP');\n            c += 1\n        }\n        if (c == 2) {\n            this.setParameters('OpenMP_MPI');\n        }\n        if (code.indexOf('cuda_runtime.h') !== -1) {\n            this.setParameters('CUDA');\n        }\n    }\n\n    updateParameters() {\n        //console.log(\"updateParameters\");\n        this.code.Command = this.loadParameters + \"|\";\n        this.code.Command += this.fc['CompCmd'].value.toString() + \"|\";\n        this.code.Command += this.fc['CompArgs'].value.toString() + \"|\";\n        this.code.Command += this.fc['ExecCmd'].value.toString() + \"|\";\n        this.code.Command += this.fc['ExecArgs'].value.toString() + \"|\";\n        this.code.Command += this.fc['ExtraArgs'].value.toString() + \"|\";\n        if (this.fc['NumberProc'].value > 0)\n            this.code.Command += this.fc['NumberProc'].value.toString();\n        this._eventEmitter.setCode(this.code);\n    }\n\n    setParameters(tec) {\n        if (tec != '')\n            this.loadParameters = tec;\n\n        if (this.loadParameters != \"Manual\") {\n            this.fc['CompCmd'].disable();\n            this.fc['CompArgs'].disable();\n            this.fc['ExecCmd'].disable();\n            this.fc['ExecArgs'].disable();\n        } else {\n            this.fc['CompCmd'].enable();\n            this.fc['CompArgs'].enable();\n            this.fc['ExecCmd'].enable();\n            this.fc['ExecArgs'].enable();\n        }\n\n        let nProcess;\n        if (this.fc['NumberProc'].value > 0)\n            nProcess = this.fc['NumberProc'].value.toString();\n\n        if (nProcess > this.nodes.cpu) {\n            this.msgOverLoad = \"Attention, you are allocating more processes than \" +\n                \"the total number of CPUs in the cluster. \" +\n                \"Performance degradation may occur.\"\n        } else {\n            this.msgOverLoad = \"\";\n        }\n\n        let hosts;\n        if (this.nodes)\n            hosts = \"-host \" + this.nodes.join(\",\");\n        if (this.containers.value != null) {\n            if (this.containers.value[0]) {\n                hosts = \"-host \" + this.containers.value;\n            }\n        }\n\n        let CompCmd = this.fc['CompCmd'].value.toString();\n        let CompArgs = this.fc['CompArgs'].value.toString();\n        let ExecCmd = this.fc['ExecCmd'].value.toString();\n        let ExecArgs = this.fc['ExecArgs'].value.toString();\n        let ExtraArgs = this.fc['ExtraArgs'].value.toString();\n\n        if (this.loadParameters == \"MPI\") {\n            CompCmd = \"mpic++\";\n            CompArgs = \"main.c -o main\";\n            ExecCmd = \"mpiexec\";\n            ExecArgs = \"-n \" + nProcess + \" \" + hosts + \" main\";\n        }\n\n        if (this.loadParameters == \"OpenMP_MPI\") {\n            CompCmd = \"mpic++\";\n            CompArgs = \"-fopenmp main.c -o main\";\n            ExecCmd = \"mpiexec\";\n            ExecArgs = \"-n \" + nProcess + \" \" + hosts + \" main\";\n        }\n\n        if (this.loadParameters == \"OpenMP\") {\n            CompCmd = \"g++\";\n            CompArgs = \"-fopenmp main.c -o main\";\n            ExecCmd = \"main\";\n\n            this.fc['ExecArgs'].setValidators([,]);\n            this.fc['ExecArgs'].updateValueAndValidity();\n            ExecArgs = \"\";\n        }\n\n        if (this.loadParameters == \"CUDA\") {\n            CompCmd = \"nvcc\";\n            CompArgs = \"main.cu -o main\";\n            ExecCmd = \"main\";\n\n            this.fc['ExecArgs'].setValidators([,]);\n            this.fc['ExecArgs'].updateValueAndValidity();\n            ExecArgs = \"\";\n        }\n\n        CompCmd = CompCmd.replace(/\\s{2,}/g, ' ');\n        CompArgs = CompArgs.replace(/\\s{2,}/g, ' ');\n        ExecCmd = ExecCmd.replace(/\\s{2,}/g, ' ');\n        ExecArgs = ExecArgs.replace(/\\s{2,}/g, ' ');\n        ExtraArgs = ExtraArgs.replace(/\\s{2,}/g, ' ');\n\n        this.fc['CompCmd'].setValue(CompCmd.trim());\n        this.fc['CompArgs'].setValue(CompArgs.trim());\n        this.fc['ExecCmd'].setValue(ExecCmd.trim());\n        this.fc['ExecArgs'].setValue(ExecArgs.trim());\n        this.fc['ExtraArgs'].setValue(ExtraArgs.trim());\n\n        this.updateParameters();\n    }\n\n    resetFormFile() {\n        this.responseFile = {} as ResponseStr;\n    }\n\n    uploadFile() {\n        //this.response = {} as ResponseStr;\n\n        if (this.exercise.MaxTimeout == 0 || !this.exercise.MaxTimeout)\n            this.exercise.MaxTimeout = this.hostInfo.CodeMaxFileSize;\n\n        var filedata = this.el.nativeElement.files[0];\n\n        if (parseInt(filedata.size) > this.exercise.MaxFileSize) {\n            this.responseFile.Name = \"error\";\n            this.responseFile.Status = \"The file is larger than the limit set for the exercise. \\n\" +\n                \"\\nFile: \" + filedata.name +\n                \"\\nSize: \" + this._util.formatBytes(filedata.size) +\n                \"\\nMaximum allowed size: \" + this._util.formatBytes(this.exercise.MaxFileSize);\n            return;\n        }\n\n        let param = {} as ParamStr;\n        param.Name = \"Code\";\n        param.Value = this.host.getSessionID().Token;\n\n        this.host.uploadFileData(filedata, param)\n            .subscribe(\n                (data: any) => {\n                    if (data.type == 1 && data.loaded && data.total) {\n                        this.progress.loaded = data.loaded;\n                        this.progress.total = data.total;\n                    } else if (data.body) {\n                        //console.log(\"Data Uploaded\");\n                        //console.log(data.body);\n                        this.setFileParameters('');\n                        this.responseFile.Name = \"ok\";\n                        this.responseFile.Status = \"File uploaded successfully. \" +\n                            \"You can call the file directly in your code by the name: \" + filedata.name;\n                        this.getFilesCodeExecution();\n\n                    }\n                    if (data.loaded == data.total) {\n                        //console.log(filedata);\n                        this.fileName = filedata['name'];\n\n                        //this.load = 0;\n                        if (data.body && data['body']['Name'] == \"error\") {\n                            this.responseFile = data['body'];\n                        }\n                    }\n                },\n                error => console.log(error)\n            )\n    }\n\n    download(file: any) {\n        //console.log(file);\n        this.host.downloadFileData(file, 'ExerciseFiles');\n    }\n\n    onClick(mode) {\n        this.btnCompile = \"Compile\";\n        this.fc['ExecCmd'].setValidators([,]);\n        this.fc['ExecCmd'].updateValueAndValidity();\n\n        if (mode == \"Compile and Run\") {\n            this.fc['ExecCmd'].setValidators([Validators.required, Validators.minLength(1)]);\n            this.fc['ExecCmd'].updateValueAndValidity();\n        }\n\n        this.btnCompile = mode;\n\n        return\n    }\n\n    checkFileParameters() {\n        //Check if user include fopen in his code but forget of input the file\n        if (this.code.Code && this.code.Code.indexOf('fopen') !== -1 &&\n            (!this.fileName && !this.files.value)) {\n            this._util.setResponse(\"Attention, you are called a file in your code. \" +\n                \"Go to the Files tab and send or select the correct file.\", 'info',null, null);\n\n            return false;\n        }\n\n        if (this.exerciseFiles) {\n            //Select automatically the filename in the select box\n            let extraArguments = this.fc['ExtraArgs'].value.split(\" \");\n            let getFilesName = [];\n            for (var va of extraArguments) {\n                for (var ve of this.exerciseFiles) {\n                    if (va == ve['FileName'])\n                        getFilesName.push(va);\n                }\n            }\n\n            if (getFilesName.length > 0)\n                this.files.setValue(getFilesName);\n        }\n    }\n\n    onSubmitCode() {\n\n        this.checkFileParameters();\n\n        this.re.nativeElement.scrollIntoView({behavior: \"smooth\"});\n\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.codeForm.invalid) {\n            this.navActive = 1;\n            return;\n        }\n\n        this.navActive = 4;\n\n        this.codeForm.disable();\n        this.disabled = true;\n\n        let container = {} as ContainerStr[];\n\n        //console.log(this.code.MaxTimeout ,this.hostInfo.CodeExecTimeout);\n\n        if (this.exercise.MaxTimeout == 0 || !this.exercise.MaxTimeout)\n            this.exercise.MaxTimeout = this.hostInfo.CodeExecTimeout;\n\n        this.codePacket = {\n            Token: this.host.getSessionID().Token,\n            Code: this.code.Code,\n            NumberProc: this.fc['NumberProc'].value.toString(),\n            CompArgs: this.fc['CompArgs'].value.toString(),\n            ExecArgs: this.fc['ExecArgs'].value.toString() + \" \" + this.fc['ExtraArgs'].value.toString(),\n            ExecCmd: this.fc['ExecCmd'].value.toString(),\n            CompCmd: this.fc['CompCmd'].value.toString(),\n            FileName: this.fileName,\n            Container: this.containers.value,\n            Files: this.files.value,\n            Queue: this.queue.toString(),\n            Sequence: \"\",\n            IdExercise: this.exercise.Id.toString(),\n            MaxTimeout: (this.exercise.MaxTimeout + 2).toString(),\n            Next: \"\",\n        };\n\n        //console.log(this.codePacket);\n\n        this.sequence = ['queue', 'compile'];\n        if (this.btnCompile == \"Compile and Run\") {\n            this.sequence.push('run');\n            this.codePacket.Next = \"run\";\n        }\n\n        this.btnCompileTemp = this.btnCompile;\n        this.btnCompile = \"wait please...\";\n\n        this.code.Result = \"\";\n\n        this.response['Name'] = 'ok';\n        this.response['Status'] = \"Please wait, we are sending your request to the server.\";\n        this.programStatus = \"is running...\";\n\n        if (this.exercise['gId']) {\n            let c = {} as CodePairStr;\n            c.IdGroup = this.exercise['gId'];\n            c.IdUser = this.userId;\n            c.UserName = this.host.getSessionID().Name;\n            c.Option = \"submit\";\n            c.Hash = \"\";\n            this.socketSend(c);\n        }\n\n        this.managerStatus();\n\n    }\n\n    getActiveNodes() {\n        let params: ParamStr[] = [];\n\n        let request: RequestStr = {\n            Request: \"activeNodes\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n\n                this.numberOfCPUs = this._node.nodes(data, 'cpu');\n                this.fc['NumberProc'].setValue(this.numberOfCPUs);\n                this.nodes = this._node.nodes(data, 'nodes');\n                ;\n            });\n    }\n\n    getFiles() {\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: this.exercise.Id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"exercises-answer-files\",\n            Filter: filter,\n        };\n\n        let fileTemp: string[] = [];\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                this.exerciseFiles = data;\n            });\n    }\n\n    showQueue() {\n        let params: ParamStr[] = [];\n        params.push({Name: \"\", Value: this.codePacket.Token});\n\n        let request: RequestStr = {\n            Request: \"queueCheck\",\n            Param: params,\n        };\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                //console.log(this.codePacket.Token, data);\n                this.responseQueue = data;\n            });\n    }\n\n    runCode() {\n        //console.log(\"CodeEditor | runCode\", this.codePacket);\n        this.host.request(this.codePacket, 'runExecCode')\n            .subscribe(data => {\n                this.responseTemp = data;\n                this.response = this.responseTemp;\n            });\n    }\n\n    async managerStatus() {\n        let wait = true;\n        let wait_queue = false;\n        let wait_compile = false;\n        let wait_run = false;\n        let sequence = \"queue\";\n        let timeout = false;\n\n        //console.log(this.code);\n        this.programTimeout = this.exercise.MaxTimeout;\n        this.command = \"\";\n        this.code.Event = \"\";\n        this.response.Command = \"\";\n        this.responseQueue = {} as QueueStr;\n\n        while (wait) {\n            //Let's refresh the Session Timeout\n            this._eventEmitter.setLoginChange({Name: \"RefreshSession\", Status: \"\"});\n\n            if (timeout == true) {\n                if (this.responseQueue.Count > 5)\n                    this.programTimeout = this.exercise.MaxTimeout - this.responseQueue.Count;\n                else\n                    this.programTimeout--;\n            }\n\n            if (wait_queue && this.responseQueue.Position > 1)\n                this.queueStatus = \"getting position...\"\n\n            if (sequence == \"queue\") {\n                if (!wait_queue) {\n                    this.responseTemp = {} as CodeResponseStr;\n                    this.codePacket.Sequence = \"queue\";\n                    this.runCode();\n                    wait_queue = true;\n                }\n\n                if (wait_queue) {\n                    if (this.responseTemp['Name'] == \"ok\") {\n                        this.showQueue();\n                        if (this.responseQueue.Position)\n                            this.queueStatus = this.responseQueue.Position.toString();\n                    }\n\n                    if (this.responseQueue.Position == 1) {\n                        sequence = \"compile\";\n                    }\n                }\n            }\n\n            await this._util.delay(1000);\n\n            if (sequence == \"compile\") {\n                if (!wait_compile) {\n                    this.responseTemp = {} as CodeResponseStr;\n                    this.codePacket.Sequence = \"compile\";\n                    this.runCode();\n                    wait_compile = true;\n                }\n\n                if (wait_compile) {\n                    if (this.responseTemp['Name']) {\n\n                        //SHOW COMPILE RESULTS\n                        this.code.Event = this.response.Command + \" (time \" + this.response.CompTime + \")\";\n\n                        if (this.fileName)\n                            this.code.Event += \"\\nFilename: \" + this.fileName;\n\n                        this.command += this.code.Event\n\n                        this.code.Event += \"\\n\" + this.response.Status;\n                        this._eventEmitter.setCode(this.code);\n\n                        if (this.responseTemp['Name'] == 'ok') {\n                            if (this.sequence.includes(\"run\"))\n                                sequence = \"run\";\n                            else\n                                wait = false;\n                        }\n                    }\n                }\n            }\n\n            if (sequence == \"run\") {\n                if (!wait_run) {\n                    this.responseTemp = {} as CodeResponseStr;\n                    this.codePacket.Sequence = \"run\";\n                    this.runCode();\n                    this.responseQueue = {} as QueueStr;\n                    wait_run = true;\n                }\n\n                if (wait_run) {\n                    timeout = true;\n                    this.showQueue();\n                    //console.log(this.responseTemp);\n                    if (this.responseTemp['Name']) {\n                        //SHOW RUN RESULTS\n                        this.msgProcess = this._code.showProcess(this.responseTemp.Output);\n                        this.code.Result = this.responseTemp.Output;\n                        this.code.CheckCount = this.responseTemp.CheckCount;\n                        this.code.CheckList = this.responseTemp.CheckList;\n                        this.code.ExecTime = this.responseTemp.ExecTime;\n\n                        this.code.Event = this.response.Command + \" (time \" + this.response.ExecTime + \")\";\n                        this.command += \"\\n\\n\" + this.code.Event\n\n                        this.code.Event += \"\\n\" + this.response.Status;\n                        this.code['DIFF'] = true;\n                        this._eventEmitter.setCode(this.code);\n\n                        if (this.exercise['gId']) {\n                            let c = {} as CodePairStr;\n                            c.IdGroup = this.exercise['gId'];\n                            c.IdUser = this.userId;\n                            c.UserName = this.host.getSessionID().Name;\n                            c.Option = \"result\";\n                            if (this.code.Result == this.exercise.Result)\n                                c.Text = \"ok\";\n                            else\n                                c.Text = \"info\";\n                            c.Hash = \"\";\n                            this.socketSend(c);\n                        }\n\n                        if (this.responseTemp['Name'] == 'ok') {\n                            this.responseTemp.Status = \"Code copied to result area.\";\n                        }\n                        wait = false;\n                    }\n                }\n            }\n\n            if (this.responseTemp['Name'] == 'error' || this.responseTemp['Name'] == 'info') {\n                wait = false;\n                this.programTimeout = 0;\n                this.setErrorCode(this.responseTemp['Status']);\n            }\n\n        }\n\n        this.queueStatus = \"done!\";\n\n        this.codeForm.enable();\n        this.disabled = false;\n        this.btnCompile = this.btnCompileTemp;\n        this.sequence = [''];\n        this.programStatus = \"output\";\n        this.programTimeout = 0;\n\n        if (!this.exercise.Id) {\n            this._util.setResponse(\"Execution finished.\", '', 'ok', null);\n        }\n\n        await this._util.delay(1000);\n\n    }\n\n    codeTempCall(option) {\n        if (option == \"load\") {\n            this.getCodeTemp(\"replace\");\n        }\n        if (option == \"none\")\n            this.codeTempMode = \"none\";\n        if (option == \"auto\")\n            this.codeTempMode = \"auto\";\n    }\n\n    getCodeTemp(option) {\n        let filter: ParamStr[] = [];\n        let table = 'code-temp-user';\n\n        if (this.exercise['gId']) {\n            filter.push({Name: \"GroupId\", Value: String(this.exercise['gId'])});\n            table = 'code-temp-group';\n        } else {\n            filter.push({Name: \"UserId\", Value: String(this.host.getSessionID().Id)});\n        }\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: table,\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (data[0]) {\n                    if (option == \"replace\") {\n                        const contentManager = new EditorContentManager({\n                            editor: this.editor,\n                        });\n                        contentManager.replace(0, data[0].Code.length + 1, data[0].Code);\n\n                        this.code.Command = data[0].Command\n                        if (this.hasChoiceCompile == 0)\n                            this.setAutoParameters(this.code.Code);\n                    }\n                    this.codeTemp.Id = data[0].Id;\n                }\n            });\n    }\n\n    updateCodeTemp() {\n\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: String(this.codeTemp.Id)});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: this.codeTemp,\n            Custom: \"CodeTemp\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (data['Name'] == \"ok\" && parseInt(data['Status']) >= 1)\n                    this.codeTemp.Id = data['Status'];\n            });\n    }\n\n\n    /////// CODE PAIR IMPLEMENTATION //////////\n\n    socketSend(c) {\n        if (!this.exercise['gId'])\n            return;\n\n        if (!this.socket.isOpen()) {\n            let ret = this._util.openModal('Connection failed', 'You are not connected to the group. ' +\n                'Press F5 to reload the page.', 'F5', 'Cancel', '');\n            ret.afterClosed().subscribe(data => {\n                if (data && data['button'] == 'YES')\n                    this._document.defaultView.location.reload();\n            });\n        }\n        this.socket.send(c);\n    }\n\n    getHistoryGroup() {\n        let filter: ParamStr[] = [];\n\n        filter.push({Name: \"UserId\", Value: String(this.host.getSessionID().Id)});\n        filter.push({Name: \"GroupId\", Value: String(this.exercise['gId'])});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: 'group-history-user',\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (data[0])\n                    this.groupHistory = data[0];\n            });\n    }\n\n    setHistoryGroup() {\n        if (!this.exercise['gId'])\n            return;\n\n        if (!this.lastHistGroup)\n            this.lastHistGroup = Math.floor(Date.now() / 1000);\n\n        if ((Math.floor(Date.now() / 1000) - this.lastHistGroup) > 5) {\n            this.lastHistGroup = Math.floor(Date.now() / 1000);\n\n            let filter: ParamStr[] = [];\n            this.groupHistory.IdUser = Number(this.host.getSessionID().Id);\n            this.groupHistory.IdGroup = this.exercise['gId'];\n\n            let requestDB: UniversalDTOStr = {\n                Operation: \"update\",\n                TableData: this.groupHistory,\n                Custom: \"GroupHistory\",\n                Filter: filter,\n            };\n\n            this.host.request(requestDB, 'FDBRequest')\n                .subscribe(data => {\n                    if (data['Name'] == \"ok\" && parseInt(data['Status']) >= 1)\n                        this.groupHistory.Id = data['Status'];\n                });\n            //console.log(requestDB, this.groupHistory);\n        }\n    }\n\n    sendMsgChat() {\n        if (!this.exercise['gId'])\n            return;\n\n        let c = {} as CodePairStr;\n        c.IdGroup = this.exercise['gId'];\n        c.IdUser = this.userId;\n        c.UserName = this.host.getSessionID().Name;\n        c.Option = \"chatMsg\";\n        c.Text = this.chatMsg;\n        c.Hash = \"\";\n        this.chatMsg = \"\";\n        this.socketSend(c);\n    }\n\n    getUsersCoding() {\n        if (!this.exercise['gId'])\n            return;\n\n        let params: ParamStr[] = [];\n        params.push({Name: \"IdGroup\", Value: this.exercise['gId'].toString()});\n\n        let request: RequestStr = {\n            Request: \"activeSocket\",\n            Param: params,\n        };\n        //console.log(\"CurrentNodes | request: \", request);\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n\n                if (data) {\n                    this.codePairUsers = data[0].Users;\n                }\n                //console.log(data);\n            });\n    }\n\n    codePair() {\n        if (!this.exercise['gId'])\n            return;\n\n        this._util.openModal('Screen sharing', 'You are playing in a group exercise. ' +\n            'The code screen is shared among all online group users.' +\n            '\\n\\nRules: \\n' +\n            '#1. One user can edit the code at a time. \\n' +\n            '#2. After a user finishes editing, the system automatically releases it to the other users in the group. \\n' +\n            '#3. The first one to start editing wins the turn. \\n' +\n            '#4. The user name tag is set in the editor when some character is typed.\\n', 'Close', '', '');\n\n        let c = {} as CodePairStr;\n        c.IdGroup = this.exercise['gId'];\n        c.IdUser = this.userId;\n        c.UserName = this.host.getSessionID().Name;\n\n        if (this.firstUpdate == 1) {\n            c.Option = \"sendCode\";\n            c.Hash = \"\";\n            this.socketSend(c);\n            //console.log(\"getCodeUpdated Request First\");\n            this.firstUpdate = 0;\n        }\n\n        this.editor.onDidChangeCursorPosition(e => {\n            c.Option = \"position\";\n            c.Offset = this.editor.getModel().getOffsetAt(e.position);\n            this.offsetLine = e.position['lineNumber'];\n            this.offsetCol = e.position['column'];\n            this.socketSend(c);\n        });\n\n        this.editor.onDidChangeCursorSelection(e => {\n            c.Option = \"selection\";\n            c.StartOffset = this.editor.getModel().getOffsetAt(e.selection.getStartPosition());\n            c.EndOffset = this.editor.getModel().getOffsetAt(e.selection.getEndPosition());\n            this.groupHistory.ESelection++;\n            this.setHistoryGroup();\n            this.socketSend(c);\n            //console.log(c);\n        });\n\n        this.editor.onDidChangeModelContent(e => {\n            e.changes.forEach((change: editor.IModelContentChange) => {\n                    if (this.receivedMsg == 0) {\n                        const {rangeOffset, rangeLength, text} = change;\n                        if (text.length > 0 && rangeLength === 0) {\n                            c.Option = \"insert\";\n                            c.Index = rangeOffset;\n                            c.Text = text;\n                            const md5 = new Md5();\n                            c.Hash = String(md5.appendStr(this.editor.getModel().getValue()).end());\n                            //console.log(this.editor.getModel().getValue(), c);\n                            this.groupHistory.EInsert++;\n                            this.setHistoryGroup();\n                            this.socketSend(c);\n                        } else if (text.length > 0 && rangeLength > 0) {\n                            c.Option = \"replace\";\n                            c.Index = rangeOffset;\n                            c.Text = text;\n                            c.Length = rangeLength;\n                            const md5 = new Md5();\n                            c.Hash = String(md5.appendStr(this.editor.getModel().getValue()).end());\n                            //console.log(c);\n                            this.groupHistory.EReplace++;\n                            this.setHistoryGroup();\n                            this.socketSend(c);\n                        } else if (text.length === 0 && rangeLength > 0) {\n                            c.Option = \"delete\";\n                            c.Index = rangeOffset;\n                            c.Length = rangeLength;\n                            const md5 = new Md5();\n                            c.Hash = String(md5.appendStr(this.editor.getModel().getValue()).end());\n                            //console.log(c);\n                            this.groupHistory.EDelete++;\n                            this.setHistoryGroup();\n                            this.socketSend(c);\n                        } else {\n                            //console.log(change);\n                        }\n                    }\n                    this.receivedMsg = 0;\n                }\n            );\n        });\n    }\n\n    openSocket(code) {\n        if (!this.exercise['gId'])\n            return;\n\n        if (this.editor && code) {\n            const contentManager = new EditorContentManager({\n                editor: this.editor,\n            });\n            contentManager.replace(0, code.length + 1, code);\n        }\n\n        this.cursorEditors = new Map([]);\n        this.selectionEditors = new Map([]);\n\n        this.subSocket = this.socket.getEventListener().subscribe({\n            next: (event: string) => {\n                if (event['data']) {\n                    let codePair = {} as CodePairStr;\n                    codePair = event['data'];\n\n                    //console.log(codePair);\n\n                    if (!this.editor || !codePair.IdGroup)\n                        return;\n\n                    if (!codePair.IdUser || !this.host.getSessionID().Id)\n                        return;\n\n                    if (this.exercise['gId'] != codePair.IdGroup)\n                        return;\n\n                    if (codePair.Option == \"chatMsg\") {\n                        this.chatList.push({\n                            IdUser: codePair.IdUser,\n                            Name: codePair.UserName, Text: codePair.Text\n                        });\n                        return;\n                    }\n\n                    let c = {} as CodePairStr;\n                    c.IdGroup = this.exercise['gId'];\n                    c.IdUser = this.userId;\n                    c.UserName = this.host.getSessionID().Name;\n\n                    if (codePair.IdUser != this.userId) {\n\n                        let remoteCursorManager;\n                        let remoteSelectionManager;\n                        let cursor;\n                        let selection;\n\n                        let color = this._code.getColor();\n\n                        if (!this.cursorEditors.has(String(codePair.IdUser))) {\n                            const sourceUser = {\n                                id: String(codePair.IdUser),\n                                label: codePair.UserName,\n                                color: color\n                            };\n\n                            if (this.editor) {\n                                remoteCursorManager = new RemoteCursorManager({\n                                    editor: this.editor,\n                                    tooltips: true,\n                                    tooltipDuration: 2\n                                });\n                                cursor = remoteCursorManager.addCursor(sourceUser.id, sourceUser.color, sourceUser.label);\n                                this.cursorEditors.set(String(codePair.IdUser), cursor);\n\n                                remoteSelectionManager = new RemoteSelectionManager({editor: this.editor});\n                                selection = remoteSelectionManager.addSelection(String(codePair.IdUser), color);\n                                this.selectionEditors.set(String(codePair.IdUser), selection);\n                            }\n                        }\n\n                        if (codePair.Option == \"position\" && this.cursorEditors.has(String(codePair.IdUser)))\n                            this.cursorEditors.get(String(codePair.IdUser)).setOffset(codePair.Offset);\n\n                        if (codePair.Option == \"selection\" && this.selectionEditors.has(String(codePair.IdUser))) {\n                            this.selectionEditors.get(String(codePair.IdUser)).setOffsets(codePair.StartOffset, codePair.EndOffset);\n                            this.selectionEditors.get(String(codePair.IdUser)).show();\n                        }\n\n                        if (codePair.Option == \"insert\") {\n                            this.receivedMsg = 1;\n                            const contentManager = new EditorContentManager({\n                                editor: this.editor,\n                            });\n                            contentManager.insert(codePair.Offset, codePair.Text);\n                        }\n\n                        if (codePair.Option == \"replace\") {\n                            this.receivedMsg = 1;\n                            const contentManager = new EditorContentManager({\n                                editor: this.editor,\n                            });\n                            contentManager.replace(codePair.Index, codePair.Length, codePair.Text);\n                        }\n\n                        if (codePair.Option == \"delete\") {\n                            this.receivedMsg = 1;\n                            const contentManager = new EditorContentManager({\n                                editor: this.editor,\n                            });\n                            contentManager.delete(codePair.Index, codePair.Length);\n                        }\n\n                        if (codePair.Option == \"sendCode\") {\n                            c.Option = \"codeUpdated\";\n                            codePair.Hash = \"\";\n                            c.StartOffset = this.offsetLine;\n                            c.EndOffset = this.offsetCol;\n                            c.Text = this.editor.getModel().getValue();\n                            this.socketSend(c);\n                            //console.log(\"sendCode\", c.Hash);\n                        }\n\n                        if (codePair.Option == \"codeUpdated\") {\n                            this.receivedMsg = 1;\n                            if (!this.hideMsgUpdateCode) {\n                                this._util.setResponse('The system is waiting for synchronization with your group.', 'Rsync',\n                                    'info', null);\n                            }\n                            //this.editor.getModel().setValue(codePair.Text);\n                            const contentManager = new EditorContentManager({\n                                editor: this.editor,\n                            });\n                            contentManager.replace(0, codePair.Text.length + 1, codePair.Text);\n\n                            //this.editor.setPosition({\n                            //    lineNumber: codePair.StartOffset,\n                            //    column: codePair.EndOffset\n                            //});\n                            //this.editor.focus();\n\n                            this.hideMsgUpdateCode = 0;\n                            codePair.Hash = \"\";\n                        }\n\n                        if (codePair.Option == \"result\") {\n                            let res = \"not equal\";\n                            if (codePair.Text == \"ok\")\n                                res = \"equal\";\n\n                            this._util.setResponse(c.UserName + \" just ran a code. Result: \" + res, '',\n                                codePair.Text, null);\n\n                        }\n\n                        if (codePair.Option == \"submit\") {\n\n                            this._util.setResponse(c.UserName + \" Test submit a code right now. \" +\n                                \"In a few moments, we will show the result.\", '',\n                                'info', null);\n                        }\n\n                        if (codePair.Option == \"insert\"\n                            || codePair.Option == \"replace\"\n                            || codePair.Option == \"delete\") {\n                            this.otherUserTyping = Math.floor(Date.now() / 1000);\n                            this.receivedMsg = 1;\n                            this.nameUserTyping = codePair.UserName;\n                        }\n\n\n                        const md5 = new Md5();\n                        let s1 = String(md5.appendStr(this.editor.getModel().getValue()).end());\n\n                        if (codePair.Hash && codePair.Hash != s1\n                            && (codePair.Option == \"insert\" || codePair.Option == \"replace\" ||\n                                codePair.Option == \"delete\")) {\n\n                            c.Option = \"codeUpdated\";\n                            c.Text = this.editor.getModel().getValue();\n                            this.socketSend(c);\n                            //console.log(\"getCodeUpdated Request\");\n                            return;\n                        }\n\n                    }\n                }\n            }\n        })\n    }\n}\n","export default \".login {\\n  float: left;\\n  margin-left: 10px;\\n}\\n\\n.loginMain {\\n  font-size: 14px;\\n  width: 150px;\\n}\\n\\n.session {\\n  font-size: 12px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9zdC1jcmVkZW50aWFscy9ob3N0LWNyZWRlbnRpYWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFDQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9ob3N0LWNyZWRlbnRpYWxzL2hvc3QtY3JlZGVudGlhbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbiB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuLmxvZ2luTWFpbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2lkdGg6IDE1MHB4O1xufVxuLnNlc3Npb24ge1xuICBmb250LXNpemU6IDEycHg7XG59XG4iXX0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {HostService} from \"../_services/host.service\";\nimport {HostInfoStr} from \"../_model/hostInfo\";\nimport {AuthStr, ParamStr, RequestStr, ResponseStr, UniversalDTOStr} from \"../_model/service\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport {Router} from \"@angular/router\";\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport { Keepalive } from '@ng-idle/keepalive';\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../_control/util.control\";\n\n@Component({\n  selector: 'app-host-credentials',\n  templateUrl: './host-credentials.component.html',\n  styleUrls: ['./host-credentials.component.css']\n})\n\nexport class HostCredentialsComponent implements OnInit {\n\n  //Getting hostInfo from APP ROOT\n  @Input('hostInfo') hostInfo: HostInfoStr;\n\n  idleState = '30 m';\n  lastPing?: Date = null;\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  response = {} as ResponseStr;\n  userSession = {} as AuthStr;\n  subLogin: Subscription;\n\n  constructor(\n      private host: HostService,\n      private _eventEmitter: EventEmitterService,\n      private router: Router,\n      private idle: Idle,\n      private keepalive: Keepalive,\n      public _util: UtilControl,\n  ){\n    idle.setIdle(1800);\n    idle.setTimeout(60);\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n    idle.onIdleEnd.subscribe(() => {\n      this.idleState = 'No longer idle.';\n      this.reset();\n    });\n\n    idle.onTimeout.subscribe(() => {\n      this.logout();\n      this.idleState = 'Timed out!';\n    });\n\n    idle.onIdleStart.subscribe(() => {\n      this.idleState = 'You\\'ve gone idle!';\n      //console.log(this.idleState);\n    });\n\n    idle.onTimeoutWarning.subscribe((countdown) => {\n      this.idleState = countdown + ' seconds!';\n    });\n\n    keepalive.interval(30);\n    keepalive.onPing.subscribe(() => this.lastPing = new Date());\n    this.reset();\n  }\n\n  reset() {\n    this.idle.watch();\n    this.idleState = '30 m';\n  }\n\n  ngOnInit() {\n\n    this.userSession = this.host.getSessionID();\n\n    //Getting value from child HostCredentials\n    this.subLogin = this._eventEmitter.loginChange.subscribe(\n        data => {\n          //console.log('App Root | _eventEmitter.SendMsgAppRoot  ', data);\n          if (data['Name'] == \"error\") {\n            this.host.killSessionID();\n            this.userSession = {} as AuthStr;\n            this.registerForm.reset();\n            this.router.navigate(['welcome']);\n          }\n\n          if (data['Name'] == \"stopSession\") {\n            this.idleState = \"stopped\";\n            this.idle.stop();\n          }\n\n          if (data['Name'] == \"startSession\") {\n            this.reset();\n          }\n\n          this.userSession = this.host.getSessionID();\n\n        },\n    );\n\n  }\n\n  ngOnDestroy() {\n    this.subLogin.unsubscribe();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  // LOGIN\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  addUser(): void {\n    window.localStorage.removeItem(\"editUserId\");\n    this.host.setSessionID('', 'SelfRegistration', '||NPZ8fvABP5pKSwU3');\n    this.router.navigate(['add-user']);\n  };\n\n  logout() {\n    let params: ParamStr[] = [];\n    params.push({Name: \"\", Value: this.userSession.Owner});\n\n    let request: RequestStr = {\n      Request: \"logout\",\n      Param: params,\n    };\n\n    this.host.request(request, 'simpleRequest')\n        .subscribe(data => {\n          this.response = data;\n\n          this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n          if (this.response['Name'] == \"ok\")  {\n            this.host.killSessionID();\n            this.userSession = {} as AuthStr;\n            this._eventEmitter.setLoginChange({Name: \"stopSession\", Status: \"\"});\n            this.router.navigate(['welcome']);\n          }\n        });\n  }\n\n  getValidateSession() {\n    let Auth = this.host.getSessionID();\n    this.host.setSessionID(\n        Auth.Owner,\n        Auth.Module,\n        Auth.Id + \"|\" + Auth.Password + \"|\" + Auth.Token\n    );\n    //console.log(\"getValidateSession\");\n\n  }\n\n  // Let's validate session after 60 seconds\n  async managerStatus() {\n    while (true)\n    {\n      await this._util.delay(60000);\n\n      this.getValidateSession();\n    }\n  }\n\n}\n","export default \".loginMain {\\n  display: flex; flex-wrap: wrap; align-content: center;\\n}\\n\\n.PrimaryNav a, .PrimaryNav a.active, .PrimaryNav .nolink {\\n  color: #fff;\\n  cursor: pointer;\\n  font-weight: 600;\\n  text-decoration: none;\\n}\\n\\n.Button--redOutline {\\n  color: #fff;\\n  background-color: transparent;\\n  text-transform: uppercase;\\n  border: 2px solid #e22866;\\n}\\n\\n.Button--red, .Body .node-application #FormWrap .okta-form input[type=\\\"submit\\\"], .Body .node-application #FormWrap .okta-form textarea[type=\\\"submit\\\"], .Body .node-application #FormWrap .okta-form select[type=\\\"submit\\\"], .Body .block-marketo #FormWrap .okta-form input[type=\\\"submit\\\"], .Body .block-marketo #FormWrap .okta-form textarea[type=\\\"submit\\\"], .Body .block-marketo #FormWrap .okta-form select[type=\\\"submit\\\"] {\\n  color: #fff;\\n  background-color: #e22866;\\n  text-transform: uppercase;\\n}\\n\\n.host{\\n  display: flex;\\n}\\n\\n.name {\\n  width: 180px;\\n}\\n\\n.exit {\\n  flex-grow: 1;\\n}\\n\\n.addUser {\\n  width: 30px;\\n  margin-top: 10px;\\n}\\n\\ninput {\\n  margin-bottom: 0.2em;\\n}\\n\\n.card-body {\\n  padding: 0.5rem;\\n}\\n\\n.form-group {\\n  margin-bottom: 0rem;\\n}\\n\\n.col-5 {\\n  max-width: 20%;\\n}\\n\\n.userStatus {\\n  padding: 0.5em;\\n}\\n\\n.userStatus span {\\n  display: block;\\n  font-size: 12px;\\n}\\n\\n.session {\\n  font-size: 12px;\\n}\\n\\n.ok {\\n  color: #155724;\\n  background-color: #d4edda;\\n  border-color: #c3e6cb;\\n}\\n\\n.info {\\n  color: #856404;\\n  background-color: #fff3cd;\\n  border-color: #ffeeba;\\n}\\n\\n.error {\\n  color: #721c24;\\n  background-color: #f8d7da;\\n  border-color: #f5c6cb;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9zdC1jcmVkZW50aWFscy9ob3N0LWxvZ2luL2hvc3QtbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWEsRUFBRSxlQUFlLEVBQUUscUJBQXFCO0FBQ3ZEOztBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsV0FBVztFQUNYLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIseUJBQXlCO0FBQzNCOztBQUNBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtFQUN6Qix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvaG9zdC1jcmVkZW50aWFscy9ob3N0LWxvZ2luL2hvc3QtbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbk1haW4ge1xuICBkaXNwbGF5OiBmbGV4OyBmbGV4LXdyYXA6IHdyYXA7IGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLlByaW1hcnlOYXYgYSwgLlByaW1hcnlOYXYgYS5hY3RpdmUsIC5QcmltYXJ5TmF2IC5ub2xpbmsge1xuICBjb2xvcjogI2ZmZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5CdXR0b24tLXJlZE91dGxpbmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNlMjI4NjY7XG59XG4uQnV0dG9uLS1yZWQsIC5Cb2R5IC5ub2RlLWFwcGxpY2F0aW9uICNGb3JtV3JhcCAub2t0YS1mb3JtIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0sIC5Cb2R5IC5ub2RlLWFwcGxpY2F0aW9uICNGb3JtV3JhcCAub2t0YS1mb3JtIHRleHRhcmVhW3R5cGU9XCJzdWJtaXRcIl0sIC5Cb2R5IC5ub2RlLWFwcGxpY2F0aW9uICNGb3JtV3JhcCAub2t0YS1mb3JtIHNlbGVjdFt0eXBlPVwic3VibWl0XCJdLCAuQm9keSAuYmxvY2stbWFya2V0byAjRm9ybVdyYXAgLm9rdGEtZm9ybSBpbnB1dFt0eXBlPVwic3VibWl0XCJdLCAuQm9keSAuYmxvY2stbWFya2V0byAjRm9ybVdyYXAgLm9rdGEtZm9ybSB0ZXh0YXJlYVt0eXBlPVwic3VibWl0XCJdLCAuQm9keSAuYmxvY2stbWFya2V0byAjRm9ybVdyYXAgLm9rdGEtZm9ybSBzZWxlY3RbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTIyODY2O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uaG9zdHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLm5hbWUge1xuICB3aWR0aDogMTgwcHg7XG59XG5cbi5leGl0IHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG4uYWRkVXNlciB7XG4gIHdpZHRoOiAzMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG5pbnB1dCB7XG4gIG1hcmdpbi1ib3R0b206IDAuMmVtO1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDByZW07XG59XG5cbi5jb2wtNSB7XG4gIG1heC13aWR0aDogMjAlO1xufVxuXG4udXNlclN0YXR1cyB7XG4gIHBhZGRpbmc6IDAuNWVtO1xufVxuXG4udXNlclN0YXR1cyBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLnNlc3Npb24ge1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5vayB7XG4gIGNvbG9yOiAjMTU1NzI0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDRlZGRhO1xuICBib3JkZXItY29sb3I6ICNjM2U2Y2I7XG59XG5cbi5pbmZvIHtcbiAgY29sb3I6ICM4NTY0MDQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYzY2Q7XG4gIGJvcmRlci1jb2xvcjogI2ZmZWViYTtcbn1cblxuLmVycm9yIHtcbiAgY29sb3I6ICM3MjFjMjQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGQ3ZGE7XG4gIGJvcmRlci1jb2xvcjogI2Y1YzZjYjtcbn0iXX0= */\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\nimport {HostService} from \"../../_services/host.service\";\nimport {HostInfoStr} from \"../../_model/hostInfo\";\nimport {AuthStr, ParamStr, RequestStr, ResponseStr, UniversalDTOStr} from \"../../_model/service\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {Router} from \"@angular/router\";\nimport {dialogStr} from \"../../_model/dialog\";\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../../_control/util.control\";\n\n@Component({\n  selector: 'app-host-login',\n  templateUrl: './host-login.component.html',\n  styleUrls: ['./host-login.component.css']\n})\n\nexport class HostLoginComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  userSession = {} as AuthStr;\n\n  hostInfo = {} as HostInfoStr;\n  subHostInfo: Subscription;\n  response = {} as ResponseStr;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private host: HostService,\n      private _eventEmitter: EventEmitterService,\n      private router: Router,\n      public _util: UtilControl,\n  ){ }\n\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      owner: ['',\n        [Validators.required,\n          Validators.minLength(3),\n        ]\n      ],\n      password: ['',\n        [Validators.required,\n          Validators.minLength(3),\n        ]\n      ],\n    }, {});\n\n    this.userSession = this.host.getSessionID();\n\n    this.subHostInfo = this._eventEmitter.hostInfo.subscribe(\n        data => {\n          this.hostInfo = data;\n        },\n    );\n\n  }\n\n  ngOnDestroy() {\n    this.subHostInfo.unsubscribe();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  checkChangePass(): void {\n    let filter: ParamStr[] = [];\n    filter.push({Name: \"Email\", Value: this.userSession.Owner});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"host-credentials\",\n      Filter : filter,\n    };\n    window.localStorage.setItem(\"ForceChangePass\", \"0\");\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          if (data && data[0]['ForceChangePass'] == \"1\") {\n            window.localStorage.setItem(\"ForceChangePass\", \"1\");\n            this.router.navigate(['edit-user']);\n            //console.log(data, window.localStorage.getItem(\"ForceChangePass\"));\n          }\n        });\n  };\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n    let hostInfoTemp = this.hostInfo;\n\n    hostInfoTemp['Owner'] = this.registerForm.get('owner').value;\n    hostInfoTemp['Password'] = this.registerForm.get('password').value;\n\n    this.host.request(hostInfoTemp, 'setLogin')\n        .subscribe(data => {\n          this.response = data;\n          if (this.response['Name'] == \"Admin\" || this.response['Name'] == \"User\") {\n            this.host.setSessionID(hostInfoTemp['Owner'], this.response['Name'], this.response['Status']);\n            this.userSession = this.host.getSessionID();\n\n            //console.log(\"App Host-Credential | userSession: \", data);\n            this._util.setResponse(\"Login successfully!\", \"ok\", null, null);\n\n            // We will notify the root app about new login\n            this._eventEmitter.setLoginChange({Name: \"startSession\", Status: \"\"});\n            this.checkChangePass();\n            this.router.navigate(['welcome']);\n\n          } else {\n            this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n            //this.registerForm.reset();\n            //this.f['owner'].clearValidators();\n            //this.f['owner'].setErrors({ 'generic': this.response['Status'] });\n            return;\n          }\n        });\n  }\n\n  recoverPassword() {\n    this.response = {} as ResponseStr;\n\n    let input: dialogStr[] = [];\n\n    input.push({Model: \"\", Name: \"email\", Type: \"text\",  Title: \"email account\"});\n\n    let ret = this._util.openModal('Recover Password',\n        'Please enter your login email. \\n' +\n        'If the account exists in our database, we will send you an email for password recovery.',\n        'Yes', 'No', input);\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data && data['button'] == 'YES') {\n        if (!data['input'][0]['Model'] ||\n            data['input'][0]['Model'] == \"\") {\n          this.response['Name'] = \"error\";\n          this.response['Status'] = \"Please, type a email account...\";\n          return;\n        }\n\n        let email;\n\n        if (data['input'][0] && data['input'][0]['Model'] != \"\")\n          email = data['input'][0]['Model'];\n\n        let params: ParamStr[] = [];\n        params.push({Name:\"email\", Value: email});\n\n        let request: RequestStr = {\n          Request: \"recoverPassword\",\n          Param: params,\n        };\n\n        this._util.setResponse(\"Sending request for password recovery...\", \"info\", null, null);\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n              this.response = data;\n              //console.log('Host-Credentials: data ', data);\n              this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n            });\n      }\n    });\n\n  }\n\n}\n","export default \".tags {\\n  min-height: 150px;\\n  min-width: 20vw;\\n  max-width: calc(100vw - 35px);\\n}\\n\\n.icon {\\n  width: 60px;\\n  height: 60px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9zdC1zdGF0dXMvaG9zdC1zdGF0dXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2hvc3Qtc3RhdHVzL2hvc3Qtc3RhdHVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFncyB7XG4gIG1pbi1oZWlnaHQ6IDE1MHB4O1xuICBtaW4td2lkdGg6IDIwdnc7XG4gIG1heC13aWR0aDogY2FsYygxMDB2dyAtIDM1cHgpO1xufVxuXG4uaWNvbiB7XG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDYwcHg7XG59XG5cbiJdfQ== */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {HostInfoStr} from \"../_model/hostInfo\";\nimport {ResponseStr} from \"../_model/service\";\n\n@Component({\n  selector: 'app-host-status',\n  templateUrl: './host-status.component.html',\n  styleUrls: ['./host-status.component.css']\n})\nexport class HostStatusComponent implements OnInit {\n  //Getting hostInfo from APP ROOT\n  @Input('hostInfo') hostInfo: HostInfoStr;\n  @Input('hostConnection') hostConnection: ResponseStr;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".form-control {\\n  max-width: 500px;\\n}\\n\\n.text {\\n  min-width: 500px !important;\\n  display: block;\\n}\\n\\n.date {\\n  min-width: 100px !important;\\n  display: block;\\n}\\n\\n.number {\\n  min-width: 50px !important;\\n  display: block;\\n}\\n\\n.card {\\n  white-space: pre-line !important;\\n}\\n\\nul, li {list-style-type: none;}\\n\\n.ck-editor__editable_inline {\\n  min-height: 500px;\\n}\\n\\n.icon {\\n  width: 20px;\\n  height: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2NsYXNzcm9vbS1lZGl0L2NsYXNzcm9vbS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBR0EsUUFBUSxxQkFBcUIsQ0FBQzs7QUFHOUI7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2NsYXNzcm9vbS1lZGl0L2NsYXNzcm9vbS1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250cm9sIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbn1cblxuLnRleHQge1xuICBtaW4td2lkdGg6IDUwMHB4ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZGF0ZSB7XG4gIG1pbi13aWR0aDogMTAwcHggIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5udW1iZXIge1xuICBtaW4td2lkdGg6IDUwcHggIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jYXJkIHtcbiAgd2hpdGUtc3BhY2U6IHByZS1saW5lICFpbXBvcnRhbnQ7XG59XG5cblxudWwsIGxpIHtsaXN0LXN0eWxlLXR5cGU6IG5vbmU7fVxuXG5cbi5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XG4gIG1pbi1oZWlnaHQ6IDUwMHB4O1xufVxuXG4uaWNvbiB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../_services/event-emitter.service\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../../../_model/service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport ClassicEditor from '@haifahrul/ckeditor5-build-rich';\nimport {ClassroomStr} from \"../../../_model/classroom\";\nimport {UtilControl} from \"../../../_control/util.control\";\n\n@Component({\n    selector: 'classroom-app-edit',\n    templateUrl: './classroom-edit.component.html',\n    styleUrls: ['./classroom-edit.component.css']\n})\nexport class ClassroomEditComponent implements OnInit {\n    public Editor = ClassicEditor;\n\n    config = {\n        toolbar: {\n            items: [\n                'heading', '|',\n                'alignment', '|',\n                'bold', 'italic', 'strikethrough', 'underline', 'subscript', 'superscript', '|',\n                'link', '|',\n                'bulletedList', 'numberedList', 'todoList',\n                '-', // break point\n                'fontfamily', 'fontsize', 'fontColor', 'fontBackgroundColor', '|',\n                'code', 'codeBlock', '|',\n                'Smiley', 'insertTable', '|',\n                'outdent', 'indent', '|',\n                'uploadImage', 'blockQuote', '|',\n                'undo', 'redo'\n            ],\n            shouldNotGroupWhenFull: true,\n        },\n        language: 'id',\n        image: {\n            toolbar: [\n                'imageTextAlternative',\n                'imageStyle:full',\n                'imageStyle:side'\n            ]\n        },\n    }\n\n    editForm: FormGroup;\n\n    classroomId: number;\n    submitted = false;\n    disabled: boolean;\n\n    responseEdit = {} as ResponseStr;\n    classroom = {} as ClassroomStr;\n\n    constructor(\n        private host: HostService,\n        public dialog: MatDialog,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        private _util: UtilControl,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        this.editForm = this.formBuilder.group({\n            Id: [''],\n            IdUser: [''],\n            Enabled: [''],\n            Name: ['',\n                [Validators.required,\n                    Validators.minLength(5),\n                    Validators.maxLength(50),\n                ]\n            ],\n            KeyAccess: ['',\n                [,\n                    Validators.maxLength(60),\n                ]\n            ],\n            Description: ['', []],\n            MaxStudents: ['',\n                [,\n                    Validators.max(100),\n                ]\n            ],\n        });\n\n        this.classroomId = Number(window.localStorage.getItem(\"ClassroomId\"));\n        window.localStorage.setItem('waitLoadComponent', 'N');\n\n        if (this.classroomId)\n            this.getClassroom();\n    }\n\n    setRoute(val) {\n        this.getClassroom();\n        this.waitLoadComponent();\n        this.router.navigate([val])\n    }\n\n    getClassroom() {\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: String(this.classroomId)});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"classroom-edit\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (!data) return;\n                this.editForm.setValue(data[0]);\n                this.classroom = data[0];\n            });\n    }\n\n    // convenience getter for easy access to form fields\n    get fe() {\n        return this.editForm.controls;\n    }\n\n    async waitLoadComponent() {\n        let waitLoad = 'N';\n        let loop = true;\n        while (loop) {\n            await this.delay(100);\n            if (waitLoad == 'S') {\n                loop = false;\n            }\n            waitLoad = window.localStorage.getItem(\"waitLoadComponent\");\n        }\n        this._eventEmitter.setClassroom(this.classroom);\n    }\n\n    private delay(ms: number): Promise<boolean> {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve(true);\n            }, ms);\n        });\n    }\n\n    onSubmit() {\n        this.responseEdit = {} as ResponseStr;\n\n        this.submitted = true;\n        this.disabled = true;\n\n        // stop here if form is invalid\n        if (this.editForm.invalid) {\n            return;\n        }\n\n        let filter: ParamStr[] = [];\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: this.editForm.value,\n            Custom: \"Classroom\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                this.responseEdit = data;\n\n                if (!this.classroomId && this.responseEdit.Name == \"ok\" && parseInt(this.responseEdit.Status) > 0) {\n                    this.classroomId = Number(this.responseEdit.Status);\n                    window.localStorage.setItem(\"ExerciseId\", String(this.classroomId));\n                    this.responseEdit.Status = \"Record inserted successfully.\";\n\n                } else if (this.classroomId && this.responseEdit.Name == \"ok\") {\n                    this.responseEdit.Status = \"Record updated successfully.\";\n                }\n\n                this.getClassroom();\n\n                this.waitLoadComponent();\n\n                this._util.setResponse(this.responseEdit.Status, 'Go to Classroom',\n                    this.responseEdit.Name, 'view-classroom');\n\n            });\n    }\n\n}\n","export default \".user-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.table td, .table th {\\n    padding: initial !important;\\n}\\n\\nbutton {\\n    margin-left: 5px;\\n}\\n\\n.mat-progress-bar{\\n    height: 20px;\\n}\\n\\n::ng-deep .mat-progress-bar-buffer {\\n    background: #E4E8EB;\\n}\\n\\n#checkBar {\\n    border-radius: 2px;\\n    width: 100px !important;\\n}\\n\\n.icon {\\n    width: 20px;\\n    height: 20px;\\n}\\n\\n.description {\\n    font-size: 12px;\\n}\\n\\n.Enabled {\\n    color: #1231da;\\n}\\n\\n.Disabled {\\n    color: #9d1e15;\\n}\\n\\n::ng-deep h1 {\\n    font-size: 1.5rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2NsYXNzcm9vbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFDQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSw0QkFBNEI7QUFDaEMiLCJmaWxlIjoic3JjL2FwcC9tZW51LWNsYXNzcm9vbS9jbGFzc3Jvb20vY2xhc3Nyb29tLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnRhYmxlIHRkLCAudGFibGUgdGgge1xuICAgIHBhZGRpbmc6IGluaXRpYWwgIWltcG9ydGFudDtcbn1cblxuYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xufVxuXG4ubWF0LXByb2dyZXNzLWJhcntcbiAgICBoZWlnaHQ6IDIwcHg7XG59XG5cbjo6bmctZGVlcCAubWF0LXByb2dyZXNzLWJhci1idWZmZXIge1xuICAgIGJhY2tncm91bmQ6ICNFNEU4RUI7XG59XG5cbiNjaGVja0JhciB7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIHdpZHRoOiAxMDBweCAhaW1wb3J0YW50O1xufVxuXG4uaWNvbiB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xufVxuXG4uZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLkVuYWJsZWQge1xuICAgIGNvbG9yOiAjMTIzMWRhO1xufVxuLkRpc2FibGVkIHtcbiAgICBjb2xvcjogIzlkMWUxNTtcbn1cblxuOjpuZy1kZWVwIGgxIHtcbiAgICBmb250LXNpemU6IDEuNXJlbSAhaW1wb3J0YW50O1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ClassMembersStr, ClassroomStr} from \"../../_model/classroom\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../_model/service\";\nimport {HostService} from \"../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {UsersStr} from \"../../_model/users\";\nimport {Subscription} from \"rxjs\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {UtilControl} from \"../../_control/util.control\";\n\n@Component({\n    selector: 'app-classroom',\n    templateUrl: './classroom.component.html',\n    styleUrls: ['./classroom.component.css']\n})\nexport class ClassroomComponent implements OnInit {\n\n    registerForm: FormGroup;\n\n    response = {} as ResponseStr;\n    classroom = {} as ClassroomStr;\n    userSession = {} as AuthStr;\n    users: UsersStr[] = [];\n\n    classroomModule: string;\n\n    submitted = false;\n\n    loadM = 0;\n    loadC = 0;\n    notSel = 1;\n    subClassroom: Subscription;\n\n    constructor(\n        private host: HostService,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        public _util: UtilControl,\n        private formBuilder: FormBuilder,\n    ){\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            KeyAccess: ['',\n                [,\n                    Validators.maxLength(60),\n                ]\n            ],\n        }, {});\n\n        window.localStorage.removeItem(\"TryACode\");\n        window.localStorage.setItem('waitLoadComponent', 'S');\n\n        this.subClassroom = this._eventEmitter.classroom.subscribe(\n            data => {\n                this.notSel = 0;\n                this.userSession = this.host.getSessionID();\n                if (data && this.userSession.Id) {\n                    this.classroom = data;\n                    this.classroomModule = data['Module'];\n\n                    this.loadC = 1;\n\n                    if (this.classroom.IdUser == Number(this.userSession.Id))\n                        window.localStorage.setItem(\"ClassModule\", \"Lecturer\");\n\n                    this.getUsers();\n                    //console.log(\"Classroom-component|_eventEmitter\");\n                }\n            },\n        );\n\n        this.notSel = 1;\n    }\n\n    ngOnDestroy() {\n        this.subClassroom.unsubscribe();\n    }\n\n    editClassroom(): void {\n        window.localStorage.setItem(\"ClassroomId\", this.classroom.Id.toString());\n        this.router.navigate(['edit-classroom']);\n    };\n\n    disableClassroom(): void {\n        let option = this.classroom.Enabled;\n\n        let op;\n        if (!option)\n            op = 'enable';\n        else\n            op = 'disable';\n\n        //console.log(this.classroom);\n\n        let ret = this._util.openModal('Classroom: ' + this.classroom.Name,\n            'Confirm ' + op + ' the classroom?',\n            'Yes', 'No', '');\n\n        ret.afterClosed().subscribe(data => {\n\n            if (data['button'] == 'YES') {\n\n                if (!option)\n                    this.classroom.Enabled = 1;\n                else\n                    this.classroom.Enabled = 0;\n\n                delete this.classroom['Owner'];\n\n                let filter: ParamStr[] = [];\n                let requestDB: UniversalDTOStr = {\n                    Operation: \"update\",\n                    TableData: this.classroom,\n                    Custom: \"Classroom\",\n                    Filter: filter,\n                };\n\n                this.host.request(requestDB, 'FDBRequest')\n                    .subscribe(data => {\n                        this.response = data;\n\n                        if (this.classroom.Id && this.response.Name == \"ok\") {\n                            this.response.Status = \"Record updated successfully.\";\n                        }\n                        this._util.setResponse(this.response.Status, this.response.Name, null, null);\n\n                    });\n            }\n        });\n    }\n\n    get fe() {\n        return this.registerForm.controls;\n    }\n\n    onSubmit() {\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.submitted = true;\n\n        if (this.classroom.KeyAccess != this.fe['KeyAccess'].value) {\n            this._util.setResponse('Invalid Key!', 'Error', 'error', null);\n            return;\n        }\n\n        let c = {'IdClassroom': this.classroom.Id, IdUser: this.userSession.Id, Module: 'Student'};\n\n        let filter: ParamStr[] = [];\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: c,\n            Custom: \"ClassMembers\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                this.response = data;\n\n                if (this.response.Name == \"ok\") {\n                    this.response.Status = \"Record inserted successfully.\";\n\n                    this._eventEmitter.setClassroom(this.classroom);\n                    this.classroom['Module'] = \"Student\";\n                    this.classroomModule = \"Student\";\n                }\n\n                this._util.setResponse(this.response.Status, 'Welcome!',\n                    this.response.Name, 'view-classroom-manager');\n\n            });\n    }\n\n    getUsers() {\n        let filter: ParamStr[] = [];\n        filter.push({Name: 'Id', Value: String(this.classroom.Id)});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"users-classroom\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (data) {\n                    this.users = data;\n                    data.forEach(u => {\n                        if (u.Id == this.host.getSessionID().Id &&\n                            (u.Module == 'Lecturer' || u.Module == 'Assistant')) {\n                            window.localStorage.setItem(\"ClassModule\", u.Module);\n                        }\n                    });\n                    }\n                this.loadM = 1;\n            });\n    }\n\n}\n\n","export default \".time {\\n  color: #9d1e15;\\n  font-size: 10px;\\n}\\n\\n.form-control {\\n  max-width: 500px;\\n}\\n\\n.text {\\n  min-width: 500px !important;\\n  display: block;\\n}\\n\\n.textarea {\\n  min-width: 100% !important;\\n  min-height: 200px !important;\\n  display: block;\\n}\\n\\n.diff {\\n  text-align: center;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\\n.diffAdmin {\\n  width: 50% !important;\\n  float: left;\\n}\\n\\n.diffUser {\\n  margin-left: 50%\\n}\\n\\n.card {\\n  white-space: pre-line !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtYW5zd2VyL2V4ZXJjaXNlcy1hbnN3ZXItZWRpdC9leGVyY2lzZXMtYW5zd2VyLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsNEJBQTRCO0VBQzVCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0FBQ2I7O0FBRUE7RUFDRTtBQUNGOztBQUVBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtYW5zd2VyL2V4ZXJjaXNlcy1hbnN3ZXItZWRpdC9leGVyY2lzZXMtYW5zd2VyLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aW1lIHtcbiAgY29sb3I6ICM5ZDFlMTU7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuLmZvcm0tY29udHJvbCB7XG4gIG1heC13aWR0aDogNTAwcHg7XG59XG5cbi50ZXh0IHtcbiAgbWluLXdpZHRoOiA1MDBweCAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnRleHRhcmVhIHtcbiAgbWluLXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIG1pbi1oZWlnaHQ6IDIwMHB4ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZGlmZiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5kaWZmQWRtaW4ge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG4uZGlmZlVzZXIge1xuICBtYXJnaW4tbGVmdDogNTAlXG59XG5cbi5jYXJkIHtcbiAgd2hpdGUtc3BhY2U6IHByZS1saW5lICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {AnswersHistoryStr, ExerciseAnswersStr, ExercisesStr} from \"../../../../../_model/exercises\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../../_model/service\";\nimport {HostService} from \"../../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../../../_services/event-emitter.service\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {DiffEditorModel} from \"ngx-monaco-editor\";\nimport {formatDate} from \"@angular/common\";\nimport {CodeEmitterStr} from \"../../../../../_model/code\";\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../../../../../_control/util.control\";\n\n@Component({\n    selector: 'app-exercises-answer-edit',\n    templateUrl: './exercises-answer-edit.component.html',\n    styleUrls: ['./exercises-answer-edit.component.css']\n})\nexport class ExercisesAnswerEditComponent implements OnInit {\n\n    editForm: FormGroup;\n    editor: any;\n\n    resultOptions = {\n        theme: 'vs-dark',\n        language: 'c',\n        automaticLayout: true,\n        readOnly: true,\n        ignoreTrimWhitespace: false,\n    };\n\n    responseEdit = {} as ResponseStr;\n    exercise = {} as ExercisesStr;\n    answers = {} as ExerciseAnswersStr;\n\n    answerName: string;\n\n    diff: string = '';\n    exerciseId: string = '';\n    answerId: string = '';\n    exIsExpired: number;\n\n    code = {} as CodeEmitterStr;\n    userSession = {} as AuthStr;\n\n    history = [];\n    load = 0;\n    TotalEx = 0;\n    Score = '';\n    countDown = \"\";\n\n    navActive = 1;\n\n    subCode: Subscription;\n\n    constructor(\n        private host: HostService,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        private _util: UtilControl,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    originalModel: DiffEditorModel = {\n        code: '',\n        language: 'text/plain'\n    };\n\n    modifiedModel: DiffEditorModel = {\n        code: '',\n        language: 'text/plain',\n    };\n\n    ngOnInit() {\n        this.editForm = this.formBuilder.group({\n            Comment: [''],\n        });\n\n        this.userSession = this.host.getSessionID();\n\n        this.exerciseId = window.localStorage.getItem(\"ExerciseId\");\n        this.answerId = window.localStorage.getItem(\"AnswerId\");\n\n        this.initA();\n\n        //Getting value from child CodeComponent\n        this.subCode = this._eventEmitter.code.subscribe(\n            data => {\n                this.code = data;\n\n                let message;\n                let typeM;\n                if (this.code.Result && this.originalModel.code) {\n                    this.modifiedModel = {code: this.code.Result, language: 'text/plain'};\n                    if (this.originalModel.code == this.modifiedModel.code) {\n                        this.diff = \"EQUAL\";\n                        message = \"Your result is the same as the result of the exercise. Congratulations!\";\n                        typeM = \"ok\"\n                    } else {\n                        this.diff = \"NOT EQUAL\";\n                        message = \"Your result is not the same as the result of the exercise!\"\n                        typeM = \"error\"\n                    }\n\n                    if (this.code['DIFF']) {\n                        let snackBarRef = this._util.setResponse(message, 'Go to DIFF tab',\n                            typeM, null);\n                        snackBarRef.onAction().subscribe(() =>\n                            this.navActive = 3\n                        );\n\n                        this.code['DIFF'] = false;\n                    }\n\n                }\n\n                if (this.code.Event)\n                    this.history.push(this.registerHistory(this.code.Event));\n\n            },\n        );\n    }\n\n    ngOnDestroy() {\n        this.subCode.unsubscribe();\n    }\n\n    initA() {\n        this.getAnswers();\n        this.getExercise();\n\n        if (this.answerId)\n            this.getAnswer();\n    }\n\n    getExercise() {\n        let filter: ParamStr[] = [];\n        let requestDB;\n\n        filter.push({Name: \"Id\", Value: this.exerciseId});\n        filter.push({Name: \"IdUser\", Value: String(this.userSession.Id)});\n\n        let table = \"exercises-list-user\";\n\n        if (this.userSession.Module == \"Admin\" || window.localStorage.getItem(\"ClassModule\"))\n            table = \"exercises-list-admin\";\n\n        requestDB = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: table,\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n\n                if (data[0]) {\n                    this.originalModel = {code: data[0]['Result'], language: 'text/plain'};\n                    this.exercise = data[0];\n                    this.exIsExpired = this.exercise['ExIsExpired'];\n\n                    this._eventEmitter.setExercise(this.exercise);\n                    this.managerStatus();\n                }\n            });\n    }\n\n    getAnswers() {\n        let filter: ParamStr[] = [];\n        let requestDB;\n\n        filter.push({Name: \"Id\", Value: this.exerciseId});\n        filter.push({Name: \"IdUser\", Value: String(this.userSession.Id)});\n\n        let table = \"exercises-answer-user\";\n\n        if (this.userSession.Module == \"Admin\" || window.localStorage.getItem(\"ClassModule\")) {\n            table = \"exercises-answer-admin\";\n        }\n\n        requestDB = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: table,\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n\n                if (data[0]) {\n                    this.answers = data[0];\n                    this.TotalEx = parseInt(data[0]['TotalEx']);\n                    this.Score = data[0]['Score'];\n\n                    if (this.answers['Name'])\n                        this.answerName = this.answers['Name'];\n                    if (this.answers['gName'])\n                        this.answerName = this.answers['gName'];\n\n                } else {\n                    this.TotalEx = 0;\n                }\n                //console.log(\"Exercises Edit | dbList: \", data, this.code);\n\n                this.load = 1;\n            });\n    }\n\n    getAnswer() {\n        let filter: ParamStr[] = [];\n        let requestDB;\n\n        filter.push({Name: \"Id\", Value: this.answerId});\n\n        requestDB = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"exercises-answer-edit\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n\n                if (data[0]) {\n                    this.code = {\n                        Result: data[0].Result,\n                        Event: data[0].History,\n                        Command: data[0].Command,\n                        CheckCount: data[0].CheckCount,\n                        CheckList: data[0].CheckList,\n                        Code: data[0].Code,\n                        ExecTime: data[0].ExecTime,\n                    };\n                    this.diff = data[0].Status;\n                    this.modifiedModel = {code: this.code.Result, language: 'text/plain'};\n                    this._eventEmitter.setCode(this.code);\n                }\n\n                //console.log(\"Exercises Edit | dbList: \", data, this.code);\n\n                this.load = 1;\n            });\n    }\n\n    // convenience getter for easy access to form fields\n    get fe() {\n        return this.editForm.controls;\n    }\n\n    setRoute(val) {\n        this.router.navigate([val])\n    }\n\n    onSubmit() {\n        this.responseEdit = {} as ResponseStr;\n\n        if (this.TotalEx >= this.exercise.MaxSubmissions) {\n            this.responseEdit.Name = \"error\";\n            this.responseEdit.Status = \"The deadline to send the exercise has ended.\";\n            return;\n        }\n\n        let max = '';\n        if (this.exercise.MaxSubmissions > 0) {\n            max = \"Remaining attempts: \" +\n                (this.exercise.MaxSubmissions - this.TotalEx) + \"\\n\\n\";\n        }\n        let ret = this._util.openModal('Exercise Submission',\n            max + 'Do you want to submit the exercise?',\n            'Yes', 'No', '');\n\n        let subscription = ret.afterClosed().subscribe(data => {\n\n            if (data['button'] == 'YES') {\n\n                let form = {} as ExerciseAnswersStr;\n                form.Date = 'now';\n                form.Result = this.code.Result;\n                form.Code = this.code.Code;\n                form.Status = this.diff;\n                form.IdExercise = this.exerciseId;\n                form.IdGroup = this.exercise['gId'];\n                form.Id = null;\n                form.CheckCount = this.code.CheckCount;\n                form.CheckList = this.code.CheckList;\n                form.ExecTime = this.code.ExecTime;\n                form.Command = this.code.Command;\n                form.IdUser = Number(this.userSession.Id);\n\n                let filter: ParamStr[] = [];\n                let requestDB: UniversalDTOStr = {\n                    Operation: \"update\",\n                    TableData: form,\n                    Custom: \"ExerciseAnswers\",\n                    Filter: filter,\n                };\n\n                this.host.request(requestDB, 'FDBRequest')\n                    .subscribe(data => {\n                        this.responseEdit = data;\n                        //console.log(data);\n\n                        //Let's save the history\n                        if (this.responseEdit.Name == \"ok\") {\n                            let id;\n                            id = this.responseEdit.Status;\n\n                            //console.log(this.history);\n\n                            this.history.forEach((element) => {\n                                this.submitHistory(element, id);\n                            });\n\n                            this.history = [];\n\n                            this.responseEdit = data;\n                            if (this.responseEdit.Name == \"ok\" && parseInt(this.responseEdit.Status) > 0)\n                                this.responseEdit.Status = \"Record inserted successfully.\";\n\n                            this._util.setResponse(this.responseEdit.Status, 'Go to Answers',\n                                this.responseEdit.Name, 'view-answer');\n                        } else {\n                            this._util.setResponse(this.responseEdit.Status, this.responseEdit.Name, null, null);\n                        }\n                    });\n            }\n            this.initA();\n        });\n    }\n\n    registerHistory(event) {\n        let history = {} as { name: string, date: string, status: string };\n\n        if (event) {\n            history.name = event;\n            history.date = formatDate(new Date(), 'yyyy-MM-dd HH:mm', 'en');\n            history.status = this.diff;\n\n            return history;\n        }\n    }\n\n    submitHistory(element, id) {\n\n        let answerHistory = {} as AnswersHistoryStr;\n\n        answerHistory.IdExerciseAnswers = id;\n        answerHistory.Date = element.date;\n        answerHistory.Event = element.name;\n        answerHistory.Status = element.status;\n\n        let filter: ParamStr[] = [];\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: answerHistory,\n            Custom: \"AnswersHistory\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                //console.log(data);\n                //this.router.navigate(['Exercises']);\n                //console.log(\"Exercises submithistory | edit: \", req, data);\n            });\n    }\n\n    async managerStatus() {\n        let count = true;\n\n        let n = this.exercise['CountDown'];\n        if (n <= 0)\n            count = false;\n\n        while (count) {\n            await this._util.delay(1000);\n            n--;\n            if (n <= 0) {\n                let ret = this._util.openModal('Finished Time to Submission',\n                    'The time to submit the exercise is over.',\n                    'Close', '', '');\n\n                count = false;\n                this.initA();\n            }\n\n            this.countDown = this._util.countdown(n);\n        }\n    }\n\n}\n","export default \".mat-table {\\n  background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.mat-column-Name, .mat-column-Name2 {\\n  flex: 0 0 20%;\\n}\\n.mat-column-Id, .mat-column-Index2 {\\n  flex: 0 0 5%;\\n}\\nmat-header-row {\\n  min-height: auto !important;\\n}\\n.mat-column-Action2 {\\n  flex: 0 0 12%;\\n}\\n.mat-column-Date,\\n.mat-column-Score,\\n.mat-column-TotalEx,\\n.mat-column-Score2,\\n.mat-column-ExecTime2,\\n.mat-column-History2,\\n.mat-column-Status2 {\\n  flex: 0 0 10%;\\n}\\n.mat-column-Date2, .mat-column-CheckCount2 {\\n  flex: 0 0 15%;\\n}\\ntable {\\n  width: 100%;\\n}\\ntr.example-detail-row {\\n  height: 0;\\n}\\ntr.element-row:not(.example-expanded-row):hover {\\n  background: #f5f5f5;\\n}\\ntr.element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n.element-row td {\\n  border-bottom-width: 0;\\n}\\n.element-detail {\\n  overflow: hidden;\\n  display: flex;\\n}\\n.element-diagram {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n.element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n.element-description {\\n  padding: 16px;\\n}\\n.element-description-attribution {\\n  opacity: 0.5;\\n}\\n.element-row:not(.expanded) {\\n  cursor: pointer;\\n}\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n.header2 {\\n  background-color: rgba(0, 0, 0, 0.29) !important;\\n}\\n.Notexpired {\\n  color: #28a745;\\n}\\n.expired {\\n  color: #9d1e15;\\n}\\n.time {\\n  color: #9d1e15;\\n  font-size: 10px;\\n}\\n.expired, .Notexpired {\\n  font-size: 14px;\\n}\\nbutton {\\n  margin-left: 5px;\\n}\\n.buttonMenu {\\n  word-wrap: break-word;\\n  float:right;\\n  margin: 10px;\\n}\\n.mat-progress-bar{\\n  height: 20px;\\n}\\n::ng-deep .mat-progress-bar-buffer {\\n  background: #E4E8EB;\\n}\\n#checkBar {\\n  border-radius: 2px;\\n  width: 100px !important;\\n}\\n.icon {\\n  width: 15px;\\n  height: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtYW5zd2VyL2V4ZXJjaXNlcy1hbnN3ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usb0NBQW9DO0FBQ3RDO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0U7QUFDRjtBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxnQ0FBZ0M7RUFDaEMsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CO0FBRUE7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCO0FBRUE7RUFDRSxhQUFhO0FBQ2Y7QUFFQTs7Ozs7OztFQU9FLGFBQWE7QUFDZjtBQUVBO0VBQ0UsYUFBYTtBQUNmO0FBRUE7RUFDRSxXQUFXO0FBQ2I7QUFFQTtFQUNFLFNBQVM7QUFDWDtBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QjtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjtBQUVBO0VBQ0UsZUFBZTtFQUNmLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYixhQUFhO0FBQ2Y7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxhQUFhO0FBQ2Y7QUFFQTtFQUNFLFlBQVk7QUFDZDtBQUVBO0VBQ0UsZUFBZTtBQUNqQjtBQUVBO0VBQ0Usc0dBQXNHO0FBQ3hHO0FBQ0E7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsYUFBYTtBQUNmO0FBRUE7RUFDRSxpQ0FBaUM7QUFDbkM7QUFDQTtFQUNFLHNCQUFzQjtBQUN4QjtBQUVBO0VBQ0Usc0RBQXNEO0FBQ3hEO0FBQ0E7RUFDRSxtQ0FBbUM7QUFDckM7QUFFQTtFQUNFLGdEQUFnRDtBQUNsRDtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7QUFFQTtFQUNFLGVBQWU7QUFDakI7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7QUFFQTtFQUNFLFlBQVk7QUFDZDtBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCO0FBQ3pCO0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtYW5zd2VyL2V4ZXJjaXNlcy1hbnN3ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtdGFibGUge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxubWF0LWZvb3Rlci1yb3csIG1hdC1oZWFkZXItcm93LCBtYXQtcm93LCB0ZC5tYXQtY2VsbCwgdGQubWF0LWZvb3Rlci1jZWxsLCB0aC5tYXQtaGVhZGVyLWNlbGwge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsMCwwLC4xMik7XG59XG4ubWF0LWNlbGwsIC5tYXQtZm9vdGVyLWNlbGwge1xuICBjb2xvcjogIzAwMDtcbn1cbi5tYXQtaGVhZGVyLWNlbGwge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNyk7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLm1hdC1wYWdpbmF0b3IsIC5tYXQtaGVhZGVyLXJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjAzKVxufVxuLm1hdC1wYWdpbmF0b3IsIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZSAubWF0LXNlbGVjdC10cmlnZ2VyIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KSAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogNzAwICFpbXBvcnRhbnQ7XG59XG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4ubWF0LWNvbHVtbi1OYW1lLCAubWF0LWNvbHVtbi1OYW1lMiB7XG4gIGZsZXg6IDAgMCAyMCU7XG59XG4ubWF0LWNvbHVtbi1JZCwgLm1hdC1jb2x1bW4tSW5kZXgyIHtcbiAgZmxleDogMCAwIDUlO1xufVxuXG5tYXQtaGVhZGVyLXJvdyB7XG4gIG1pbi1oZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLm1hdC1jb2x1bW4tQWN0aW9uMiB7XG4gIGZsZXg6IDAgMCAxMiU7XG59XG5cbi5tYXQtY29sdW1uLURhdGUsXG4ubWF0LWNvbHVtbi1TY29yZSxcbi5tYXQtY29sdW1uLVRvdGFsRXgsXG4ubWF0LWNvbHVtbi1TY29yZTIsXG4ubWF0LWNvbHVtbi1FeGVjVGltZTIsXG4ubWF0LWNvbHVtbi1IaXN0b3J5Mixcbi5tYXQtY29sdW1uLVN0YXR1czIge1xuICBmbGV4OiAwIDAgMTAlO1xufVxuXG4ubWF0LWNvbHVtbi1EYXRlMiwgLm1hdC1jb2x1bW4tQ2hlY2tDb3VudDIge1xuICBmbGV4OiAwIDAgMTUlO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50ci5leGFtcGxlLWRldGFpbC1yb3cge1xuICBoZWlnaHQ6IDA7XG59XG5cbnRyLmVsZW1lbnQtcm93Om5vdCguZXhhbXBsZS1leHBhbmRlZC1yb3cpOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbn1cblxudHIuZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogI2VmZWZlZjtcbn1cblxuLmVsZW1lbnQtcm93IHRkIHtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn1cblxuLmVsZW1lbnQtZGV0YWlsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmVsZW1lbnQtZGlhZ3JhbSB7XG4gIG1pbi13aWR0aDogODBweDtcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gIHBhZGRpbmc6IDhweDtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIG1hcmdpbjogOHB4IDA7XG4gIGhlaWdodDogMTA0cHg7XG59XG5cbi5lbGVtZW50LXN5bWJvbCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi5lbGVtZW50LWRlc2NyaXB0aW9uIHtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLmVsZW1lbnQtZGVzY3JpcHRpb24tYXR0cmlidXRpb24ge1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbi5lbGVtZW50LXJvdzpub3QoLmV4cGFuZGVkKSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuL2RlZXAvIC5tYXQtZWxldmF0aW9uLXo4IHtcbiAgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDAsIDAsIDAsIDApLCAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDApLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDApO1xufVxuaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgbGlnaHRncmV5O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4vZGVlcC8gLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59XG4vZGVlcC8gLm1hdC1zZWxlY3QtdmFsdWUsIC5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtcm93Om50aC1jaGlsZCgybisxKXtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODcsIDE5NiwgMjAxLCAwLjE2KSAhaW1wb3J0YW50O1xufVxuLm1hdC1yb3c6bm90KDpudGgtY2hpbGQoMm4rMSkpe1xuICBiYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZmYgIWltcG9ydGFudDtcbn1cblxuLmhlYWRlcjIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMjkpICFpbXBvcnRhbnQ7XG59XG5cbi5Ob3RleHBpcmVkIHtcbiAgY29sb3I6ICMyOGE3NDU7XG59XG5cbi5leHBpcmVkIHtcbiAgY29sb3I6ICM5ZDFlMTU7XG59XG5cbi50aW1lIHtcbiAgY29sb3I6ICM5ZDFlMTU7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuLmV4cGlyZWQsIC5Ob3RleHBpcmVkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG5idXR0b24ge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuXG4uYnV0dG9uTWVudSB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgZmxvYXQ6cmlnaHQ7XG4gIG1hcmdpbjogMTBweDtcbn1cblxuLm1hdC1wcm9ncmVzcy1iYXJ7XG4gIGhlaWdodDogMjBweDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtcHJvZ3Jlc3MtYmFyLWJ1ZmZlciB7XG4gIGJhY2tncm91bmQ6ICNFNEU4RUI7XG59XG5cbiNjaGVja0JhciB7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5pY29uIHtcbiAgd2lkdGg6IDE1cHg7XG4gIGhlaWdodDogMTVweDtcbn0iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../../_services/event-emitter.service\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../_model/service\";\nimport {ExerciseAnswersStr, ExercisesStr} from \"../../../../_model/exercises\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\nimport {ExcelService} from '../../../../_services/file.service';\nimport {dialogStr} from \"../../../../_model/dialog\";\nimport * as JSZip from \"jszip\";\nimport {saveAs} from 'file-saver';\nimport {UtilControl} from \"../../../../_control/util.control\";\n\n@Component({\n    selector: 'exercises-answer-app-answer',\n    templateUrl: './exercises-answer.component.html',\n    styleUrls: ['./exercises-answer.component.css'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed, void', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n            transition('expanded <=> void', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n        ]),\n    ]\n})\n\nexport class ExercisesAnswerComponent implements OnInit {\n    displayedColumns = ['Id', 'Name', 'Date', 'Status', 'Score', 'TotalEx'];\n    dataSource: MatTableDataSource<ExerciseAnswersStr>;\n    displayedColumns2 = ['Index2', 'Name2', 'Date2', 'CheckCount2', 'ExecTime2', 'History2', 'Status2', 'Action2'];\n\n    // @ts-ignore\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    // @ts-ignore\n    @ViewChild(MatSort) sort: MatSort;\n\n    exercise = {} as ExercisesStr;\n    answers: ExerciseAnswersStr[] = [];\n    answersXLS: { Name, Submission_Date, Status, Response_Time, Attempts_Number, Events, Score }[] = [];\n\n    expandedElement: string;\n\n    response = {} as ResponseStr;\n    userSession = {} as AuthStr;\n\n    exerciseId: string;\n    exIsExpired: number;\n    countDown: string;\n    load = 0;\n\n    totalAnswers = 0;\n\n    similarity = \"\";\n\n    module: string;\n    score: boolean;\n\n    constructor(\n        private host: HostService,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        private excelService: ExcelService,\n        private _util: UtilControl,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngAfterViewInit() {\n        if (this.exerciseId) {\n            this.getExercise();\n            this.getAnswers();\n        }\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n\n    ngOnInit() {\n\n        this.userSession = this.host.getSessionID();\n        this.module = window.localStorage.getItem(\"ClassModule\");\n        this.exerciseId = window.localStorage.getItem(\"ExerciseId\");\n    }\n\n    setRoute(val) {\n        this.router.navigate([val])\n    }\n\n    addAnswer(): void {\n        window.localStorage.setItem(\"ExerciseId\", this.exerciseId);\n        window.localStorage.removeItem(\"AnswerId\");\n        this.router.navigate(['add-answer']);\n    };\n\n    editAnswer(answer): void {\n        window.localStorage.setItem(\"AnswerId\", answer.Id.toString());\n        window.localStorage.setItem(\"ExerciseId\", this.exerciseId);\n        this.router.navigate(['edit-answer']);\n    };\n\n    deleteAnswer(id, name, r, i): void {\n\n        let ret = this._util.openModal('Delete Exercise of the User: ' + name,\n            'Confirm to delete the exercise?',\n            'Yes', 'No', '');\n\n        ret.afterClosed().subscribe(data => {\n\n            if (data['button'] == 'YES') {\n\n                let filter: ParamStr[] = [];\n                filter.push({Name: \"Id\", Value: id.toString()});\n\n                let requestDB: UniversalDTOStr = {\n                    Operation: \"drop\",\n                    TableData: null,\n                    Custom: \"exercises-answer\",\n                    Filter: filter,\n                };\n\n                this.host.request(requestDB, 'FDBRequest')\n                    .subscribe(data => {\n                        this.response = data;\n\n                        this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n                        if (this.response['Name'] == \"ok\") {\n                            this.getAnswers();\n                            //console.log(\"Exercises-Answer | deleteAnswer: \", this.response, this.exerciseId);\n                        }\n                    });\n            }\n        });\n    }\n\n    showList(list: string): void {\n        let ret = this._util.openModal('Code Analysis by Clang-Tidy',\n            list,\n            'Close', '', '');\n    }\n\n    showEvents(id): void {\n        this.getHistory(id);\n    }\n\n    download(choice): void {\n        if (choice == \"lastExec\") {\n            this.answers.forEach(answer => {\n                let name = answer['Name'];\n                if (answer['gId'])\n                    name = answer['gName'];\n\n                this.answersXLS.push({\n                    Name: name,\n                    Submission_Date: answer.Date,\n                    Response_Time: answer.ExecTime,\n                    Status: answer.Status,\n                    Attempts_Number: answer['TotalEx'],\n                    Events: answer['HistSum'],\n                    Score: answer.Score\n                })\n            });\n\n            this.excelService.exportAsExcelFile(this.answersXLS, this.exercise.Title);\n            //console.log(this.answersXLS);\n        }\n\n        if (choice == \"lastCode\") {\n\n            var zip = new JSZip();\n            this.answers.forEach(answer => {\n                let name = answer['Name'];\n                if (answer['gId'])\n                    name = answer['gName'];\n                zip.file(name + '.c', answer.Code);\n            });\n\n            let name = this.exercise.Title;\n\n            zip.generateAsync({type: \"blob\"}).then(function (content) {\n                // see FileSaver.js\n                saveAs(content, name);\n            });\n        }\n    }\n\n    showFeedback(id) {\n        let ret = this._util.openModal('Feedback',\n            this.answers[id].Feedback,\n            'Close', '', '');\n\n    }\n\n    changeScore(index, row) {\n        let input: dialogStr[] = [];\n\n        input.push({Model: row.Score, Name: \"score\", Type: \"text\", Title: \"Score\"});\n        input.push({Model: row.Feedback, Name: \"feedback\", Type: \"text\", Title: \"Feedback *(Optional)\"});\n\n        let ret = this._util.openModal('Change Score',\n            'Please enter the score: ',\n            'Yes', 'No', input);\n\n        ret.afterClosed().subscribe(data => {\n\n            if (data && data['button'] == 'YES') {\n\n                let score, feedback;\n                if (data['input'][0] && data['input'][0]['Model'] != \"\")\n                    score = data['input'][0]['Model'];\n\n                if (data['input'][1] && data['input'][1]['Model'] != \"\")\n                    feedback = data['input'][1]['Model'];\n\n                if (!score)\n                    score = \"\";\n\n                if (row.gId)\n                    row.IdUser = \"\";\n\n                let filter: ParamStr[] = [];\n                let requestDB: UniversalDTOStr = {\n                    Operation: \"update\",\n                    TableData: {\n                        IdExercise: this.exerciseId,\n                        IdUser: row.IdUser,\n                        Id: row.IdScore,\n                        Score: score,\n                        Feedback: feedback,\n                        IdGroup: row.gId,\n                    },\n                    Custom: \"ExerciseScores\",\n                    Filter: filter,\n                };\n\n                this.host.request(requestDB, 'FDBRequest')\n                    .subscribe(data => {\n                        if (data) {\n                            if (data['Name'] == 'ok') {\n\n                                if (parseInt(data['Status']) > 0)\n                                    this.answers[index].IdScore = parseInt(data['Status']);\n                                this.answers[index].Score = score;\n                                this.answers[index].Feedback = feedback;\n                                this._util.setResponse('Record changed successfully.', 'ok', null, null);\n                                if (score)\n                                    this.score = true;\n                                else\n                                    this.score = false;\n\n                            } else {\n                                this._util.setResponse(data['Status'], 'error', null, null);\n                            }\n                        }\n                    });\n            }\n        });\n    }\n\n    getHistory(id) {\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"IdExerciseAnswers\", Value: id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"exercises-answer-history\",\n            Filter: filter,\n        };\n\n        let h = \"\";\n        let i = 0;\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                //console.log(data);\n\n                if (data) {\n                    data.forEach(history => {\n                        i++;\n                        h += \"EVENT #\" + i + \"\\n\\nDATE: \" + history.Date + \"\\nSTATUS: \" +\n                            history.Status + \"\\n\\n COMMAND\\n\" + history.Event + \"\\n\\n\"\n                    });\n                } else {\n                    h = \"Records not found.\"\n                }\n\n                let ret = this._util.openModal('Events',\n                    h,\n                    'Close', '', '');\n\n            });\n    }\n\n    getHistoryGroup(id) {\n        let filter: ParamStr[] = [];\n\n        filter.push({Name: \"GroupId\", Value: id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: 'group-history-admin',\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                let sel = 0, del = 0, ins = 0, rep = 0;\n                let h = \"\";\n\n                if (data) {\n                    data.forEach(history => {\n                        if (history.ESelection)\n                            sel += history.ESelection;\n                        if (history.EDelete)\n                            del += history.EDelete;\n                        if (history.EInsert)\n                            ins += history.EInsert;\n                        if (history.EReplace)\n                            rep += history.EReplace;\n                    });\n\n                    let usel = 0, udel = 0, uins = 0, urep = 0;\n                    data.forEach(history => {\n                        if (history.ESelection)\n                            usel = Math.floor((history.ESelection * 100) / sel);\n                        if (history.EInsert)\n                            uins = Math.floor((history.EInsert * 100) / ins);\n                        if (history.EReplace)\n                            urep = Math.floor((history.EReplace * 100) / rep);\n                        if (history.EDelete)\n                            udel = Math.floor((history.EDelete * 100) / del);\n\n                        h += history['Name'] + \"\\n\";\n                        h += \"Selection.......: \" + usel + \"%\\n\";\n                        h += \"Insertion........: \" + uins + \"%\\n\";\n                        h += \"Replacement: \" + urep + \"%\\n\";\n                        h += \"Deletion.........: \" + udel + \"%\\n\";\n                        h += \"\\n\\n\";\n                    });\n\n                } else {\n                    h = \"Records not found.\"\n                }\n\n                let ret = this._util.openModal('Group History',\n                    h,\n                    'Close', '', '');\n\n            });\n    }\n\n    getExercise() {\n        let filter: ParamStr[] = [];\n        let requestDB;\n\n        filter.push({Name: \"Id\", Value: this.exerciseId});\n        filter.push({Name: \"IdUser\", Value: String(this.userSession.Id)});\n\n        let table = \"exercises-list-user\";\n\n        if (this.userSession.Module == \"Admin\" || window.localStorage.getItem(\"ClassModule\"))\n            table = \"exercises-list-admin\";\n\n        requestDB = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: table,\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n\n                if (data[0]) {\n                    this.exercise = data[0];\n                    this.exIsExpired = this.exercise['ExIsExpired'];\n                    this.countDown = this._util.countdown(this.exercise['CountDown']);\n                }\n\n            });\n    }\n\n    getAnswers() {\n        let filter: ParamStr[] = [];\n        let requestDB;\n\n        filter.push({Name: \"Id\", Value: this.exerciseId});\n        filter.push({Name: \"IdUser\", Value: String(this.userSession.Id)});\n\n        let table = \"exercises-answer-user\";\n\n        if (this.userSession.Module == \"Admin\" || window.localStorage.getItem(\"ClassModule\")) {\n            table = \"exercises-answer-admin\";\n        }\n\n        requestDB = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: table,\n            Filter: filter,\n        };\n\n        this.score = false;\n        this.answers = [] as ExerciseAnswersStr[];\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n\n                if (data) {\n                    let bId;\n                    let gId;\n                    let run = [];\n                    let bAnswer;\n                    let i = 0;\n                    let total = data.length;\n                    let history = 0;\n\n                    data.forEach(answer => {\n\n                        if (answer.Score)\n                            this.score = true;\n\n                        if (i == 0) {\n                            bId = answer.IdUser;\n                            gId = answer.gId;\n                        }\n\n                        history += answer.History;\n\n                        if ((answer.IdUser != bId && !answer.gId) ||\n                            answer.gId != gId) {\n\n                            bAnswer['run'] = run;\n                            bAnswer['HistSum'] = history;\n                            this.answers.push(bAnswer);\n                            run = [];\n                            history = 0;\n                        }\n\n                        bAnswer = answer;\n                        run.push(answer);\n                        bId = answer.IdUser;\n                        gId = answer.gId;\n\n                        if (total == 1 || total == i + 1) {\n                            bAnswer['run'] = run;\n                            bAnswer['HistSum'] = history;\n                            this.answers.push(bAnswer);\n                            run = [];\n                            history = 0;\n                        }\n\n                        i++;\n                        this.totalAnswers++;\n                    });\n\n                    this.dataSource = new MatTableDataSource(this.answers);\n                    //console.log(this.answers);\n                    this.dataSource.paginator = this.paginator;\n                    this.dataSource.sort = this.sort;\n\n                } else {\n                    delete this.answers;\n                    delete this.dataSource;\n                }\n                this.load = 1;\n            });\n    }\n\n    checkSimilarity() {\n        // APPLYING SIMILARITY CHECK\n\n        var stringSimilarity = require(\"string-similarity/src/index\");\n\n        this.similarity = \"Code similarity ranges from 0 to 1. Where 1 is an identical code string.\\n\\n\";\n\n        this.answers.forEach(answer1 => {\n            this.answers.forEach(answer2 => {\n                if (answer1.IdUser != answer2.IdUser || answer1['gId'] != answer2['gId']) {\n                    let s = stringSimilarity.compareTwoStrings(answer1.Code, answer2.Code);\n                    if (answer1['gId'])\n                        this.similarity += \"Similarity: \" + parseFloat(s.toFixed(2)) +\n                            \" -> \" + answer1['gName'] + \" ~ \" + answer2['gName'] + \"\\n\";\n                    else\n                        this.similarity += \"Similarity: \" + parseFloat(s.toFixed(2)) +\n                            \" -> \" + answer1['Name'] + \" ~ \" + answer2['Name'] + \"\\n\";\n                }\n            });\n        });\n\n        let ret = this._util.openModal('Code Similarity',\n            this.similarity,\n            'Close', '', '');\n    }\n}","export default \".form-control {\\n  max-width: 500px;\\n}\\n\\n.text {\\n  min-width: 500px !important;\\n  display: block;\\n}\\n\\n.date {\\n  min-width: 100px !important;\\n  display: block;\\n}\\n\\n.number {\\n  min-width: 50px !important;\\n  display: block;\\n}\\n\\n.card {\\n  white-space: pre-line !important;\\n}\\n\\nul, li {list-style-type: none;}\\n\\n.ck-editor__editable_inline {\\n  min-height: 500px;\\n}\\n\\n.icon {\\n  width: 20px;\\n  height: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtZWRpdC9leGVyY2lzZXMtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsY0FBYztBQUNoQjs7QUFFQTtFQUNFLDBCQUEwQjtFQUMxQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZ0NBQWdDO0FBQ2xDOztBQUdBLFFBQVEscUJBQXFCLENBQUM7O0FBRzlCO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL21lbnUtY2xhc3Nyb29tL2NsYXNzcm9vbS9leGVyY2lzZXMvZXhlcmNpc2VzLWVkaXQvZXhlcmNpc2VzLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRyb2wge1xuICBtYXgtd2lkdGg6IDUwMHB4O1xufVxuXG4udGV4dCB7XG4gIG1pbi13aWR0aDogNTAwcHggIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5kYXRlIHtcbiAgbWluLXdpZHRoOiAxMDBweCAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm51bWJlciB7XG4gIG1pbi13aWR0aDogNTBweCAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNhcmQge1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmUgIWltcG9ydGFudDtcbn1cblxuXG51bCwgbGkge2xpc3Qtc3R5bGUtdHlwZTogbm9uZTt9XG5cblxuLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHtcbiAgbWluLWhlaWdodDogNTAwcHg7XG59XG5cbi5pY29uIHtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbn0iXX0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../../_services/event-emitter.service\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../_model/service\";\nimport {ExercisesStr} from \"../../../../_model/exercises\";\nimport {CodeEmitterStr} from \"../../../../_model/code\";\nimport ClassicEditor from '@haifahrul/ckeditor5-build-rich';\nimport {NgbDateStruct, NgbTimeStruct} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../../../../_control/util.control\";\n\n@Component({\n    selector: 'exercises-app-edit',\n    templateUrl: './exercises-edit.component.html',\n    styleUrls: ['./exercises-edit.component.css']\n})\nexport class ExercisesEditComponent implements OnInit {\n    public Editor = ClassicEditor;\n\n    config = {\n        toolbar: {\n            items: [\n                'heading', '|',\n                'alignment', '|',\n                'bold', 'italic', 'strikethrough', 'underline', 'subscript', 'superscript', '|',\n                'link', '|',\n                'bulletedList', 'numberedList', 'todoList',\n                '-', // break point\n                'fontfamily', 'fontsize', 'fontColor', 'fontBackgroundColor', '|',\n                'code', 'codeBlock', '|',\n                'Smiley', 'insertTable', '|',\n                'outdent', 'indent', '|',\n                'uploadImage', 'blockQuote', '|',\n                'undo', 'redo'\n            ],\n            shouldNotGroupWhenFull: true\n        },\n        language: 'id',\n        image: {\n            toolbar: [\n                'imageTextAlternative',\n                'imageStyle:full',\n                'imageStyle:side'\n            ]\n        },\n    }\n\n    editForm: FormGroup;\n    date: NgbDateStruct;\n    time: NgbTimeStruct;\n    exerciseId: number;\n    userId: number;\n\n    submitted = false;\n\n    responseEdit = {} as ResponseStr;\n    exercise = {} as ExercisesStr;\n\n    code = {} as CodeEmitterStr;\n\n    maxFileSize='';\n    userSession = {} as AuthStr;\n    subCode: Subscription;\n    module: string;\n\n    constructor(\n        private host: HostService,\n        public _util: UtilControl,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n    ){\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        this.editForm = this.formBuilder.group({\n            Id: [''],\n            IdUser: [''],\n            IdClassroom: [''],\n            Title: ['',\n                [Validators.required,\n                    Validators.minLength(5),\n                    Validators.maxLength(50),\n                ]\n            ],\n            Date: ['', Validators.required],\n            Time: ['', Validators.required],\n            MaxSubmissions: ['', Validators.required],\n            MaxTimeout: ['', Validators.required],\n            MaxFileSize: [''],\n            Content: [''],\n            Code: [''],\n            Result: [''],\n            Command: [''],\n            ExecTime: [''],\n            CheckCount: [''],\n            CheckList: [''],\n        });\n\n        if (window.localStorage.getItem(\"ExerciseId\"))\n            this.exerciseId = Number(window.localStorage.getItem(\"ExerciseId\"));\n\n        this.module = window.localStorage.getItem(\"ClassModule\");\n\n        this.userSession = this.host.getSessionID();\n\n        this.getInit();\n\n        //Getting value from child CodeComponent\n        this.subCode = this._eventEmitter.code.subscribe(\n            data => {\n                if (data) {\n                    this.code = data\n                    //this.getInit();\n                }\n            },\n        );\n    }\n\n    ngOnDestroy() {\n        this.subCode.unsubscribe();\n    }\n\n    getInit() {\n        if (this.exerciseId)\n            this.getExercise();\n    }\n\n    updateCodeTab() {\n        this.getExercise();\n    }\n\n    getExercise() {\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: String(this.exerciseId)});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"exercises-edit\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe( data => {\n\n                if (!data) return;\n\n                //console.log(data);\n\n                data[0]['Date'] = {\n                    day: parseInt(data[0]['EDDay']),\n                    month: parseInt(data[0]['EDMonth']),\n                    year: parseInt(data[0]['EDYear']),\n                };\n                if (!data[0]['EDHour'])\n                    data[0]['EDHour'] = '00';\n                if (!data[0]['EDMinute'])\n                    data[0]['EDMinute'] = '00';\n\n                data[0]['Time'] = {\n                    hour: parseInt(data[0]['EDHour']),\n                    minute: parseInt(data[0]['EDMinute']),\n                };\n\n                delete data[0]['EDDay'];\n                delete data[0]['EDMonth'];\n                delete data[0]['EDYear'];\n                delete data[0]['EDHour'];\n                delete data[0]['EDMinute'];\n\n                delete data[0]['FileContent'];\n                delete data[0]['FileName'];\n\n                this.editForm.setValue(data[0]);\n                this.code = data[0];\n                this.code['ShowDiff'] = 1;\n\n                this._eventEmitter.setCode(this.code);\n                this._eventEmitter.setExercise(data[0]);\n\n                this.maxFileSize = this._util.formatBytes(data[0].MaxFileSize);\n            });\n    }\n\n    // convenience getter for easy access to form fields\n    get fe() { return this.editForm.controls; }\n\n    setRoute(val) {\n        this.router.navigate([val])\n    }\n\n    onSubmit() {\n        this.responseEdit = {} as ResponseStr;\n\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.editForm.invalid) {\n            return;\n        }\n\n        this.fe['Code'].setValue(this.code.Code);\n        this.fe['Result'].setValue(this.code.Result);\n        this.fe['Command'].setValue(this.code.Command);\n        this.fe['ExecTime'].setValue(this.code.ExecTime);\n        this.fe['CheckCount'].setValue(this.code.CheckCount);\n        this.fe['CheckList'].setValue(this.code.CheckList);\n\n        this.date = this.fe['Date'].value;\n        this.time = this.fe['Time'].value;\n        //console.log(this.time);\n\n        if (!this.time || this.fe['Time'].value == \"\") {\n            this.fe['Time'].setValue(\"00:00\");\n        }\n\n        let temp = this.editForm.value;\n\n        temp['Id'] = this.exerciseId;\n        temp['IdUser'] = this.userSession.Id;\n        temp['IdClassroom'] = window.localStorage.getItem(\"ClassroomId\");\n\n        temp['Date'] =\n            this.date.year + \"-\" +\n            this._util.numberFormat(this.date.month) + \"-\" +\n            this._util.numberFormat(this.date.day) + \" \" +\n            this._util.numberFormat(this.time.hour) + \":\" +\n            this._util.numberFormat(this.time.minute);\n\n        delete temp['Time'];\n        //console.log(temp);\n\n        let filter: ParamStr[] = [];\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: temp,\n            Custom: \"Exercises\",\n            Filter: filter,\n        };\n\n        //console.log(requestDB);\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe( data => {\n                this.responseEdit = data;\n\n                if (!this.exerciseId && this.responseEdit.Name == \"ok\" && parseInt(this.responseEdit.Status) > 0) {\n                    this.exerciseId = Number(this.responseEdit.Status);\n                    this.exercise.Id = this.exerciseId;\n                    window.localStorage.setItem(\"ExerciseId\", String(this.exerciseId));\n                    this.responseEdit.Status = \"Record inserted successfully.\";\n\n                } else if (this.exerciseId && this.responseEdit.Name == \"ok\") {\n                    this.responseEdit.Status = \"Record updated successfully.\";\n                }\n\n                this._util.setResponse(this.responseEdit.Status, 'Go to Exercises',\n                    this.responseEdit.Name, 'view-exercise');\n\n                this.getInit();\n                this._eventEmitter.setExercise(this.exercise);\n\n                //console.log(\"Exercises onSubmit | edit: \", this.editForm.value);\n            });\n    }\n\n    getInputMaxFileSize(input) {\n        this.maxFileSize = this._util.formatBytes(input.path[0].value);\n    }\n\n}\n","export default \".mat-table {\\n  background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.mat-column-Action {\\n  flex: 0 0 20%;\\n}\\n.mat-column-Name {\\n  flex: 0 0 40%;\\n}\\n.mat-column-Size {\\n  flex: 0 0 30%;\\n}\\n.mat-column-Id {\\n  flex: 0 0 10%;\\n}\\n.btn-primary {\\n  color: #000;\\n  background-color: #fff !important;\\n  border-color: #007bff;\\n}\\n.btn-primary.focus, .btn-primary:focus {\\n  color: #000 !important;\\n}\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n/deep/ .mat-sort-header-arrow {\\n  color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n.user-container {\\n  display: flex;\\n  flex-direction: column;\\n  margin: auto;\\n}\\n.card-header span {\\n  font-size: 22px;\\n}\\n.Notexpired {\\n  color: #28a745;\\n}\\n.expired {\\n  color: #9d1e15;\\n}\\n.expired, .Notexpired {\\n  font-size: 10px;\\n}\\nbutton {\\n  margin-left: 5px;\\n}\\n.mat-progress-bar{\\n  height: 20px;\\n}\\n::ng-deep .mat-progress-bar-buffer {\\n  background: #E4E8EB;\\n}\\n#checkBar {\\n  border-radius: 2px;\\n  width: 100px !important;\\n}\\n.icon {\\n  width: 20px;\\n  height: 20px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtZWRpdC9leGVyY2lzZXMtZmlsZXMvZXhlcmNpc2VzLWZpbGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLG9DQUFvQztBQUN0QztBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFO0FBQ0Y7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZ0NBQWdDO0VBQ2hDLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBRUE7RUFDRSxXQUFXO0VBQ1gsaUNBQWlDO0VBQ2pDLHFCQUFxQjtBQUN2QjtBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBRUE7RUFDRSxzR0FBc0c7QUFDeEc7QUFFQTtFQUNFLGlDQUFpQztBQUNuQztBQUNBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxzQkFBc0I7QUFDeEI7QUFDQTtFQUNFLHNEQUFzRDtBQUN4RDtBQUNBO0VBQ0UsbUNBQW1DO0FBQ3JDO0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxZQUFZO0FBQ2Q7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL21lbnUtY2xhc3Nyb29tL2NsYXNzcm9vbS9leGVyY2lzZXMvZXhlcmNpc2VzLWVkaXQvZXhlcmNpc2VzLWZpbGVzL2V4ZXJjaXNlcy1maWxlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWJsZSB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5tYXQtZm9vdGVyLXJvdywgbWF0LWhlYWRlci1yb3csIG1hdC1yb3csIHRkLm1hdC1jZWxsLCB0ZC5tYXQtZm9vdGVyLWNlbGwsIHRoLm1hdC1oZWFkZXItY2VsbCB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYmEoMCwwLDAsLjEyKTtcbn1cbi5tYXQtY2VsbCwgLm1hdC1mb290ZXItY2VsbCB7XG4gIGNvbG9yOiAjMDAwO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KTtcbn1cbi5tYXQtaGVhZGVyLWNlbGwge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4ubWF0LXBhZ2luYXRvciwgLm1hdC1oZWFkZXItcm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuMDMpXG59XG4ubWF0LXBhZ2luYXRvciwgLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplIC5tYXQtc2VsZWN0LXRyaWdnZXIge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNyk7XG59XG4vZGVlcC8gLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiA3MDAgIWltcG9ydGFudDtcbn1cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4ubWF0LWNvbHVtbi1BY3Rpb24ge1xuICBmbGV4OiAwIDAgMjAlO1xufVxuLm1hdC1jb2x1bW4tTmFtZSB7XG4gIGZsZXg6IDAgMCA0MCU7XG59XG4ubWF0LWNvbHVtbi1TaXplIHtcbiAgZmxleDogMCAwIDMwJTtcbn1cbi5tYXQtY29sdW1uLUlkIHtcbiAgZmxleDogMCAwIDEwJTtcbn1cblxuLmJ0bi1wcmltYXJ5IHtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmO1xufVxuXG4uYnRuLXByaW1hcnkuZm9jdXMsIC5idG4tcHJpbWFyeTpmb2N1cyB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG5cbi9kZWVwLyAubWF0LWVsZXZhdGlvbi16OCB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAgcmdiYSgwLCAwLCAwLCAwKSwgMCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwKSwgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwKTtcbn1cblxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xufVxuL2RlZXAvIC5tYXQtc2VsZWN0LXZhbHVlLCAubWF0LXBhZ2luYXRvciwgLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplIC5tYXQtc2VsZWN0LXRyaWdnZXIge1xuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xufVxuL2RlZXAvIC5tYXQtc29ydC1oZWFkZXItYXJyb3cge1xuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xufVxuLm1hdC1yb3c6bnRoLWNoaWxkKDJuKzEpe1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4NywgMTk2LCAyMDEsIDAuMTYpICFpbXBvcnRhbnQ7XG59XG4ubWF0LXJvdzpub3QoOm50aC1jaGlsZCgybisxKSl7XG4gIGJhY2tncm91bmQtY29sb3I6I2ZmZmZmZiAhaW1wb3J0YW50O1xufVxuXG4udXNlci1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IGF1dG87XG59XG4uY2FyZC1oZWFkZXIgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMjJweDtcbn1cblxuLk5vdGV4cGlyZWQge1xuICBjb2xvcjogIzI4YTc0NTtcbn1cbi5leHBpcmVkIHtcbiAgY29sb3I6ICM5ZDFlMTU7XG59XG4uZXhwaXJlZCwgLk5vdGV4cGlyZWQge1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbmJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbi5tYXQtcHJvZ3Jlc3MtYmFye1xuICBoZWlnaHQ6IDIwcHg7XG59XG5cbjo6bmctZGVlcCAubWF0LXByb2dyZXNzLWJhci1idWZmZXIge1xuICBiYWNrZ3JvdW5kOiAjRTRFOEVCO1xufVxuXG4jY2hlY2tCYXIge1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHdpZHRoOiAxMDBweCAhaW1wb3J0YW50O1xufVxuXG4uaWNvbiB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG59XG5cbiJdfQ== */\"","import {Component, ElementRef, Injectable, Input, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../../_model/service\";\nimport {EventEmitterService} from \"../../../../../_services/event-emitter.service\";\nimport {ExerciseFilesStr} from \"../../../../../_model/exercises\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {UtilControl} from \"../../../../../_control/util.control\";\n\n@Component({\n    selector: 'exercises-app-files',\n    templateUrl: './exercises-files.component.html',\n    styleUrls: ['./exercises-files.component.css']\n})\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExercisesFilesComponent implements OnInit {\n    @Input('exerciseId') exerciseId: Number;\n\n    // @ts-ignore\n    @ViewChild('inputFile')\n    inputFile: ElementRef;\n\n    displayedColumns = ['Id', 'Name', 'Size', 'Action'];\n    dataSource: MatTableDataSource<ExerciseFilesStr>;\n    // @ts-ignore\n    @ViewChild(MatSort) sort: MatSort;\n\n    // @ts-ignore\n    @ViewChild('selectfile') el:ElementRef;   //in html we make variable of selectfile\n    progress = { loaded : 0 , total : 0 };\n\n    response = {} as ResponseStr;\n    exerciseFiles = {} as ExerciseFilesStr;\n\n    files: ExerciseFilesStr[] = [];\n\n    load = 0;\n\n    constructor(\n        private host: HostService,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        public _util: UtilControl,\n    ){\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        if (this.exerciseId)\n            this.getFiles();\n    }\n\n    setRoute(val) {\n        this.router.navigate([val])\n    }\n\n    download(file: ExerciseFilesStr) {\n        //console.log(file);\n        this.host.downloadFileData(file, 'ExerciseFiles');\n    }\n\n    delete(file: ExerciseFilesStr): void {\n\n        let filter: ParamStr[] = [];\n\n        filter.push({Name: \"Id\", Value: file.Id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"drop\",\n            TableData: null,\n            Custom: \"exercises-files\",\n            Filter : filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                this.response = data;\n\n                this._util.setResponse(this.response['Status'], this.response['Name'],\n                    null, null);\n\n                this.getFiles();\n            });\n    }\n\n    uploadFile() {\n        this.response = {} as ResponseStr;\n\n        var filedata = this.el.nativeElement.files[0];\n\n        let param = {} as ParamStr;\n        param.Name = \"Exercise\";\n        param.Value = this.exerciseId.toString();\n\n        this.host.uploadFileData(filedata, param)\n            .subscribe(\n                (data: any) => {\n                    if (data.type == 1 && data.loaded && data.total) {\n                        this.progress.loaded = data.loaded;\n                        this.progress.total = data.total;\n                    } else if (data.body) {\n                        //console.log(\"Data Uploaded\");\n                        //console.log(data.body);\n                        this.response = data.body;\n\n                        if (data['body']['Name'] == \"ok\")\n                            this.response['Status'] = \"File inserted successfully.\"\n\n                        this._util.setResponse(this.response['Status'], data['body']['Name'],\n                            null, null);\n\n                        this.inputFile.nativeElement.value = \"\";\n                        this.getFiles();\n                        this.load = 0;\n                    }\n                },\n                error => console.log(error)\n            )\n    }\n\n    getFiles() {\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: this.exerciseId.toString()});\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: \"exercises-answer-files\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe( data => {\n                //console.log(requestDB, this.files);\n                this.files = data;\n                this.dataSource = new MatTableDataSource(this.files);\n                if (this.files)\n                    this.dataSource.sort = this.sort;\n\n                this.load = 1;\n                this.progress = { loaded : 0 , total : 0 };\n            });\n    }\n}\n","export default \".mat-input-element {\\n  color: slategray;\\n}\\n.mat-form-field-label {\\n  color: slategray;\\n}\\n.mat-form-field-underline {\\n  background-color: slategray;\\n}\\n.mat-form-field-ripple {\\n  background-color: slategray;\\n}\\n.mat-form-field-required-marker {\\n  color: slategray;\\n}\\n.mat-form-field-label {\\n  color: #ff884d;\\n}\\n.mat-form-field-ripple {\\n  background-color: #ff884d;\\n}\\n.mat-form-field-required-marker {\\n  color: #ff884d;\\n}\\n.mat-input-element {\\n  color: #ff884d;\\n}\\n.mat-input-element {\\n  color: #007bff;\\n}\\n.mat-form-field-label {\\n  color: #007bff;\\n}\\n.mat-form-field-required-marker {\\n  color: #007bff;\\n}\\n.mat-form-field-ripple {\\n  background-color: #007bff;\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n::-webkit-input-placeholder { /* Edge */\\n  color: gray;\\n}\\n::-moz-placeholder {\\n  color: gray;\\n}\\n::-ms-input-placeholder {\\n  color: gray;\\n}\\n::placeholder {\\n  color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMtZWRpdC9leGVyY2lzZXMtZ3JvdXBzL2V4ZXJjaXNlcy1ncm91cHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSwyQkFBMkI7QUFDN0I7QUFDQTtFQUNFLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxjQUFjO0FBQ2hCO0FBQ0E7RUFDRSx5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFFQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLGNBQWM7QUFDaEI7QUFFQTtFQUNFLGNBQWM7QUFDaEI7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtFQUN6QixTQUFTO0VBQ1Qsa0NBQWtDO0VBQ2xDLGFBQWE7QUFDZjtBQUVBLDhCQUE4QixTQUFTO0VBQ3JDLFdBQVc7QUFDYjtBQU1BO0VBQ0UsV0FBVztBQUNiO0FBRkE7RUFDRSxXQUFXO0FBQ2I7QUFGQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL21lbnUtY2xhc3Nyb29tL2NsYXNzcm9vbS9leGVyY2lzZXMvZXhlcmNpc2VzLWVkaXQvZXhlcmNpc2VzLWdyb3Vwcy9leGVyY2lzZXMtZ3JvdXBzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWlucHV0LWVsZW1lbnQge1xuICBjb2xvcjogc2xhdGVncmF5O1xufVxuLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6IHNsYXRlZ3JheTtcbn1cbi5tYXQtZm9ybS1maWVsZC11bmRlcmxpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBzbGF0ZWdyYXk7XG59XG4ubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xufVxuLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gIGNvbG9yOiBzbGF0ZWdyYXk7XG59XG5cbi5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiAjZmY4ODRkO1xufVxuLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjg4NGQ7XG59XG4ubWF0LWZvcm0tZmllbGQtcmVxdWlyZWQtbWFya2VyIHtcbiAgY29sb3I6ICNmZjg4NGQ7XG59XG4ubWF0LWlucHV0LWVsZW1lbnQge1xuICBjb2xvcjogI2ZmODg0ZDtcbn1cblxuLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY29sb3I6ICMwMDdiZmY7XG59XG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogIzAwN2JmZjtcbn1cblxuLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gIGNvbG9yOiAjMDA3YmZmO1xufVxuXG4ubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbn1cblxuaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgbGlnaHRncmV5O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBFZGdlICovXG4gIGNvbG9yOiBncmF5O1xufVxuXG46LW1zLWlucHV0LXBsYWNlaG9sZGVyIHsgLyogSW50ZXJuZXQgRXhwbG9yZXIgMTAtMTEgKi9cbiAgY29sb3I6IGdyYXk7XG59XG5cbjo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogZ3JheTtcbn0iXX0= */\"","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../../_model/service\";\nimport {GroupsStr} from \"../../../../../_model/groups\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {Observable} from \"rxjs\";\nimport {map, startWith} from 'rxjs/operators';\nimport {EventEmitterService} from \"../../../../../_services/event-emitter.service\";\nimport {UtilControl} from \"../../../../../_control/util.control\";\n\n@Component({\n  selector: 'exercises-app-groups',\n  templateUrl: './exercises-groups.component.html',\n  styleUrls: ['./exercises-groups.component.css']\n})\nexport class ExercisesGroupsComponent implements OnInit {\n  @Input('exerciseId') exerciseId: Number;\n\n  response = {} as ResponseStr;\n  editForm: FormGroup;\n\n  groups: GroupsStr[] = [];\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  memberCtrl = new FormControl();\n  filteredMembers: Observable<GroupsStr[]>;\n  members: GroupsStr[] = [];\n  membersDrop: GroupsStr[] = [];\n\n  IdClassroom: string;\n  load = 0;\n\n  @ViewChild('memberInput', {static: false}) memberInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto', {static: false}) matAutocomplete: MatAutocomplete;\n\n  constructor(\n      private host: HostService,\n      private formBuilder: FormBuilder,\n      private router: Router,\n      private _eventEmitter: EventEmitterService,\n      private _util: UtilControl,\n  ) {\n    this.host.checkSessionID(this.constructor.name);\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\n        startWith(null),\n        map((member: string | null) => member ? this._filter(member) : this.groups.slice()));\n  }\n\n  ngOnInit() {\n\n    this.editForm = this.formBuilder.group({\n      Id: [''],\n      IdUser: [''],\n      IdGroup: [''],\n    });\n\n    this.IdClassroom = window.localStorage.getItem(\"ClassroomId\");\n\n    if (this.exerciseId && this.IdClassroom)\n      this.getMembers();\n\n    this.getGroups();\n\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  get f() {\n    return this.editForm.controls;\n  }\n\n  add(member): void {\n    // Add our member\n    if (member && member.Id != 'undefined') {\n      this.members.push(member);\n      this.memberCtrl.setValue(null);\n    }\n  }\n\n  remove(group: GroupsStr): void {\n    const index = this.members.indexOf(group);\n\n    if (index >= 0) {\n      this.membersDrop.push(this.members[index]);\n      this.members.splice(index, 1);\n    }\n\n    let filter: ParamStr[] = [];\n\n    filter.push({Name: \"IdExercise\", Value: this.exerciseId.toString()});\n    filter.push({Name: \"IdGroup\", Value: group.Id.toString()});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"drop\",\n      TableData: null,\n      Custom: \"exercises-groups\",\n      Filter : filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe(data => {\n          //console.log(data, requestDB);\n          this.response = data;\n          this.response.Name = \"ok\";\n          this.response.Status = \"Record updated successfully.\";\n          this._util.setResponse(this.response['Status'], this.response['Name'],\n              null, 'view-group');\n        });\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.members.push(event.option.value);\n    this.memberInput.nativeElement.value = '';\n    this.memberCtrl.setValue(null);\n\n    let filter: ParamStr[] = [];\n    let requestDB: UniversalDTOStr = {\n      Operation: \"update\",\n      TableData: {IdGroup: event.option.value['Id'], IdExercise: this.exerciseId},\n      Custom: \"ExerciseGroups\",\n      Filter: filter,\n    };\n\n    let res;\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe(data => {\n          if (data) {\n            res = data;\n            if (res.Name == \"ok\") {\n              this.response.Name = \"ok\";\n              this.response.Status = \"Record updated successfully.\";\n              //console.log(res);\n            }\n            this._util.setResponse(this.response['Status'], this.response['Name'],\n                null, null);\n\n            //this.getMembers();\n          }\n        });\n  }\n\n  private _filter(value: string): GroupsStr[] {\n    let usersFiltered: GroupsStr[] = [];\n\n    if (value != \"\" && typeof(value) != 'object') {\n      this.groups.forEach(function (i) {\n        if (i.Name.trim().toLowerCase().includes(value.toLowerCase(), -1)) {\n          usersFiltered.push(i);\n        }\n      });\n      return usersFiltered;\n    }\n  }\n\n  getMembers() {\n    let filter: ParamStr[] = [];\n    filter.push({Name: \"IdExercise\", Value: this.exerciseId.toString()});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"exercises-groups\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          if (data)\n            this.members = data;\n          //console.log(\"GroupsMembers | getMembers \", this.members, request);\n        });\n  }\n\n  getGroups() {\n    let filter: ParamStr[] = [];\n    filter.push({Name: 'IdClassroom', Value: this.IdClassroom});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"groups\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          this.groups = data;\n          this.load = 1;\n          //console.log(\"groups | dbList: \", data);\n        });\n  }\n}\n","export default \".mat-table {\\n    background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n    border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n    color: #000;\\n}\\n.mat-header-cell {\\n    color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n    font-size: 14px;\\n    font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n    background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n    color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n    color: rgba(0,0,0,.7) !important;\\n    font-weight: 700 !important;\\n}\\n.mat-form-field {\\n    font-size: 14px;\\n    margin-left: 10px;\\n}\\n.mat-column-Action {\\n    flex: 0 0 25%;\\n}\\n.mat-column-Title {\\n    flex: 0 0 20%;\\n}\\n.mat-column-ExecTime {\\n    flex: 0 0 10%;\\n}\\n.mat-column-Id {\\n    flex: 0 0 6%;\\n}\\n.mat-column-MaxSubmissions {\\n    flex: 0 0 8%;\\n}\\n.Date, .mat-column-CheckCount {\\n    flex: 0 0 15%;\\n}\\n/deep/ .mat-elevation-z8 {\\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\ninput {\\n    width: 100%;\\n    background-color: #fcfcfc;\\n    border: 0;\\n    border-bottom: 2px solid lightgrey;\\n    padding: 10px;\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n    background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n    color: #000 !important;\\n}\\n/deep/ .mat-sort-header-arrow {\\n    color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n    background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n    background-color:#ffffff !important;\\n}\\n.user-container {\\n    display: flex;\\n    flex-direction: column;\\n    margin: auto;\\n}\\n.Notexpired {\\n    color: #28a745;\\n}\\n.expired {\\n    color: #9d1e15;\\n}\\n.expired, .Notexpired {\\n    font-size: 10px;\\n}\\nbutton {\\n    margin-left: 5px;\\n}\\n.mat-progress-bar{\\n    height: 20px;\\n}\\n::ng-deep .mat-progress-bar-buffer {\\n    background: #E4E8EB;\\n}\\n#checkBar {\\n    border-radius: 2px;\\n    width: 100px !important;\\n}\\n.icon {\\n    width: 20px;\\n    height: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2V4ZXJjaXNlcy9leGVyY2lzZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0k7QUFDSjtBQUNBO0lBQ0kscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxnQ0FBZ0M7SUFDaEMsMkJBQTJCO0FBQy9CO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxzR0FBc0c7QUFDMUc7QUFDQTtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsU0FBUztJQUNULGtDQUFrQztJQUNsQyxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxpQ0FBaUM7QUFDckM7QUFDQTtJQUNJLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxzREFBc0Q7QUFDMUQ7QUFDQTtJQUNJLG1DQUFtQztBQUN2QztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCO0FBRUE7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7QUFFQTtJQUNJLFlBQVk7QUFDaEI7QUFFQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHVCQUF1QjtBQUMzQjtBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9tZW51LWNsYXNzcm9vbS9jbGFzc3Jvb20vZXhlcmNpc2VzL2V4ZXJjaXNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWJsZSB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbm1hdC1mb290ZXItcm93LCBtYXQtaGVhZGVyLXJvdywgbWF0LXJvdywgdGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCwgdGgubWF0LWhlYWRlci1jZWxsIHtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsMCwwLC4xMik7XG59XG4ubWF0LWNlbGwsIC5tYXQtZm9vdGVyLWNlbGwge1xuICAgIGNvbG9yOiAjMDAwO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4ubWF0LXBhZ2luYXRvciwgLm1hdC1oZWFkZXItcm93IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC4wMylcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gICAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gICAgY29sb3I6IHJnYmEoMCwwLDAsLjcpICFpbXBvcnRhbnQ7XG4gICAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xufVxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4ubWF0LWNvbHVtbi1BY3Rpb24ge1xuICAgIGZsZXg6IDAgMCAyNSU7XG59XG4ubWF0LWNvbHVtbi1UaXRsZSB7XG4gICAgZmxleDogMCAwIDIwJTtcbn1cbi5tYXQtY29sdW1uLUV4ZWNUaW1lIHtcbiAgICBmbGV4OiAwIDAgMTAlO1xufVxuLm1hdC1jb2x1bW4tSWQge1xuICAgIGZsZXg6IDAgMCA2JTtcbn1cbi5tYXQtY29sdW1uLU1heFN1Ym1pc3Npb25zIHtcbiAgICBmbGV4OiAwIDAgOCU7XG59XG4uRGF0ZSwgLm1hdC1jb2x1bW4tQ2hlY2tDb3VudCB7XG4gICAgZmxleDogMCAwIDE1JTtcbn1cbi9kZWVwLyAubWF0LWVsZXZhdGlvbi16OCB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDAsIDAsIDAsIDApLCAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDApLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDApO1xufVxuaW5wdXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZmM7XG4gICAgYm9yZGVyOiAwO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBsaWdodGdyZXk7XG4gICAgcGFkZGluZzogMTBweDtcbn1cbi9kZWVwLyAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xufVxuL2RlZXAvIC5tYXQtc2VsZWN0LXZhbHVlLCAubWF0LXBhZ2luYXRvciwgLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplIC5tYXQtc2VsZWN0LXRyaWdnZXIge1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG4vZGVlcC8gLm1hdC1zb3J0LWhlYWRlci1hcnJvdyB7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbn1cbi5tYXQtcm93Om50aC1jaGlsZCgybisxKXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4NywgMTk2LCAyMDEsIDAuMTYpICFpbXBvcnRhbnQ7XG59XG4ubWF0LXJvdzpub3QoOm50aC1jaGlsZCgybisxKSl7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojZmZmZmZmICFpbXBvcnRhbnQ7XG59XG5cbi51c2VyLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbjogYXV0bztcbn1cblxuLk5vdGV4cGlyZWQge1xuICAgIGNvbG9yOiAjMjhhNzQ1O1xufVxuLmV4cGlyZWQge1xuICAgIGNvbG9yOiAjOWQxZTE1O1xufVxuLmV4cGlyZWQsIC5Ob3RleHBpcmVkIHtcbiAgICBmb250LXNpemU6IDEwcHg7XG59XG5cbmJ1dHRvbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cblxuLm1hdC1wcm9ncmVzcy1iYXJ7XG4gICAgaGVpZ2h0OiAyMHB4O1xufVxuXG46Om5nLWRlZXAgLm1hdC1wcm9ncmVzcy1iYXItYnVmZmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjRTRFOEVCO1xufVxuXG4jY2hlY2tCYXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICB3aWR0aDogMTAwcHggIWltcG9ydGFudDtcbn1cblxuLmljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbn1cbiJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ExercisesStr} from \"../../../_model/exercises\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../../_model/service\";\nimport {HostService} from \"../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../_services/event-emitter.service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {dialogStr} from \"../../../_model/dialog\";\nimport {UtilControl} from \"../../../_control/util.control\";\n\n@Component({\n    selector: 'app-exercises',\n    templateUrl: './exercises.component.html',\n    styleUrls: ['./exercises.component.css']\n})\nexport class ExercisesComponent implements OnInit {\n    cAdmin = ['Id', 'Title', 'MaxSubmissions', 'Date', 'ExecTime', 'CheckCount', 'Answers', 'Action'];\n    cUser = ['Id', 'Title', 'MaxSubmissions', 'Date', 'ExecTime', 'CheckCount', 'Answers'];\n    displayedColumns;\n\n    dataSource: MatTableDataSource<ExercisesStr>;\n    // @ts-ignore\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    // @ts-ignore\n    @ViewChild(MatSort) sort: MatSort;\n\n    exercises: ExercisesStr[] = [];\n    response = {} as ResponseStr;\n\n    exerciseCount: number;\n\n    IdClassroom: string;\n    module: string;\n\n    userSession = {} as AuthStr;\n\n    load = 0;\n\n    constructor(\n        private host: HostService,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        public _util: UtilControl,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngAfterViewInit() {\n        this.getExercises();\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n\n    ngOnInit() {\n\n        this.userSession = this.host.getSessionID();\n\n        window.localStorage.removeItem(\"TryACode\");\n\n        this.module = window.localStorage.getItem(\"ClassModule\");\n\n        if (this.userSession.Module == 'Admin'\n            || this.module == \"Lecturer\"\n            || this.module == \"Assistant\")\n            this.displayedColumns = this.cAdmin;\n        else\n            this.displayedColumns = this.cUser;\n\n        this.IdClassroom = window.localStorage.getItem(\"ClassroomId\");\n    }\n\n    addExercise(): void {\n        window.localStorage.removeItem(\"ExerciseId\");\n        this.router.navigate(['add-exercise']);\n    };\n\n    viewAnswer(exercise: ExercisesStr, IsExpired: string): void {\n        window.localStorage.setItem(\"ExerciseId\", exercise.Id.toString());\n        this.router.navigate(['view-answer']);\n    };\n\n    editExercise(exercise: ExercisesStr): void {\n        window.localStorage.setItem(\"ExerciseId\", exercise.Id.toString());\n        this.router.navigate(['edit-exercise']);\n    };\n\n\n    setKey() {\n        let input: dialogStr[] = [];\n\n        input.push({Model: '', Name: \"key\", Type: \"text\", Title: \"Key\"});\n\n        let ret = this._util.openModal('Exercise Key',\n            'Please enter the key: ',\n            'Yes', 'No', input);\n\n        ret.afterClosed().subscribe(data => {\n\n            if (data && data['button'] == 'YES') {\n                let key;\n                if (data['input'][0] && data['input'][0]['Model'] != \"\")\n                    key = data['input'][0]['Model'];\n\n                let filter: ParamStr[] = [];\n                filter.push({Name: 'IdUser', Value: String(this.userSession.Id)});\n                filter.push({Name: 'KeyAccess', Value: key});\n                filter.push({Name: 'IdClassroom', Value: this.IdClassroom});\n\n                let requestDB: UniversalDTOStr = {\n                    Operation: \"groupKey\",\n                    TableData: null,\n                    Custom: \"\",\n                    Filter: filter,\n                };\n\n                this.host.request(requestDB, 'FDBRequest')\n                    .subscribe(data => {\n                        if (data) {\n                          this._util.setResponse(data['Status'], data['Name'], null, null);\n                            this.getExercises();\n                        }\n                    });\n            }\n        });\n    }\n\n    deleteExercise(exercise: ExercisesStr): void {\n        let ret = this._util.openModal('Delete Exercise: ' + exercise.Title,\n            'Confirm to delete the exercise?',\n            'Yes', 'No', '');\n\n        ret.afterClosed().subscribe(data => {\n\n            if (data['button'] == 'YES') {\n\n                let filter: ParamStr[] = [];\n                filter.push({Name: \"Id\", Value: exercise.Id.toString()});\n\n                let requestDB: UniversalDTOStr = {\n                    Operation: \"drop\",\n                    TableData: null,\n                    Custom: \"exercises\",\n                    Filter: filter,\n                };\n\n                this.host.request(requestDB, 'FDBRequest')\n                    .subscribe(data => {\n                        this.response = data;\n\n                        this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n                        if (this.response['Name'] == \"ok\") {\n                            this.getExercises();\n                        }\n                    });\n            }\n        });\n    }\n\n    showList(list: string): void {\n        let ret = this._util.openModal('Code Analysis by Clang-Tidy',\n            list,\n            'Close', '', '');\n    }\n\n    getExercises() {\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"User\", Value: String(this.userSession.Id)});\n        filter.push({Name: 'IdClassroom', Value: this.IdClassroom});\n\n        let requestDB: UniversalDTOStr;\n\n        if (this.userSession.Module == \"User\") {\n            requestDB = {\n                Operation: \"view\",\n                TableData: null,\n                Custom: \"exercises-user\",\n                Filter: filter,\n            };\n        }\n\n        if (this.userSession.Module == \"Admin\"\n            || this.module == \"Lecturer\"\n            || this.module == \"Assistant\") {\n            requestDB = {\n                Operation: \"view\",\n                TableData: null,\n                Custom: \"exercises-admin\",\n                Filter: filter,\n            };\n        }\n\n        let gTemp: ExercisesStr[] = [];\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (data) {\n                    this.exercises = data;\n                    if (this.exercises) {\n                        this.dataSource = new MatTableDataSource(this.exercises);\n                        this.dataSource.paginator = this.paginator;\n                        this.dataSource.sort = this.sort;\n                    } else {\n                        delete this.dataSource;\n                    }\n                }\n\n                this.load = 1;\n            });\n    }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtY2xhc3Nyb29tL2NsYXNzcm9vbS9ncm91cHMvZ3JvdXBzLWVkaXQvZ3JvdXBzLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../../_services/event-emitter.service\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../_model/service\";\nimport {GroupsStr} from \"../../../../_model/groups\";\nimport {UtilControl} from \"../../../../_control/util.control\";\n\n@Component({\n  selector: 'groups-app-edit',\n  templateUrl: './groups-edit.component.html',\n  styleUrls: ['./groups-edit.component.css']\n})\nexport class GroupsEditComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  response = {} as ResponseStr;\n  group: GroupsStr;\n\n  groupId: number;\n  IdClassroom: number;\n  module: string;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private host: HostService,\n      private router: Router,\n      private _eventEmitter: EventEmitterService,\n      private _util: UtilControl,\n  ) {\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngOnInit() {\n    this.module = window.localStorage.getItem(\"ClassModule\");\n\n    //Credentials\n    if (this.host.getSessionID().Module != \"Admin\"\n        && this.module != \"Assistant\"\n        && this.module != \"Lecturer\") {\n      this.router.navigate(['welcome']);\n      return;\n    }\n\n    this.registerForm = this.formBuilder.group({\n      Name: ['',\n        [Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(60),\n        ]\n      ],\n      KeyAccess: ['',\n        [Validators.maxLength(60),\n        ]\n      ],\n      Description: ['', []],\n      Id: ['', []],\n      IdClassroom: ['', []],\n    }, {});\n\n    this.groupId = Number(window.localStorage.getItem(\"editGroupId\"));\n    this.IdClassroom = Number(window.localStorage.getItem(\"ClassroomId\"));\n\n    if (this.groupId)\n      this.getGroups(this.groupId);\n  }\n\n  get fe() {\n    return this.registerForm.controls;\n  }\n\n  getGroups(groupId) {\n\n    let filter: ParamStr[] = [];\n    filter.push({Name: \"Id\", Value: String(groupId)});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"groups-edit\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe(data => {\n          delete data[0]['mCount'];\n          this.registerForm.setValue(data[0]);\n          //console.log(\"Groups Edit | dbList: \", data, requestDB);\n        });\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    let temp = this.registerForm.value;\n    temp['IdClassroom'] = this.IdClassroom;\n\n    let filter: ParamStr[] = [];\n    let requestDB: UniversalDTOStr = {\n      Operation: \"update\",\n      TableData: temp,\n      Custom: \"Groups\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe(data => {\n          this.response = data;\n\n          if (this.response.Name == \"ok\" && !this.groupId)\n            this.response.Status = \"Record inserted successfully.\";\n\n          if (this.response.Name == \"ok\" && this.groupId)\n            this.response.Status = \"Record updated successfully.\";\n\n          this._util.setResponse(this.response['Status'], 'Go to Groups',\n              this.response['Name'],'view-group');\n\n          //console.log(\"Groups onSubmit | edit: \", this.editForm.value);\n        });\n  }\n\n}\n","export default \".mat-input-element {\\n  color: slategray;\\n}\\n.mat-form-field-label {\\n  color: slategray;\\n}\\n.mat-form-field-underline {\\n  background-color: slategray;\\n}\\n.mat-form-field-ripple {\\n  background-color: slategray;\\n}\\n.mat-form-field-required-marker {\\n  color: slategray;\\n}\\n.mat-form-field-label {\\n  color: #ff884d;\\n}\\n.mat-form-field-ripple {\\n  background-color: #ff884d;\\n}\\n.mat-form-field-required-marker {\\n  color: #ff884d;\\n}\\n.mat-input-element {\\n  color: #ff884d;\\n}\\n.mat-input-element {\\n  color: #007bff;\\n}\\n.mat-form-field-label {\\n  color: #007bff;\\n}\\n.mat-form-field-required-marker {\\n  color: #007bff;\\n}\\n.mat-form-field-ripple {\\n  background-color: #007bff;\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n::-webkit-input-placeholder { /* Edge */\\n  color: gray;\\n}\\n::-moz-placeholder {\\n  color: gray;\\n}\\n::-ms-input-placeholder {\\n  color: gray;\\n}\\n::placeholder {\\n  color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2dyb3Vwcy9ncm91cHMtbWVtYmVycy9ncm91cHMtbWVtYmVycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsYUFBYTtBQUNmO0FBRUEsOEJBQThCLFNBQVM7RUFDckMsV0FBVztBQUNiO0FBTUE7RUFDRSxXQUFXO0FBQ2I7QUFGQTtFQUNFLFdBQVc7QUFDYjtBQUZBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2dyb3Vwcy9ncm91cHMtbWVtYmVycy9ncm91cHMtbWVtYmVycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY29sb3I6IHNsYXRlZ3JheTtcbn1cbi5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiBzbGF0ZWdyYXk7XG59XG4ubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xufVxuLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHNsYXRlZ3JheTtcbn1cbi5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIge1xuICBjb2xvcjogc2xhdGVncmF5O1xufVxuXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogI2ZmODg0ZDtcbn1cbi5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY4ODRkO1xufVxuLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gIGNvbG9yOiAjZmY4ODRkO1xufVxuLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY29sb3I6ICNmZjg4NGQ7XG59XG5cbi5tYXQtaW5wdXQtZWxlbWVudCB7XG4gIGNvbG9yOiAjMDA3YmZmO1xufVxuLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6ICMwMDdiZmY7XG59XG5cbi5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIge1xuICBjb2xvcjogIzAwN2JmZjtcbn1cblxuLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG59XG5cbmlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZmM7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGxpZ2h0Z3JleTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsgLyogRWRnZSAqL1xuICBjb2xvcjogZ3JheTtcbn1cblxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIEludGVybmV0IEV4cGxvcmVyIDEwLTExICovXG4gIGNvbG9yOiBncmF5O1xufVxuXG46OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGdyYXk7XG59Il19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../_model/service\";\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {Observable} from \"rxjs\";\nimport {map, startWith} from 'rxjs/operators';\nimport {UsersStr} from \"../../../../_model/users\";\nimport {UtilControl} from \"../../../../_control/util.control\";\n\n@Component({\n  selector: 'groups-app-members',\n  templateUrl: './groups-members.component.html',\n  styleUrls: ['./groups-members.component.css']\n})\nexport class GroupsMembersComponent implements OnInit {\n\n  response = {} as ResponseStr;\n  editForm: FormGroup;\n\n  users: UsersStr[] = [];\n  groupName: string;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  memberCtrl = new FormControl();\n  filteredMembers: Observable<UsersStr[]>;\n  members: UsersStr[] = [];\n  membersDrop: UsersStr[] = [];\n\n  IdGroup: number;\n  IdClassroom: string;\n  module: string;\n\n  @ViewChild('memberInput', {static: false}) memberInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto', {static: false}) matAutocomplete: MatAutocomplete;\n\n  constructor(\n      private host: HostService,\n      private formBuilder: FormBuilder,\n      private router: Router,\n      private _util: UtilControl,\n  ) {\n    this.host.checkSessionID(this.constructor.name);\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\n        startWith(null),\n        map((member: string | null) => member ? this._filter(member) : this.users.slice()));\n  }\n\n  ngOnInit() {\n    this.module = window.localStorage.getItem(\"ClassModule\");\n\n    //Credentials\n    if (this.host.getSessionID().Module != \"Admin\"\n        && this.module != \"Assistant\"\n        && this.module != \"Lecturer\") {\n      this.router.navigate(['welcome']);\n      return;\n    }\n\n    this.editForm = this.formBuilder.group({\n      Id: [''],\n      IdUser: [''],\n      IdGroup: [''],\n      Name: [''],\n    });\n\n    this.IdClassroom = window.localStorage.getItem(\"ClassroomId\");\n\n    this.IdGroup = parseInt(window.localStorage.getItem(\"editGroupId\"));\n    this.groupName = window.localStorage.getItem(\"groupName\");\n    this.getUsers();\n    this.getMembers();\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  get f() {\n    return this.editForm.controls;\n  }\n\n  add(member): void {\n    // Add our member\n    if (member && member.Id != 'undefined') {\n      this.members.push(member);\n      this.memberCtrl.setValue(null);\n    }\n  }\n\n  remove(member: UsersStr): void {\n    const index = this.members.indexOf(member);\n\n    if (index >= 0) {\n      this.membersDrop.push(this.members[index]);\n      this.members.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.members.push(event.option.value);\n    this.memberInput.nativeElement.value = '';\n    this.memberCtrl.setValue(null);\n  }\n\n  private _filter(value: string): UsersStr[] {\n    let usersFiltered: UsersStr[] = [];\n\n    if (value != \"\" && typeof(value) != 'object') {\n      this.users.forEach(function (i) {\n        if (i.Name.trim().toLowerCase().includes(value.toLowerCase(), -1)) {\n          usersFiltered.push(i);\n        }\n      });\n      return usersFiltered;\n    }\n  }\n\n  onSubmit() {\n    this.deleteMembers();\n\n    let temp = this.editForm;\n    delete temp.controls['Name'];\n    delete temp.controls['Id'];\n\n    for (let index = 0; index < this.members.length; ++index) {\n      temp.controls['IdUser'].setValue(this.members[index].Id);\n      temp.controls['IdGroup'].setValue(this.IdGroup);\n\n      let filter: ParamStr[] = [];\n      let requestDB: UniversalDTOStr = {\n        Operation: \"update\",\n        TableData: temp.value,\n        Custom: \"GroupMembers\",\n        Filter: filter,\n      };\n\n      let res;\n      this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            if (data) {\n              res = data;\n              if (res.Name == \"ok\" && parseInt(res.Status) > 0) {\n                this.response.Name = \"ok\";\n                this.response.Status = \"Record updated successfully.\";\n                //console.log(res);\n                this._util.setResponse(this.response['Status'], 'Go to Groups',\n                    this.response['Name'],'view-group');\n              }\n              this.getMembers();\n            }\n          });\n    }\n  }\n\n  deleteMembers(): void {\n    for (let index = 0; index < this.membersDrop.length; ++index) {\n      let filter: ParamStr[] = [];\n\n      filter.push({Name: \"IdUser\", Value: this.membersDrop[index].Id.toString()});\n      filter.push({Name: \"IdGroup\", Value: this.IdGroup.toString()});\n\n      let requestDB: UniversalDTOStr = {\n        Operation: \"drop\",\n        TableData: null,\n        Custom: \"GroupMembers\",\n        Filter : filter,\n      };\n\n      this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            this.response = data;\n            this.response.Name = \"ok\";\n            this.response.Status = \"Record updated successfully.\";\n            this._util.setResponse(this.response['Status'], 'Go to Groups',\n                this.response['Name'],'view-group');\n          });\n      //console.log(requestDB);\n    }\n  }\n\n  getMembers() {\n    let filter: ParamStr[] = [];\n\n    filter.push({Name: \"IdGroup\", Value: this.IdGroup.toString()});\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"members\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          if (data)\n            this.members = data;\n          //console.log(\"GroupsMembers | getMembers \", this.members, request);\n        });\n  }\n\n  getUsers() {\n    let filter: ParamStr[] = [];\n    filter.push({Name: 'Id', Value: this.IdClassroom});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"users-classroom\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          this.users = data;\n\n          //console.log(\"Users | dbList: \", data);\n        });\n  }\n}\n","export default \".mat-table {\\n  background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.mat-column-Action {\\n  flex: 0 0 40%;\\n}\\n.mat-column-Id {\\n  flex: 0 0 10%;\\n}\\n.mat-column-Nome {\\n  flex: 0 0 50%;\\n}\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n.user-container {\\n  display: flex;\\n  flex-direction: column;\\n  margin: auto;\\n}\\nbutton {\\n  margin-left: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL2dyb3Vwcy9ncm91cHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usb0NBQW9DO0FBQ3RDO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0U7QUFDRjtBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxnQ0FBZ0M7RUFDaEMsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxzR0FBc0c7QUFDeEc7QUFDQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsU0FBUztFQUNULGtDQUFrQztFQUNsQyxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGlDQUFpQztBQUNuQztBQUNBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxzREFBc0Q7QUFDeEQ7QUFDQTtFQUNFLG1DQUFtQztBQUNyQztBQUNBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixZQUFZO0FBQ2Q7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL21lbnUtY2xhc3Nyb29tL2NsYXNzcm9vbS9ncm91cHMvZ3JvdXBzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXRhYmxlIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbm1hdC1mb290ZXItcm93LCBtYXQtaGVhZGVyLXJvdywgbWF0LXJvdywgdGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCwgdGgubWF0LWhlYWRlci1jZWxsIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLDAsMCwuMTIpO1xufVxuLm1hdC1jZWxsLCAubWF0LWZvb3Rlci1jZWxsIHtcbiAgY29sb3I6ICMwMDA7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LWhlYWRlci1yb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC4wMylcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KTtcbn1cbi9kZWVwLyAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNykgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xufVxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbi5tYXQtY29sdW1uLUFjdGlvbiB7XG4gIGZsZXg6IDAgMCA0MCU7XG59XG4ubWF0LWNvbHVtbi1JZCB7XG4gIGZsZXg6IDAgMCAxMCU7XG59XG4ubWF0LWNvbHVtbi1Ob21lIHtcbiAgZmxleDogMCAwIDUwJTtcbn1cbi9kZWVwLyAubWF0LWVsZXZhdGlvbi16OCB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAgcmdiYSgwLCAwLCAwLCAwKSwgMCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwKSwgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwKTtcbn1cbmlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZmM7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGxpZ2h0Z3JleTtcbiAgcGFkZGluZzogMTBweDtcbn1cbi9kZWVwLyAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbn1cbi9kZWVwLyAubWF0LXNlbGVjdC12YWx1ZSwgLm1hdC1wYWdpbmF0b3IsIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZSAubWF0LXNlbGVjdC10cmlnZ2VyIHtcbiAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbn1cbi5tYXQtcm93Om50aC1jaGlsZCgybisxKXtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODcsIDE5NiwgMjAxLCAwLjE2KSAhaW1wb3J0YW50O1xufVxuLm1hdC1yb3c6bm90KDpudGgtY2hpbGQoMm4rMSkpe1xuICBiYWNrZ3JvdW5kLWNvbG9yOiNmZmZmZmYgIWltcG9ydGFudDtcbn1cbi51c2VyLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogYXV0bztcbn1cblxuYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG4iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {GroupsStr} from \"../../../_model/groups\";\nimport {EventEmitterService} from \"../../../_services/event-emitter.service\";\nimport {ResponseStr, ParamStr, UniversalDTOStr} from \"../../../_model/service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {UtilControl} from \"../../../_control/util.control\";\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n  displayedColumns = ['Id', 'Name', 'KeyAccess', 'Action'];\n\n  dataSource: MatTableDataSource<GroupsStr>;\n  // @ts-ignore\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // @ts-ignore\n  @ViewChild(MatSort) sort: MatSort;\n\n  groups: GroupsStr[] = [];\n  response = {} as ResponseStr;\n\n  load = 0;\n\n  IdClassroom: string;\n  module: string;\n\n  constructor(\n    private host: HostService,\n    private router: Router,\n    private _eventEmitter: EventEmitterService,\n    public _util: UtilControl,\n  ) {\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngAfterViewInit() {\n    this.getGroups();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnInit() {\n    this.module = window.localStorage.getItem(\"ClassModule\");\n\n    //Credentials\n    if (this.host.getSessionID().Module != \"Admin\"\n        && this.module != \"Assistant\"\n        && this.module != \"Lecturer\") {\n      this.router.navigate(['welcome']);\n      return;\n    }\n\n    this.IdClassroom = window.localStorage.getItem(\"ClassroomId\");\n  }\n\n  addGroup(): void {\n    window.localStorage.removeItem(\"editGroupId\");\n    this.router.navigate(['add-group']);\n  };\n\n  addMembers(group: GroupsStr): void {\n    window.localStorage.setItem(\"editGroupId\", group.Id.toString());\n    window.localStorage.setItem(\"groupName\", group.Name);\n    this.router.navigate(['add-members']);\n  };\n\n  editGroup(group: GroupsStr): void {\n    window.localStorage.setItem(\"editGroupId\", group.Id.toString());\n    this.router.navigate(['edit-group']);\n  };\n\n  deleteGroup(group: GroupsStr): void {\n    let ret = this._util.openModal('Delete Group: ' + group.Name,\n      'Confirm to delete the group?',\n      'Yes', 'No', '');\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data['button'] == 'YES') {\n\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: group.Id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n          Operation: \"drop\",\n          TableData: null,\n          Custom: \"groups\",\n          Filter : filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            this.response = data;\n\n            this._util.setResponse(this.response['Status'], this.response['Name'],null, null);\n\n            if (this.response['Name'] == \"ok\") {\n              this.getGroups();\n            }\n          });\n      }\n    });\n  }\n\n  getGroups() {\n    let filter: ParamStr[] = [];\n    filter.push({Name: 'IdClassroom', Value: this.IdClassroom});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"groups\",\n      Filter: filter,\n    };\n\n    let gTemp: GroupsStr[] = [];\n\n    this.host.request(requestDB, 'FDBRequest')\n      .subscribe( data => {\n        this.groups = data;\n        if (this.groups) {\n          //console.log(\"Groups | dbList: \", data);\n          this.dataSource = new MatTableDataSource(this.groups);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } else {\n          delete this.dataSource;\n        }\n\n        this.load = 1;\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtY2xhc3Nyb29tL2NsYXNzcm9vbS91c2Vycy91c2Vycy1lZGl0L3VzZXJzLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../../_services/event-emitter.service\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../../../_model/service\";\nimport {ClassMembersStr} from \"../../../../_model/classroom\";\nimport {UtilControl} from \"../../../../_control/util.control\";\n\n@Component({\n    selector: 'users-app-edit',\n    templateUrl: './users-edit.component.html',\n    styleUrls: ['./users-edit.component.css']\n})\nexport class UsersClassroomEditComponent implements OnInit {\n\n    registerForm: FormGroup;\n    submitted = false;\n\n    response = {} as ResponseStr;\n    userSession = {} as AuthStr;\n    members = {} as ClassMembersStr;\n\n    IdClassroom: number;\n    module: string;\n    userId: number;\n    Id: number;\n\n    disabled: boolean;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private host: HostService,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        private _util: UtilControl,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n\n        this.registerForm = this.formBuilder.group({\n            Name: ['',\n                [Validators.required,\n                    Validators.minLength(4),\n                    Validators.maxLength(60),\n                ]\n            ],\n            Password: ['',\n                [,\n                    Validators.minLength(4),\n                    Validators.maxLength(50),\n                ]\n            ],\n            CPassword: ['',\n                [,\n                    Validators.minLength(4),\n                    Validators.maxLength(50),\n                ]\n            ],\n            Email: ['',\n                [Validators.required,\n                    Validators.minLength(4),\n                    Validators.maxLength(100),\n                    Validators.email\n                ]\n            ],\n            Module: ['Student', []],\n            ForceChangePass: ['0', []],\n            Id: ['', []],\n        }, {validator: this.checkPassword});\n\n        this.IdClassroom = Number(window.localStorage.getItem(\"ClassroomId\"));\n        this.module = window.localStorage.getItem(\"ClassModule\");\n\n        this.userSession = this.host.getSessionID();\n\n        //Getting Credentials\n        if (this.host.getSessionID().Module != \"Admin\"\n            && this.module != \"Assistant\"\n            && this.module != \"Lecturer\") {\n            this.router.navigate(['welcome']);\n            return;\n        }\n\n        this.userId = Number(window.localStorage.getItem(\"editUserClassroomId\"));\n\n        if (this.userId && this.IdClassroom)\n            this.getUsers(this.userId, this.IdClassroom);\n\n    }\n\n    checkPassword(control: AbstractControl) {\n        if (control.get('Password').value != control.get('CPassword').value) {\n            control.get('CPassword').setErrors({\n                mismatch: true\n            });\n        }\n        return false;\n    }\n\n    get fe() {\n        return this.registerForm.controls;\n    }\n\n    getUsers(userId, IdClassroom) {\n        let filter: ParamStr[] = [];\n\n        if (userId && IdClassroom) {\n            filter.push({Name: 'Id', Value: String(userId)});\n            filter.push({Name: 'IdClassroom', Value: String(IdClassroom)});\n\n            let requestDB: UniversalDTOStr = {\n                Operation: \"view\",\n                TableData: null,\n                Custom: \"users-classroom-edit\",\n                Filter: filter,\n            };\n\n            this.host.request(requestDB, 'FDBRequest')\n                .subscribe(data => {\n\n                    if (data[0]) {\n                        this.Id = data[0]['IdCM'];\n                        delete (data[0]['IdCM']);\n                        data[0]['CPassword'] = \"\";\n                        data[0]['Password'] = \"\";\n\n                        this.registerForm.setValue(data[0]);\n                    }\n\n                });\n        }\n    }\n\n    setRoute(val) {\n        this.router.navigate([val])\n    }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.registerForm.disable();\n        this.disabled = true;\n\n        let temp = this.registerForm.value;\n        delete temp['CPassword'];\n        delete temp['Owner'];\n\n        let m = temp['Module'];\n        temp['Module'] = \"User\";\n\n        if (temp['Password'] == \"\")\n            delete (temp['Password']);\n\n        let filter: ParamStr[] = [];\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: temp,\n            Custom: \"Users\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                this.response = data;\n\n                if (this.response.Name == \"ok\" || this.response.Name == \"info\") {\n                    this.insertMember(parseInt(this.response.Status), m);\n                    this.response.Status = \"Record inserted successfully.\";\n                    this.response.Name = \"ok\";\n                } else {\n                    this.registerForm.enable();\n                    this.disabled = true;\n                }\n\n                this._util.setResponse(this.response.Status, 'Go to Users',\n                    this.response['Name'], 'view-user-classroom');\n\n                //console.log(\"requestDB | this.response \", requestDB, this.response);\n            });\n    }\n\n\n    insertMember(Id, m) {\n        this.members.IdUser = Number(this.userId);\n\n        if (!this.userId)\n            this.members.IdUser = Id;\n\n        this.members.IdClassroom = Number(this.IdClassroom);\n        this.members.Module = m;\n        this.members.Id = this.Id;\n\n        let filter: ParamStr[] = [];\n        let requestDB: UniversalDTOStr = {\n            Operation: \"update\",\n            TableData: this.members,\n            Custom: \"ClassMembers\",\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                this.response = data;\n\n                if (this.response.Name != \"ok\" && this.response.Name != \"info\") {\n\n                    this._util.setResponse(this.response.Status, 'Go to Users',\n                        this.response['Name'], 'view-user-classroom');\n\n                }\n            });\n\n        //console.log(\"requestDB | this.response \", requestDB, this.response);\n        this.getUsers(this.userId, this.IdClassroom);\n        this.registerForm.enable();\n        this.disabled = false;\n    }\n}\n","export default \".mat-input-element {\\n  color: slategray;\\n}\\n.mat-form-field-label {\\n  color: slategray;\\n}\\n.mat-form-field-underline {\\n  background-color: slategray;\\n}\\n.mat-form-field-ripple {\\n  background-color: slategray;\\n}\\n.mat-form-field-required-marker {\\n  color: slategray;\\n}\\n.mat-form-field-label {\\n  color: #ff884d;\\n}\\n.mat-form-field-ripple {\\n  background-color: #ff884d;\\n}\\n.mat-form-field-required-marker {\\n  color: #ff884d;\\n}\\n.mat-input-element {\\n  color: #ff884d;\\n}\\n.mat-input-element {\\n  color: #007bff;\\n}\\n.mat-form-field-label {\\n  color: #007bff;\\n}\\n.mat-form-field-required-marker {\\n  color: #007bff;\\n}\\n.mat-form-field-ripple {\\n  background-color: #007bff;\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n::-webkit-input-placeholder { /* Edge */\\n  color: gray;\\n}\\n::-moz-placeholder {\\n  color: gray;\\n}\\n::-ms-input-placeholder {\\n  color: gray;\\n}\\n::placeholder {\\n  color: gray;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL3VzZXJzL3VzZXJzLWpvaW4vdXNlcnMtam9pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFFQTtFQUNFLGNBQWM7QUFDaEI7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UsY0FBYztBQUNoQjtBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsYUFBYTtBQUNmO0FBRUEsOEJBQThCLFNBQVM7RUFDckMsV0FBVztBQUNiO0FBTUE7RUFDRSxXQUFXO0FBQ2I7QUFGQTtFQUNFLFdBQVc7QUFDYjtBQUZBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL3VzZXJzL3VzZXJzLWpvaW4vdXNlcnMtam9pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY29sb3I6IHNsYXRlZ3JheTtcbn1cbi5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiBzbGF0ZWdyYXk7XG59XG4ubWF0LWZvcm0tZmllbGQtdW5kZXJsaW5lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogc2xhdGVncmF5O1xufVxuLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHNsYXRlZ3JheTtcbn1cbi5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIge1xuICBjb2xvcjogc2xhdGVncmF5O1xufVxuXG4ubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogI2ZmODg0ZDtcbn1cbi5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY4ODRkO1xufVxuLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlciB7XG4gIGNvbG9yOiAjZmY4ODRkO1xufVxuLm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgY29sb3I6ICNmZjg4NGQ7XG59XG5cbi5tYXQtaW5wdXQtZWxlbWVudCB7XG4gIGNvbG9yOiAjMDA3YmZmO1xufVxuLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6ICMwMDdiZmY7XG59XG5cbi5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIge1xuICBjb2xvcjogIzAwN2JmZjtcbn1cblxuLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG59XG5cbmlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZmM7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGxpZ2h0Z3JleTtcbiAgcGFkZGluZzogMTBweDtcbn1cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsgLyogRWRnZSAqL1xuICBjb2xvcjogZ3JheTtcbn1cblxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIEludGVybmV0IEV4cGxvcmVyIDEwLTExICovXG4gIGNvbG9yOiBncmF5O1xufVxuXG46OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGdyYXk7XG59Il19 */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../..//../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../..//../../_model/service\";\nimport {FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from \"@angular/material/autocomplete\";\nimport {Observable} from \"rxjs\";\nimport {map, startWith} from 'rxjs/operators';\nimport {UsersStr} from \"../../../../_model/users\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UtilControl} from \"../../../../_control/util.control\";\n\n@Component({\n  selector: 'class-app-users-join',\n  templateUrl: './users-join.component.html',\n  styleUrls: ['./users-join.component.css']\n})\nexport class UsersClassroomJoinComponent implements OnInit {\n\n  response = {} as ResponseStr;\n  editForm: FormGroup;\n\n  users: UsersStr[] = [];\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = false;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  memberCtrl = new FormControl();\n  filteredMembers: Observable<UsersStr[]>;\n  members: UsersStr[] = [];\n  membersDrop: UsersStr[] = [];\n\n  IdClassroom: string;\n  module: string;\n\n  @ViewChild('memberInput', {static: false}) memberInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto', {static: false}) matAutocomplete: MatAutocomplete;\n\n  constructor(\n      private host: HostService,\n      private formBuilder: FormBuilder,\n      private router: Router,\n      private _snackBar: MatSnackBar,\n      private _util: UtilControl,\n  ) {\n    this.host.checkSessionID(this.constructor.name);\n    this.filteredMembers = this.memberCtrl.valueChanges.pipe(\n        startWith(null),\n        map((member: string | null) => member ? this._filter(member) : this.users.slice()));\n  }\n\n  ngOnInit() {\n    this.module = window.localStorage.getItem(\"ClassModule\");\n\n    if (this.host.getSessionID().Module != \"Admin\"\n        && this.module != \"Assistant\"\n        && this.module != \"Lecturer\") {\n      this.router.navigate(['welcome']);\n      return;\n    }\n\n    this.editForm = this.formBuilder.group({\n      Id: [''],\n      IdUser: [''],\n      IdClassroom: [''],\n      Name: [''],\n    });\n\n    this.IdClassroom = window.localStorage.getItem(\"ClassroomId\");\n\n    this.getUsers();\n    this.getMembers();\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  get f() {\n    return this.editForm.controls;\n  }\n\n  add(member): void {\n    // Add our member\n    if (member && member.Id != 'undefined') {\n      this.members.push(member);\n      this.memberCtrl.setValue(null);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.members.push(event.option.value);\n    this.memberInput.nativeElement.value = '';\n    this.memberCtrl.setValue(null);\n  }\n\n  private _filter(value: string): UsersStr[] {\n    let usersFiltered: UsersStr[] = [];\n\n    if (value != \"\" && typeof(value) != 'object') {\n      this.users.forEach(function (i) {\n        if (i.Name.trim().toLowerCase().includes(value.toLowerCase(), -1)) {\n          usersFiltered.push(i);\n        }\n      });\n      return usersFiltered;\n    }\n  }\n\n  onSubmit() {\n\n    let temp = this.editForm;\n    delete temp.controls['Name'];\n    delete temp.controls['Id'];\n\n    for (let index = 0; index < this.members.length; ++index) {\n      temp.controls['IdUser'].setValue(this.members[index].Id);\n      temp.controls['IdClassroom'].setValue(this.IdClassroom);\n\n      let filter: ParamStr[] = [];\n      let requestDB: UniversalDTOStr = {\n        Operation: \"update\",\n        TableData: temp.value,\n        Custom: \"ClassMembers\",\n        Filter: filter,\n      };\n\n      let res;\n      this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            if (data) {\n              res = data;\n              if (res.Name == \"ok\" && parseInt(res.Status) > 0) {\n                this.response.Name = \"ok\";\n                this.response.Status = \"Record updated successfully.\";\n                //console.log(res);\n                this._util.setResponse(this.response['Status'], 'Go to Users',\n                    this.response['Name'], 'view-user-classroom');\n\n              }\n              this.getMembers();\n            }\n          });\n    }\n  }\n\n\n  getMembers() {\n    let filter: ParamStr[] = [];\n\n    filter.push({Name: 'IdClassroom', Value: this.IdClassroom});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"users-classroom\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          if (data)\n            this.members = data;\n          //console.log(\"GroupsMembers | getMembers \", this.members, request);\n        });\n  }\n\n  getUsers() {\n    let filter: ParamStr[] = [];\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"users\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          this.users = data;\n\n          //console.log(\"Users | dbList: \", data);\n        });\n  }\n}\n","export default \".mat-table {\\n  background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.mat-column-Action {\\n  flex: 0 0 20%;\\n}\\n.mat-column-Id, .mat-column-Module {\\n  flex: 0 0 10%;\\n}\\n.mat-column-Nome, .mat-column-Email {\\n  flex: 0 0 30%;\\n}\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vY2xhc3Nyb29tL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLG9DQUFvQztBQUN0QztBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFO0FBQ0Y7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZ0NBQWdDO0VBQ2hDLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usc0dBQXNHO0FBQ3hHO0FBRUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsYUFBYTtBQUNmO0FBQ0E7RUFDRSxpQ0FBaUM7QUFDbkM7QUFDQTtFQUNFLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0Usc0RBQXNEO0FBQ3hEO0FBQ0E7RUFDRSxtQ0FBbUM7QUFDckMiLCJmaWxlIjoic3JjL2FwcC9tZW51LWNsYXNzcm9vbS9jbGFzc3Jvb20vdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtdGFibGUge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxubWF0LWZvb3Rlci1yb3csIG1hdC1oZWFkZXItcm93LCBtYXQtcm93LCB0ZC5tYXQtY2VsbCwgdGQubWF0LWZvb3Rlci1jZWxsLCB0aC5tYXQtaGVhZGVyLWNlbGwge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsMCwwLC4xMik7XG59XG4ubWF0LWNlbGwsIC5tYXQtZm9vdGVyLWNlbGwge1xuICBjb2xvcjogIzAwMDtcbn1cbi5tYXQtaGVhZGVyLWNlbGwge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNyk7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLm1hdC1wYWdpbmF0b3IsIC5tYXQtaGVhZGVyLXJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjAzKVxufVxuLm1hdC1wYWdpbmF0b3IsIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZSAubWF0LXNlbGVjdC10cmlnZ2VyIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KSAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogNzAwICFpbXBvcnRhbnQ7XG59XG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuLm1hdC1jb2x1bW4tQWN0aW9uIHtcbiAgZmxleDogMCAwIDIwJTtcbn1cbi5tYXQtY29sdW1uLUlkLCAubWF0LWNvbHVtbi1Nb2R1bGUge1xuICBmbGV4OiAwIDAgMTAlO1xufVxuLm1hdC1jb2x1bW4tTm9tZSwgLm1hdC1jb2x1bW4tRW1haWwge1xuICBmbGV4OiAwIDAgMzAlO1xufVxuL2RlZXAvIC5tYXQtZWxldmF0aW9uLXo4IHtcbiAgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDAsIDAsIDAsIDApLCAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDApLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDApO1xufVxuXG5pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNmY2ZjO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBsaWdodGdyZXk7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4vZGVlcC8gLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59XG4vZGVlcC8gLm1hdC1zZWxlY3QtdmFsdWUsIC5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG4ubWF0LXJvdzpudGgtY2hpbGQoMm4rMSl7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTg3LCAxOTYsIDIwMSwgMC4xNikgIWltcG9ydGFudDtcbn1cbi5tYXQtcm93Om5vdCg6bnRoLWNoaWxkKDJuKzEpKXtcbiAgYmFja2dyb3VuZC1jb2xvcjojZmZmZmZmICFpbXBvcnRhbnQ7XG59Il19 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {UsersStr} from \"../../../_model/users\";\nimport {EventEmitterService} from \"../../../_services/event-emitter.service\";\nimport {ResponseStr, ParamStr, UniversalDTOStr, AuthStr} from \"../../../_model/service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UtilControl} from \"../../../_control/util.control\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\n\nexport class UsersClassroomComponent implements OnInit {\n  displayedColumns = ['Id', 'Name', 'Email', 'Module', 'Action'];\n  dataSource: MatTableDataSource<UsersStr>;\n  // @ts-ignore\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // @ts-ignore\n  @ViewChild(MatSort) sort: MatSort;\n\n  users: UsersStr[] = [];\n  response = {} as ResponseStr;\n  userSession = {} as AuthStr;\n\n  IdClassroom: string;\n\n  module: string;\n\n  load = 0;\n\n  constructor(\n    private host: HostService,\n    private router: Router,\n    private _eventEmitter: EventEmitterService,\n    public _util: UtilControl,\n    private _snackBar: MatSnackBar,\n  ){\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngAfterViewInit() {\n    this.getUsers();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnInit() {\n    this.IdClassroom = window.localStorage.getItem(\"ClassroomId\");\n    //console.log(this.IdClassroom);\n\n    this.module = window.localStorage.getItem(\"ClassModule\");\n\n    //Credentials\n    if (this.host.getSessionID().Module == \"User\" &&\n        this.module != \"Assistant\" && this.module != \"Lecturer\" ) {\n      window.localStorage.setItem(\"editUserId\", String(this.host.getSessionID().Id));\n      this.router.navigate(['edit-user']);\n      return;\n    }\n\n    if (this.host.getSessionID().Module != \"Admin\"\n        && this.module != \"Assistant\"\n        && this.module != \"Lecturer\") {\n      this.router.navigate(['welcome']);\n      return;\n    }\n\n    this.userSession = this.host.getSessionID();\n\n  }\n\n  addUser(): void {\n    window.localStorage.removeItem(\"editUserClassroomId\");\n    this.router.navigate(['add-user-classroom']);\n  };\n\n  joinUser(): void {\n    window.localStorage.setItem(\"ClassroomId\", this.IdClassroom.toString());\n    this.router.navigate(['add-join-classroom']);\n  };\n\n  editUser(user: UsersStr): void {\n      window.localStorage.setItem(\"editUserClassroomId\", user.Id.toString());\n      this.router.navigate(['edit-user-classroom']);\n  };\n\n  deleteUser(user: UsersStr): void {\n    let ret = this._util.openModal('Remove User: ' + user.Name,\n      'Confirm remove the user from the classroom?',\n      'Yes', 'No', '');\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data['button'] == 'YES') {\n\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"IdUser\", Value: user.Id.toString()});\n        filter.push({Name: \"IdClassroom\", Value: this.IdClassroom});\n\n        let requestDB: UniversalDTOStr = {\n          Operation: \"drop\",\n          TableData: null,\n          Custom: \"classMembers\",\n          Filter : filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            this.response = data;\n\n            this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n            if (this.response['Name'] == \"ok\") {\n              this.getUsers()\n            }\n          });\n      }\n    });\n  }\n\n  getUsers() {\n    let filter: ParamStr[] = [];\n    filter.push({Name: 'IdClassroom', Value: this.IdClassroom});\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"users-classroom\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n      .subscribe( data => {\n        this.users = data;\n        if (this.users) {\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.users);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } else {\n            delete this.dataSource;\n        }\n\n        this.load = 1;\n        //console.log(\"Users | dbList: \", data);\n      });\n  }\n\n}\n","export default \".tags {\\n  min-height: 150px;\\n  min-width: 20vw;\\n  max-width: calc(100vw - 35px);\\n}\\n\\n.module {\\n  padding: 0.5em;\\n  margin-left: -20px;\\n  display: inline-block;\\n  line-height: 40px;\\n}\\n\\n.emptyClassroom {\\n  margin-top: 10px;\\n}\\n\\n.hasClassroom {\\n  margin-top: -10px;\\n}\\n\\n.divTable{\\n  display: table;\\n  padding-left: 20px;\\n}\\n\\n.divTableRow {\\n  display: table-row;\\n}\\n\\n.divTableHeading {\\n  background-color: #EEE;\\n  display: table-header-group;\\n}\\n\\n.divTableCell, .divTableHead {\\n  display: table-cell;\\n  vertical-align: middle;\\n}\\n\\n.divTableHeading {\\n  background-color: #EEE;\\n  display: table-header-group;\\n  font-weight: bold;\\n}\\n\\n.divTableFoot {\\n  background-color: #EEE;\\n  display: table-footer-group;\\n  font-weight: bold;\\n}\\n\\n.divTableBody {\\n  display: table-row-group;\\n  font-size: 12px;\\n}\\n\\n/deep/ .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #fff;\\n}\\n\\n/deep/ .mat-select-panel {\\n  /* background-color: #007bff; */\\n  color: #0a0a0a;\\n}\\n\\n/deep/ .mat-select-value {\\n  color: #000;\\n}\\n\\n/deep/ .mat-select-arrow {\\n  color:  #000;\\n}\\n\\n/deep/ .mat-form-field-type-mat-select .mat-form-field-label {\\n  color:  #000;\\n}\\n\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #000;\\n}\\n\\n/deep/ .mat-hint {\\n  color: blue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1jbGFzc3Jvb20vbWVudS1jbGFzc3Jvb20uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLHNCQUFzQjtFQUN0QiwyQkFBMkI7QUFDN0I7O0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0FBQ3hCOztBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLDJCQUEyQjtFQUMzQixpQkFBaUI7QUFDbkI7O0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLGlCQUFpQjtBQUNuQjs7QUFDQTtFQUNFLHdCQUF3QjtFQUN4QixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsK0JBQStCO0VBQy9CLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9tZW51LWNsYXNzcm9vbS9tZW51LWNsYXNzcm9vbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhZ3Mge1xuICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgbWluLXdpZHRoOiAyMHZ3O1xuICBtYXgtd2lkdGg6IGNhbGMoMTAwdncgLSAzNXB4KTtcbn1cblxuLm1vZHVsZSB7XG4gIHBhZGRpbmc6IDAuNWVtO1xuICBtYXJnaW4tbGVmdDogLTIwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG5cbi5lbXB0eUNsYXNzcm9vbSB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5oYXNDbGFzc3Jvb20ge1xuICBtYXJnaW4tdG9wOiAtMTBweDtcbn1cblxuLmRpdlRhYmxle1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuLmRpdlRhYmxlUm93IHtcbiAgZGlzcGxheTogdGFibGUtcm93O1xufVxuLmRpdlRhYmxlSGVhZGluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUU7XG4gIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbn1cbi5kaXZUYWJsZUNlbGwsIC5kaXZUYWJsZUhlYWQge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLmRpdlRhYmxlSGVhZGluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUU7XG4gIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uZGl2VGFibGVGb290IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcbiAgZGlzcGxheTogdGFibGUtZm9vdGVyLWdyb3VwO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5kaXZUYWJsZUJvZHkge1xuICBkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuL2RlZXAvIC5tYXQtcHJpbWFyeSAubWF0LW9wdGlvbi5tYXQtc2VsZWN0ZWQ6bm90KC5tYXQtb3B0aW9uLWRpc2FibGVkKSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4vZGVlcC8gLm1hdC1zZWxlY3QtcGFuZWwge1xuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmOyAqL1xuICBjb2xvcjogIzBhMGEwYTtcbn1cblxuL2RlZXAvIC5tYXQtc2VsZWN0LXZhbHVlIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi9kZWVwLyAubWF0LXNlbGVjdC1hcnJvdyB7XG4gIGNvbG9yOiAgIzAwMDtcbn1cblxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC10eXBlLW1hdC1zZWxlY3QgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcbiAgY29sb3I6ICAjMDAwO1xufVxuXG4vZGVlcC8gLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xufVxuXG4vZGVlcC8gLm1hdC1oaW50IHtcbiAgY29sb3I6IGJsdWU7XG59Il19 */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../_model/service\";\nimport {HostService} from \"../_services/host.service\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ClassroomStr} from \"../_model/classroom\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n    selector: 'app-menu-classroom',\n    templateUrl: './menu-classroom.component.html',\n    styleUrls: ['./menu-classroom.component.css']\n})\nexport class MenuClassroomComponent implements OnInit {\n    myGroup = new FormGroup({\n        classroomControl: new FormControl('', [Validators.required])\n    });\n\n    userSession = {} as AuthStr;\n    response = {} as ResponseStr;\n    classroom: ClassroomStr[] = [];\n    classroomList: ClassroomStr[] = [];\n\n    classSelected = {} as ClassroomStr;\n    userModule: string;\n    onChangeClick = false;\n    reload = 0;\n\n    subClassroom: Subscription;\n    subLogin: Subscription;\n\n    constructor(\n        private router: Router,\n        private host: HostService,\n        private _eventEmitter: EventEmitterService,\n        private _snackBar: MatSnackBar,\n    ) {\n    }\n\n    ngOnInit() {\n        this.reload = 1;\n\n        window.localStorage.removeItem(\"TryACode\");\n\n        this.userSession = this.host.getSessionID();\n        if (this.userSession.Id) {\n            this.getClassroom('1');\n        }\n\n        //Getting value from HostCredentials\n        this.subLogin = this._eventEmitter.loginChange.subscribe(\n            data => {\n                this.userSession = this.host.getSessionID();\n                if (data['Name'] == \"stopSession\") {\n                    window.localStorage.removeItem(\"ClassroomId\");\n                    window.localStorage.removeItem(\"ClassModule\");\n                    this.classroom = {} as ClassroomStr[];\n                    this.classroomList = {} as ClassroomStr[];\n                    this.classSelected = {} as ClassroomStr;\n                    this.userModule = \"\";\n                }\n                if (this.userSession.Id && data['Name'] == \"startSession\") {\n                    this.getClassroom('1');\n                }\n            },\n        );\n\n        //Getting value from HostCredentials\n        this.subClassroom = this._eventEmitter.classroom.subscribe(\n            data => {\n                if (!this.onChangeClick) {\n                    this.getClassroom('1');\n                    this.classSelected = data;\n                    this.userModule = data['Module'];\n                    //console.log(\"MenuClassroom-component|_eventEmitter\", data);\n                }\n            },\n        );\n\n    }\n\n    ngOnDestroy() {\n        this.subLogin.unsubscribe();\n        this.subClassroom.unsubscribe();\n    }\n\n    setRoute(val) {\n        if (this.classSelected.Id)\n            window.localStorage.setItem(\"ClassroomId\", this.classSelected.Id.toString());\n        this.router.navigate([val])\n    }\n\n    compareObjects(o1: any, o2: any): boolean {\n        return o1.Id === o2.Id;\n    }\n\n    onChange() {\n        if (this.classSelected) {\n            this.getClassroom('0');\n\n            window.localStorage.setItem(\"ClassroomId\", this.classSelected.Id.toString());\n\n            this.router.navigate(['view-classroom']);\n            this.waitLoadComponent();\n        }\n    }\n\n    async waitLoadComponent() {\n        let waitLoad = 'N';\n        let loop = true;\n        while (loop) {\n            await this.delay(100);\n            waitLoad = window.localStorage.getItem(\"waitLoadComponent\");\n            if (waitLoad == 'S') {\n                loop = false;\n            }\n        }\n        this.onChangeClick = true;\n        this._eventEmitter.setClassroom(this.classSelected);\n        this.onChangeClick = false;\n    }\n\n    private delay(ms: number): Promise<boolean> {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve(true);\n            }, ms);\n        });\n    }\n\n    getClassroom(list) {\n        if (!this.userSession.Id)\n            return\n\n        let filter: ParamStr[] = [];\n        let custom;\n        if (this.userSession.Module == 'Admin')\n            custom = \"classroom-list-admin\";\n\n        if (this.userSession.Module != 'Admin') {\n            filter.push({Name: \"IdUser\", Value: this.userSession.Id.toString()});\n            filter.push({Name: \"Enabled\", Value: '1'});\n            custom = \"classroom-list\";\n        }\n\n        let requestDB: UniversalDTOStr = {\n            Operation: \"view\",\n            TableData: null,\n            Custom: custom,\n            Filter: filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n            .subscribe(data => {\n                if (data) {\n                    this.classroom = data;\n\n                    if (list == '1') {\n                        this.classroomList = data;\n                    }\n                    if (this.reload) {\n                        let classSel;\n                        this.classroom.forEach(function (i) {\n                            if (String(i.Id) == window.localStorage.getItem(\"ClassroomId\"))\n                                classSel = i;\n                        });\n                        if (classSel) {\n                            this.classSelected = classSel;\n                            this.userModule = classSel['Module'];\n                            this._eventEmitter.setClassroom(this.classSelected);\n                        }\n                        this.reload = 0;\n                    }\n                }\n            });\n    }\n}\n","export default \".description h1 {\\n    font-size: 1.5rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L2NsYXNzcm9vbS1tYW5hZ2VyL2NsYXNzcm9vbS1tYW5hZ2VyLWVkaXQvY2xhc3Nyb29tLW1hbmFnZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksNEJBQTRCO0FBQ2hDIiwiZmlsZSI6InNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L2NsYXNzcm9vbS1tYW5hZ2VyL2NsYXNzcm9vbS1tYW5hZ2VyLWVkaXQvY2xhc3Nyb29tLW1hbmFnZXItZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRlc2NyaXB0aW9uIGgxIHtcbiAgICBmb250LXNpemU6IDEuNXJlbSAhaW1wb3J0YW50O1xufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../../_services/event-emitter.service\";\nimport {ParamStr, ResponseStr, UniversalDTOStr} from \"../../../_model/service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport ClassicEditor from '@haifahrul/ckeditor5-build-rich';\nimport {UsersStr} from \"../../../_model/users\";\nimport {ClassroomStr} from \"../../../_model/classroom\";\nimport {UtilControl} from \"../../../_control/util.control\";\n\n@Component({\n  selector: 'classroom-manager-app-edit',\n  templateUrl: './classroom-manager-edit.component.html',\n  styleUrls: ['./classroom-manager-edit.component.css']\n})\nexport class ClassroomManagerEditComponent implements OnInit {\n  public Editor = ClassicEditor;\n\n  config = {\n    toolbar: {\n      items: [\n        'heading', '|',\n        'alignment', '|',\n        'bold', 'italic', 'strikethrough', 'underline', 'subscript', 'superscript', '|',\n        'link', '|',\n        'bulletedList', 'numberedList', 'todoList',\n        '-', // break point\n        'fontfamily', 'fontsize', 'fontColor', 'fontBackgroundColor', '|',\n        'code', 'codeBlock', '|',\n        'Smiley', 'insertTable', '|',\n        'outdent', 'indent', '|',\n        'uploadImage', 'blockQuote', '|',\n        'undo', 'redo'\n      ],\n      shouldNotGroupWhenFull: true\n    },\n    language: 'id',\n    image: {\n      toolbar: [\n        'imageTextAlternative',\n        'imageStyle:full',\n        'imageStyle:side'\n      ]\n    },\n  }\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  response = {} as ResponseStr;\n  users: UsersStr[] = [];\n\n  ForceChangePass: string;\n\n  classroomId: number;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private host: HostService,\n      private router: Router,\n      private _eventEmitter: EventEmitterService,\n      private _snackBar: MatSnackBar,\n      private _util: UtilControl,\n  ){\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngOnInit() {\n\n    this.registerForm = this.formBuilder.group({\n      Name: ['',\n        [Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(50),\n        ]\n      ],\n      KeyAccess: ['',\n        [,\n          Validators.maxLength(60),\n        ]\n      ],\n      Description: ['', []],\n      MaxStudents: ['',\n        [,\n          Validators.max(100),\n        ]\n      ],\n      Enabled: ['', []],\n      Id: ['', []],\n      IdUser: ['',Validators.required],\n    }, {});\n\n    if (window.localStorage.getItem(\"editClassroomId\"))\n      this.classroomId = Number(window.localStorage.getItem(\"editClassroomId\"));\n\n    this.getUsers();\n\n    if (this.classroomId)\n      this.getClassrooms(this.classroomId);\n\n  }\n\n  get fe() {\n    return this.registerForm.controls;\n  }\n\n  getClassrooms(classroomId) {\n    let filter: ParamStr[] = [];\n\n    if (classroomId) {\n      filter.push({Name: 'Id', Value: String(classroomId)});\n\n      let requestDB: UniversalDTOStr = {\n        Operation: \"view\",\n        TableData: null,\n        Custom: \"classroom-edit\",\n        Filter: filter,\n      };\n\n      this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            if (data)\n              this.registerForm.setValue(data[0]);\n          });\n    }\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    let filter: ParamStr[] = [];\n    let requestDB: UniversalDTOStr = {\n      Operation: \"update\",\n      TableData: this.registerForm.value,\n      Custom: \"Classroom\",\n      Filter: filter,\n    };\n    //console.log(requestDB);\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe(data => {\n          this.response = data;\n\n          if (this.response.Name == \"ok\") {\n            if (!this.classroomId)\n              this.response.Status = \"Record inserted successfully.\";\n            else\n              this.response.Status = \"Record updated successfully.\";\n\n            let n = {} as ClassroomStr;\n            this._eventEmitter.setClassroom(n);\n          }\n\n          this._util.setResponse(this.response.Status, 'Go to Classroom',\n              this.response.Name, 'view-classroom-manager');\n\n        });\n  }\n\n  getUsers() {\n    let filter: ParamStr[] = [];\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"users\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n          this.users = data;\n        });\n  }\n\n}\n","export default \".mat-table {\\n  background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.mat-column-Action {\\n  flex: 0 0 20%;\\n}\\n.mat-column-Id, .mat-column-Module {\\n  flex: 0 0 10%;\\n}\\n.mat-column-Nome, .mat-column-Email {\\n  flex: 0 0 30%;\\n}\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L2NsYXNzcm9vbS1tYW5hZ2VyL2NsYXNzcm9vbS1tYW5hZ2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLG9DQUFvQztBQUN0QztBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFO0FBQ0Y7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZ0NBQWdDO0VBQ2hDLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0Usc0dBQXNHO0FBQ3hHO0FBRUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsYUFBYTtBQUNmO0FBQ0E7RUFDRSxpQ0FBaUM7QUFDbkM7QUFDQTtFQUNFLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0Usc0RBQXNEO0FBQ3hEO0FBQ0E7RUFDRSxtQ0FBbUM7QUFDckMiLCJmaWxlIjoic3JjL2FwcC9tZW51LW1hbmFnZW1lbnQvY2xhc3Nyb29tLW1hbmFnZXIvY2xhc3Nyb29tLW1hbmFnZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtdGFibGUge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxubWF0LWZvb3Rlci1yb3csIG1hdC1oZWFkZXItcm93LCBtYXQtcm93LCB0ZC5tYXQtY2VsbCwgdGQubWF0LWZvb3Rlci1jZWxsLCB0aC5tYXQtaGVhZGVyLWNlbGwge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDAsMCwwLC4xMik7XG59XG4ubWF0LWNlbGwsIC5tYXQtZm9vdGVyLWNlbGwge1xuICBjb2xvcjogIzAwMDtcbn1cbi5tYXQtaGVhZGVyLWNlbGwge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNyk7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xufVxuLm1hdC1wYWdpbmF0b3IsIC5tYXQtaGVhZGVyLXJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjAzKVxufVxuLm1hdC1wYWdpbmF0b3IsIC5tYXQtcGFnaW5hdG9yLXBhZ2Utc2l6ZSAubWF0LXNlbGVjdC10cmlnZ2VyIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KSAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogNzAwICFpbXBvcnRhbnQ7XG59XG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuLm1hdC1jb2x1bW4tQWN0aW9uIHtcbiAgZmxleDogMCAwIDIwJTtcbn1cbi5tYXQtY29sdW1uLUlkLCAubWF0LWNvbHVtbi1Nb2R1bGUge1xuICBmbGV4OiAwIDAgMTAlO1xufVxuLm1hdC1jb2x1bW4tTm9tZSwgLm1hdC1jb2x1bW4tRW1haWwge1xuICBmbGV4OiAwIDAgMzAlO1xufVxuL2RlZXAvIC5tYXQtZWxldmF0aW9uLXo4IHtcbiAgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDAsIDAsIDAsIDApLCAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDApLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDApO1xufVxuXG5pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNmY2ZjO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBsaWdodGdyZXk7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4vZGVlcC8gLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59XG4vZGVlcC8gLm1hdC1zZWxlY3QtdmFsdWUsIC5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG4ubWF0LXJvdzpudGgtY2hpbGQoMm4rMSl7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTg3LCAxOTYsIDIwMSwgMC4xNikgIWltcG9ydGFudDtcbn1cbi5tYXQtcm93Om5vdCg6bnRoLWNoaWxkKDJuKzEpKXtcbiAgYmFja2dyb3VuZC1jb2xvcjojZmZmZmZmICFpbXBvcnRhbnQ7XG59Il19 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {ClassroomStr} from \"../../_model/classroom\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {ResponseStr, ParamStr, UniversalDTOStr, AuthStr} from \"../../_model/service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UtilControl} from \"../../_control/util.control\";\n\n@Component({\n  selector: 'app-classroom-manager',\n  templateUrl: './classroom-manager.component.html',\n  styleUrls: ['./classroom-manager.component.css']\n})\n\nexport class ClassroomManagerComponent implements OnInit {\n  displayedColumns = ['Id', 'Owner', 'Name',\n    'MaxStudents', 'Enabled', 'KeyAccess', 'Action'];\n  dataSource: MatTableDataSource<ClassroomStr>;\n  // @ts-ignore\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // @ts-ignore\n  @ViewChild(MatSort) sort: MatSort;\n\n  classroom: ClassroomStr[] = [];\n  response = {} as ResponseStr;\n  userSession = {} as AuthStr;\n\n  load = 0;\n\n  constructor(\n    private host: HostService,\n    private router: Router,\n    private _eventEmitter: EventEmitterService,\n    public _util: UtilControl,\n    private _snackBar: MatSnackBar,\n  ){\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngAfterViewInit() {\n    this.getClassroom();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnInit() {\n     this.userSession = this.host.getSessionID();\n\n  }\n\n  addClassroom(): void {\n    window.localStorage.removeItem(\"editClassroomId\");\n    this.router.navigate(['add-classroom-manager']);\n  };\n\n  editClassroom(classroom: ClassroomStr): void {\n      window.localStorage.setItem(\"editClassroomId\", classroom.Id.toString());\n      this.router.navigate(['edit-classroom-manager']);\n  };\n\n  deleteClassroom(classroom: ClassroomStr): void {\n    let ret = this._util.openModal('Delete Classroom: ' + classroom.Name,\n      'Confirm to delete the classroom?',\n      'Yes', 'No', '');\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data['button'] == 'YES') {\n\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: classroom.Id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n          Operation: \"drop\",\n          TableData: null,\n          Custom: \"classroom\",\n          Filter : filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            this.response = data;\n            //console.log(\"Classroom | dbList: \", this.response);\n\n            this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n            if (this.response['Name'] == \"ok\") {\n              this.getClassroom()\n\n              let n = {} as ClassroomStr;\n              this._eventEmitter.setClassroom(n);\n            }\n          });\n      }\n    });\n  }\n\n  getClassroom() {\n    let filter: ParamStr[] = [];\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"classroom-list-admin\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n      .subscribe( data => {\n        this.classroom = data;\n        if (this.classroom) {\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.classroom);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } else {\n            delete this.dataSource;\n        }\n\n        this.load = 1;\n        //console.log(\"Classroom | dbList: \", data);\n      });\n  }\n\n}\n","export default \".user-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.key {\\n  width: 20px;\\n}\\n\\n.connected {\\n  font-size: 12px;\\n  color: blue;\\n}\\n\\n.help {\\n  font-size: 12px;\\n}\\n\\n.mat-button-toggle {\\n  flex-wrap: wrap !important;\\n  overflow-wrap: break-word !important;\\n  border-radius: 4px;\\n  margin-left: 3px;\\n  margin-right:3px;\\n  width: 80px;\\n  height: 50px;\\n  font-size: 14px;\\n}\\n\\n.mat-button-toggle-checked {\\n  background-color: #007bff;\\n}\\n\\n.op-mode {\\n  text-align: center;\\n}\\n\\n.description {\\n  font-size: 12px;\\n  display: block;\\n  white-space: pre-line;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L2NsdXN0ZXItYXZhaWxhYmxlL2NsdXN0ZXItYXZhaWxhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsb0NBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L2NsdXN0ZXItYXZhaWxhYmxlL2NsdXN0ZXItYXZhaWxhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ua2V5IHtcbiAgd2lkdGg6IDIwcHg7XG59XG5cbi5jb25uZWN0ZWQge1xuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiBibHVlO1xufVxuXG4uaGVscCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLm1hdC1idXR0b24tdG9nZ2xlIHtcbiAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBtYXJnaW4tbGVmdDogM3B4O1xuICBtYXJnaW4tcmlnaHQ6M3B4O1xuICB3aWR0aDogODBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5tYXQtYnV0dG9uLXRvZ2dsZS1jaGVja2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbn1cblxuLm9wLW1vZGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5kZXNjcmlwdGlvbiB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcbn0iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {HostService} from \"../../_services/host.service\";\nimport {HostInfoStr} from \"../../_model/hostInfo\";\nimport {ClusterStr} from \"../../_model/cluster\";\nimport {dialogStr} from \"../../_model/dialog\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {ParamStr, RequestStr, ResponseStr, ServiceOpModeStr} from \"../../_model/service\";\nimport {Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../../_control/util.control\";\n\n@Component({\n  selector: 'app-cluster-available',\n  templateUrl: './cluster-available.component.html',\n  styleUrls: ['./cluster-available.component.css']\n})\nexport class ClusterAvailableComponent implements OnInit {\n\n  clusters: ClusterStr[] = [];\n  responseCo = {} as ResponseStr;\n  responseOp = {} as ResponseStr;\n  hostInfo = {} as HostInfoStr;\n  subHostInfo: Subscription;\n  haveUpdate: string = \"\";\n\n  constructor(\n    private host: HostService,\n    public _util: UtilControl,\n    private router: Router,\n    private _eventEmitter: EventEmitterService,\n  ){\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngOnInit() {\n\n    this.clusterInfo();\n\n    this.hostInfo.Cluster = {} as ClusterStr;\n    this.getHostInfo();\n\n    //Getting value from App Component\n    this.subHostInfo = this._eventEmitter.hostInfo.subscribe(\n      data => {\n        this.hostInfo = data;\n\n        let hu = this.haveUpdate;\n        hu = this.hostInfo.Updates[\"clusterAvailable\"];\n\n        if (hu != this.haveUpdate) {\n          this.clusterInfo();\n          //console.log('OperationMode: cluster-available: ', hu, this.haveUpdate);\n        }\n      },\n    );\n\n  }\n\n  ngOnDestroy() {\n    this.subHostInfo.unsubscribe();\n  }\n\n  connectToCluster(val: ClusterStr) {\n    //console.log('OperationMode: connectToCluster: ', val);\n\n    let input: dialogStr[] = [];\n    if (val.Password) {\n      input.push({Model: \"\", Name: \"password\", Type: \"password\", Title: \"Password\"});\n    }\n\n    let ret = this._util.openModal('Connect to ' + val.Name,\n      'Are you sure you want to connect to this cluster?',\n      'Yes', 'No', input);\n\n    ret.afterClosed().subscribe(data => {\n      if (data['button'] == 'YES') {\n        if (val.Password &&\n          (!data['input'][0]['Model'] ||\n            data['input'][0]['Model'] == \"\")) {\n          this.responseCo['Name'] = \"error\";\n          this.responseCo['Status'] = \"Please, type the cluster password...\";\n          return;\n        }\n\n        if (val.Password)\n          val.Check = data['input'][0]['Model'];\n\n        this.responseCo['Name'] = \"info\";\n        this.responseCo['Status'] = \"Request sent, wait ...\";\n\n        let serviceOpMode: ServiceOpModeStr = {\n          NewOpMode: \"NODE\",\n          Cluster: val,\n        };\n        //console.log('OperationMode: ServiceOpModeStr: ', serviceOpMode);\n\n        this.host.request(serviceOpMode, 'setOpMode')\n          .subscribe(data => {\n            this.responseCo = data;\n\n            if (this.responseCo['Name'] == \"ok\") {\n              // Inform the App Root about new change in OpMode\n              this._eventEmitter.setNewOpMode(\"NODE\");\n            }\n          });\n      }\n    });\n\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  clusterInfo() {\n    let params: ParamStr[] = [];\n\n    let request: RequestStr = {\n      Request: \"clusterAvailable\",\n      Param: params,\n    };\n\n    this.host.request(request, 'simpleRequest')\n      .subscribe(data => {\n        this.clusters = data;\n        if (data)\n          this.haveUpdate = this.clusters.length.toString();\n        else\n          this.haveUpdate = \"0\";\n\n        //console.log('Cluster-Available: clusterInfo ', this.clusters, this.host.getSessionID());\n      });\n  }\n\n  getHostInfo() {\n    let params: ParamStr[] = [];\n    let request: RequestStr = {\n      Request: \"hostInfo\",\n      Param: params,\n    };\n\n    this.host.request(request, 'simpleRequest')\n        .subscribe(data => {\n          this.hostInfo = data;\n          //console.log(this.hostInfo);\n        });\n  }\n\n  setOpMode(mode: string) {\n\n    if (mode == this.hostInfo.OpMode)\n      return;\n\n    let input: dialogStr[] = [];\n\n    if (mode == 'MASTER') {\n      input.push({Model: \"\", Name: \"clusterName\", Type: \"text\",  Title: \"Cluster Name\"});\n      input.push({Model: \"\", Name: \"password\", Type: \"password\", Title: \"Password *(Optional)\"});\n    }\n\n    let ret = this._util.openModal('Change Mode',\n        'Did you change the host operation mode to ' + mode + ', confirm the request?',\n        'Yes', 'No', input);\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data && data['button'] == 'YES') {\n        if (mode == 'MASTER' &&\n            (!data['input'][0]['Model'] ||\n                data['input'][0]['Model'] == \"\")) {\n          this.responseOp['Name'] = \"error\";\n          this.responseOp['Status'] = \"Please, type a cluster name...\";\n          mode = this.hostInfo.OpMode;\n          return;\n        }\n\n        if (mode == 'MASTER' &&\n            data['input'][0]['Model'] && /[^\\w]/.test(data['input'][0]['Model'])) {\n          this.responseOp['Name'] = \"error\";\n          this.responseOp['Status'] = \"Spaces and special characters are not allowed. \" +\n              \"Alphanumeric characters only.\";\n          mode = this.hostInfo.OpMode;\n          return;\n        }\n\n        let cluster = {} as ClusterStr;\n        cluster.Owner = this.host.getSessionID().Owner;\n\n        if (data['input'][0] && data['input'][0]['Model'] != \"\")\n          cluster.Name = data['input'][0]['Model'];\n\n        if (data['input'][1] && data['input'][1]['Model'] != \"\")\n          cluster.Password = data['input'][1]['Model'];\n\n        let serviceOpMode: ServiceOpModeStr = {\n          NewOpMode: mode,\n          Cluster: cluster,\n        };\n\n        this.responseOp['Name'] = \"info\";\n        this.responseOp['Status'] = \"Request sent, wait ...\";\n\n        this.host.request(serviceOpMode, 'setOpMode')\n            .subscribe(data => {\n              this.responseOp = data;\n              if (this.responseOp['Name'] == \"ok\") {\n                // Inform the App Root about new change in OpMode\n                this.host.killSessionID();\n                this._eventEmitter.setNewOpMode(mode);\n              }\n            });\n      } else {\n        mode = this.hostInfo.OpMode;\n      }\n    });\n\n  }\n\n}\n\n","export default \".user-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.help {\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.resources {\\r\\n    font-size: 10px;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n.mat-list-base .mat-list-item {\\r\\n    color: #000;\\r\\n}\\r\\n\\r\\n.mat-list-base {\\r\\n    padding-top: 0px;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-list-base .mat-list-item .mat-list-text, .mat-list-base .mat-list-option .mat-list-text {\\r\\n    float: left;\\r\\n    width: 80%;\\r\\n    padding: 4px;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-list-base .mat-list-item .mat-list-icon, .mat-list-base .mat-list-option .mat-list-icon {\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content, .mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content {\\r\\n    padding-top: 0px !important;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-list-base .mat-list-item .mat-list-item-content, .mat-list-base .mat-list-option .mat-list-item-content {\\r\\n    display: block !important;\\r\\n}\\r\\n\\r\\n::ng-deep .nodes {\\r\\n    margin-left: 30px !important;\\r\\n    font-size: 12px !important;\\r\\n    height: 20px !important;\\r\\n}\\r\\n\\r\\n::ng-deep .listNodes {\\r\\n    margin-left:30px !important;\\r\\n}\\r\\n\\r\\n.nodesSelection {\\r\\n    text-align: left;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n.description {\\r\\n    font-size: 12px;\\r\\n    display: block;\\r\\n    white-space: pre-line;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L2N1cnJlbnQtbm9kZXMvY3VycmVudC1ub2Rlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtJQUNWLFlBQVk7QUFDaEI7O0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSw0QkFBNEI7SUFDNUIsMEJBQTBCO0lBQzFCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxxQkFBcUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9tZW51LW1hbmFnZW1lbnQvY3VycmVudC1ub2Rlcy9jdXJyZW50LW5vZGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5oZWxwIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLnJlc291cmNlcyB7XHJcbiAgICBmb250LXNpemU6IDEwcHg7XHJcbn1cclxuXHJcbi5pY29uIHtcclxuICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4ubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSB7XHJcbiAgICBjb2xvcjogIzAwMDtcclxufVxyXG5cclxuLm1hdC1saXN0LWJhc2Uge1xyXG4gICAgcGFkZGluZy10b3A6IDBweDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtIC5tYXQtbGlzdC10ZXh0LCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3Qtb3B0aW9uIC5tYXQtbGlzdC10ZXh0IHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIHBhZGRpbmc6IDRweDtcclxufVxyXG46Om5nLWRlZXAgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0gLm1hdC1saXN0LWljb24sIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1vcHRpb24gLm1hdC1saXN0LWljb24ge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbS5tYXQtbXVsdGktbGluZSAubWF0LWxpc3QtaXRlbS1jb250ZW50LCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3Qtb3B0aW9uLm1hdC1tdWx0aS1saW5lIC5tYXQtbGlzdC1pdGVtLWNvbnRlbnQge1xyXG4gICAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0gLm1hdC1saXN0LWl0ZW0tY29udGVudCwgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbiAubWF0LWxpc3QtaXRlbS1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubm9kZXMge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwcHggIWltcG9ydGFudDtcclxuICAgIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubGlzdE5vZGVzIHtcclxuICAgIG1hcmdpbi1sZWZ0OjMwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLm5vZGVzU2VsZWN0aW9uIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5kZXNjcmlwdGlvbiB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcclxufSJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../_services/host.service\";\nimport {NodeStr} from \"../../_model/node\";\nimport {ParamStr, RequestStr, ResponseStr} from \"../../_model/service\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {HostInfoStr} from \"../../_model/hostInfo\";\nimport {Subscription} from \"rxjs\";\nimport {Router} from \"@angular/router\";\nimport {UtilControl} from \"../../_control/util.control\";\nimport {ClusterStr} from \"../../_model/cluster\";\n\n@Component({\n    selector: 'app-current-nodes',\n    templateUrl: './current-nodes.component.html',\n    styleUrls: ['./current-nodes.component.css']\n})\nexport class CurrentNodesComponent implements OnInit {\n\n    registerForm: FormGroup;\n    submitted = false;\n    nodes: NodeStr[] = [];\n    response = {} as ResponseStr;\n    currentNumberOfNodes: number;\n\n    haveUpdate: string = \"\";\n    hostInfo = {} as HostInfoStr;\n\n    subHostInfo: Subscription;\n\n    vcpus = 0;\n\n    constructor(\n        private host: HostService,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n        public _util: UtilControl,\n    ) {\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        //Credentials\n        if (!this.host.getSessionID().Id) {\n            this.router.navigate(['welcome']);\n            return;\n        }\n\n        this.getCurrentNodes();\n\n        this.hostInfo.Cluster = {} as ClusterStr;\n        this.getHostInfo();\n\n        this.registerForm = this.formBuilder.group({\n            srvNumber: ['',\n                [Validators.required,\n                    Validators.min(0),\n                ]\n            ],\n        }, {});\n\n        //Getting value from App Component\n        this.subHostInfo = this._eventEmitter.hostInfo.subscribe(\n            data => {\n                this.hostInfo = data;\n\n                let hu = this.haveUpdate;\n                hu = this.hostInfo.Updates[\"activeNodes\"];\n\n                if (hu != this.haveUpdate) {\n                    this.getCurrentNodes();\n                    console.log('OperationMode: active-nodes: ', hu, this.haveUpdate);\n                }\n                //console.log('OperationMode: active-nodes: ', hu, this.haveUpdate);\n            },\n        );\n\n    }\n\n    ngOnDestroy() {\n    }\n\n    // convenience getter for easy access to form fields\n    get f() {\n        return this.registerForm.controls;\n    }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        let num = this.registerForm.get('srvNumber').value;\n\n        if (num > this.vcpus) {\n            let ret = this._util.openModal('Change the Number of Nodes',\n                'Attention, you are allocating more nodes than ' +\n                'the total number of CPUs in the cluster. \\n  ' +\n                'Performance degradation may occur, confirm the request?',\n                'Yes', 'No', '');\n\n            ret.afterClosed().subscribe(data => {\n                if (data && data['button'] == 'YES') {\n                    this.setNodes(num - 1);\n                    this.registerForm.disable();\n                }\n            });\n        } else {\n            this.setNodes(num - 1);\n            this.registerForm.disable();\n        }\n\n    }\n\n    setNodes(num) {\n        let params: ParamStr[] = [];\n        params.push({Name: \"\", Value: num.toString()});\n\n        let request: RequestStr = {\n            Request: \"swarmAdd\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.response = data;\n                //console.log(\"CurrentNodes | simpleRequest: \", data);\n\n                if (this.response['Name'] == \"error\") {\n                    this.registerForm.enable();\n                    this.f['srvNumber'].setErrors({'generic': this.response['Status']});\n                    return;\n                }\n\n                this.managerStatus('getCurrentNodes', this.registerForm.get('srvNumber').value);\n            });\n    }\n\n    setRoute(val) {\n        this.router.navigate([val])\n    }\n\n    getCurrentNodes() {\n        let params: ParamStr[] = [];\n\n        let request: RequestStr = {\n            Request: \"activeNodes\",\n            Param: params,\n        };\n        //console.log(\"CurrentNodes | request: \", request);\n\n        let vcpus = 0;\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.nodes = data;\n\n                let n = 0;\n                let h = 0;\n                let host = \"\";\n                if (this.nodes) {\n                    this.nodes.forEach(function (v, k) {\n                        if (v['NumberOfCPUs'])\n                            vcpus += parseInt(v['NumberOfCPUs']);\n\n                        if (v.Hostname != host) {\n                            host = v.Hostname;\n                            h++;\n                        }\n\n                        if (v.Container) {\n                            v.Container.forEach(function (v1, k1) {\n                                n++;\n                                h++;\n                            });\n                        }\n                    });\n                    this.haveUpdate = h.toString();\n                } else {\n                    this.haveUpdate = \"0\";\n                }\n\n                this.f['srvNumber'].setValue(n);\n                this.currentNumberOfNodes = n;\n                this.vcpus = vcpus;\n            });\n    }\n\n    getHostInfo() {\n        let params: ParamStr[] = [];\n        let request: RequestStr = {\n            Request: \"hostInfo\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.hostInfo = data;\n                //console.log(this.hostInfo);\n            });\n    }\n\n    async managerStatus(funcName: string, desireRet: number) {\n        let wait_ret = true;\n        let n = \"\";\n        while (wait_ret) {\n            await this._util.delay(5000);\n            if (funcName != '') {\n                n = this[funcName]();\n            }\n\n            if (this.currentNumberOfNodes == desireRet) {\n                this.response['Name'] = 'ok';\n                this.response['Status'] = 'Request completed successfully.';\n                this.registerForm.enable();\n                wait_ret = false;\n            }\n        }\n    }\n\n}\n","export default \".help {\\n  font-size: 12px;\\n}\\n\\n.tags {\\n  min-height: 150px;\\n  min-width: 20vw;\\n  max-width: calc(100vw - 35px);\\n}\\n\\n.module {\\n  padding: 0.5em;\\n  margin-left: -20px;\\n  display: inline-block;\\n  line-height: 40px;\\n}\\n\\n.divTable{\\n  display: table;\\n}\\n\\n.divTableRow {\\n  display: table-row;\\n}\\n\\n.divTableHeading {\\n  background-color: #EEE;\\n  display: table-header-group;\\n}\\n\\n.divTableCell, .divTableHead {\\n  display: table-cell;\\n  vertical-align: middle;\\n}\\n\\n.divTableHeading {\\n  background-color: #EEE;\\n  display: table-header-group;\\n  font-weight: bold;\\n}\\n\\n.divTableFoot {\\n  background-color: #EEE;\\n  display: table-footer-group;\\n  font-weight: bold;\\n}\\n\\n.divTableBody {\\n  display: table-row-group;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L21lbnUtbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLHNCQUFzQjtFQUN0QiwyQkFBMkI7QUFDN0I7O0FBQ0E7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0FBQ3hCOztBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLDJCQUEyQjtFQUMzQixpQkFBaUI7QUFDbkI7O0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLGlCQUFpQjtBQUNuQjs7QUFDQTtFQUNFLHdCQUF3QjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL21lbnUtbWFuYWdlbWVudC9tZW51LW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWxwIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udGFncyB7XG4gIG1pbi1oZWlnaHQ6IDE1MHB4O1xuICBtaW4td2lkdGg6IDIwdnc7XG4gIG1heC13aWR0aDogY2FsYygxMDB2dyAtIDM1cHgpO1xufVxuXG4ubW9kdWxlIHtcbiAgcGFkZGluZzogMC41ZW07XG4gIG1hcmdpbi1sZWZ0OiAtMjBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaW5lLWhlaWdodDogNDBweDtcbn1cblxuLmRpdlRhYmxle1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5kaXZUYWJsZVJvdyB7XG4gIGRpc3BsYXk6IHRhYmxlLXJvdztcbn1cbi5kaXZUYWJsZUhlYWRpbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFO1xuICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG59XG4uZGl2VGFibGVDZWxsLCAuZGl2VGFibGVIZWFkIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbi5kaXZUYWJsZUhlYWRpbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFO1xuICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLmRpdlRhYmxlRm9vdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUU7XG4gIGRpc3BsYXk6IHRhYmxlLWZvb3Rlci1ncm91cDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4uZGl2VGFibGVCb2R5IHtcbiAgZGlzcGxheTogdGFibGUtcm93LWdyb3VwO1xufVxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthStr, ParamStr, RequestStr, ResponseStr, UniversalDTOStr} from \"../_model/service\";\nimport {HostService} from \"../_services/host.service\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {Subscription} from \"rxjs\";\nimport {UtilControl} from \"../_control/util.control\";\n\n@Component({\n  selector: 'app-menu-management',\n  templateUrl: './menu-management.component.html',\n  styleUrls: ['./menu-management.component.css']\n})\nexport class MenuManagementComponent implements OnInit {\n\n  userSession = {} as AuthStr;\n  response = {} as ResponseStr;\n\n  subLogin: Subscription;\n\n  constructor(\n    private router: Router,\n    private host: HostService,\n    private _eventEmitter: EventEmitterService,\n    private _snackBar: MatSnackBar,\n    public _util: UtilControl,\n  ) { }\n\n  ngOnInit() {\n    window.localStorage.removeItem(\"TryACode\");\n\n    this.userSession = this.host.getSessionID();\n\n    //Getting value from HostCredentials\n    this.subLogin = this._eventEmitter.loginChange.subscribe(\n      data => {\n        this.userSession = this.host.getSessionID();\n        //console.log('App Root | _eventEmitter.SendMsgAppRoot  ', this.userSession);\n      },\n    );\n  }\n\n  ngOnDestroy() {\n    this.subLogin.unsubscribe();\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  reboot() {\n    let ret = this._util.openModal('Reboot Server: ',\n        'Confirm restart the server?',\n        'Yes', 'No', '');\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data['button'] == 'YES') {\n        let params: ParamStr[] = [];\n\n        let request: RequestStr = {\n          Request: \"reboot\",\n          Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n              this.response = data;\n              this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n            });\n      }\n    });\n  }\n\n}\n","export default \".user-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.frontName {\\n  font-size: 10px;\\n  margin: 0;\\n}\\n\\n.master {\\n  color: #9d1e15;\\n}\\n\\n.help {\\n  font-size: 12px;\\n}\\n\\n.normal {\\n  font-size: 12px;\\n}\\n\\nprocess {\\n  line-height:80%;\\n  font-size: 12px !important;\\n}\\n\\n.mat-table {\\n  background: #fff;\\n}\\n\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n\\n.mat-header-cell {\\n  font-size: 12px;\\n  font-weight: 700;\\n}\\n\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n\\n.mat-form-field {\\n  font-size: 12px;\\n  margin-left: 10px;\\n}\\n\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\n\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n\\n/deep/ .mat-sort-header-arrow {\\n  color: #000 !important;\\n}\\n\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n\\n/deep/ .mat-list-base .mat-list-item.mat-2-line, .mat-list-base .mat-list-option.mat-2-line {\\n  /* height: 72px; */\\n  color: black;\\n}\\n\\n::ng-deep .mat-list-base .mat-list-item .mat-list-text, .mat-list-base .mat-list-option .mat-list-text {\\n  float: left;\\n  padding: 4px;\\n}\\n\\n::ng-deep .mat-list-base .mat-list-item .mat-list-icon, .mat-list-base .mat-list-option .mat-list-icon {\\n  float: left;\\n}\\n\\n::ng-deep .mat-list-base .mat-list-item.mat-2-line, .mat-list-base .mat-list-option.mat-2-line {\\n  height: auto;\\n}\\n\\n::ng-deep .mat-list-base .mat-list-item.mat-list-item-with-avatar, .mat-list-base .mat-list-option.mat-list-item-with-avatar {\\n  height: auto;\\n}\\n\\n/deep/ .mat-list-base .mat-list-item {\\n  font-size: 14px;\\n}\\n\\n/deep/ .mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\\n  font-size: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L21vbml0b3JpbmcvbW9uaXRvcmluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUNBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUNBO0VBQ0UsV0FBVztBQUNiOztBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjs7QUFDQTtFQUNFO0FBQ0Y7O0FBQ0E7RUFDRSxxQkFBcUI7QUFDdkI7O0FBQ0E7RUFDRSxnQ0FBZ0M7RUFDaEMsMkJBQTJCO0FBQzdCOztBQUNBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLHNHQUFzRztBQUN4Rzs7QUFFQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFDQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFDQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFDQTtFQUNFLHNEQUFzRDtBQUN4RDs7QUFDQTtFQUNFLG1DQUFtQztBQUNyQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUNBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9tZW51LW1hbmFnZW1lbnQvbW9uaXRvcmluZy9tb25pdG9yaW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uZnJvbnROYW1lIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBtYXJnaW46IDA7XG59XG5cbi5tYXN0ZXIge1xuICBjb2xvcjogIzlkMWUxNTtcbn1cblxuLmhlbHAge1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5ub3JtYWwge1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbnByb2Nlc3Mge1xuICBsaW5lLWhlaWdodDo4MCU7XG4gIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O1xufVxuXG4ubWF0LXRhYmxlIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbm1hdC1mb290ZXItcm93LCBtYXQtaGVhZGVyLXJvdywgbWF0LXJvdywgdGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCwgdGgubWF0LWhlYWRlci1jZWxsIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLDAsMCwuMTIpO1xufVxuLm1hdC1jZWxsLCAubWF0LWZvb3Rlci1jZWxsIHtcbiAgY29sb3I6ICMwMDA7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LWhlYWRlci1yb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC4wMylcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KTtcbn1cbi9kZWVwLyAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNykgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xufVxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuL2RlZXAvIC5tYXQtZWxldmF0aW9uLXo4IHtcbiAgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDAsIDAsIDAsIDApLCAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDApLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDApO1xufVxuXG4vZGVlcC8gLm1hdC1mb3JtLWZpZWxkLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1yaXBwbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59XG4vZGVlcC8gLm1hdC1zZWxlY3QtdmFsdWUsIC5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG4vZGVlcC8gLm1hdC1zb3J0LWhlYWRlci1hcnJvdyB7XG4gIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG4ubWF0LXJvdzpudGgtY2hpbGQoMm4rMSl7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTg3LCAxOTYsIDIwMSwgMC4xNikgIWltcG9ydGFudDtcbn1cbi5tYXQtcm93Om5vdCg6bnRoLWNoaWxkKDJuKzEpKXtcbiAgYmFja2dyb3VuZC1jb2xvcjojZmZmZmZmICFpbXBvcnRhbnQ7XG59XG5cbi9kZWVwLyAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbS5tYXQtMi1saW5lLCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3Qtb3B0aW9uLm1hdC0yLWxpbmUge1xuICAvKiBoZWlnaHQ6IDcycHg7ICovXG4gIGNvbG9yOiBibGFjaztcbn1cblxuOjpuZy1kZWVwIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtIC5tYXQtbGlzdC10ZXh0LCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3Qtb3B0aW9uIC5tYXQtbGlzdC10ZXh0IHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBhZGRpbmc6IDRweDtcbn1cbjo6bmctZGVlcCAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSAubWF0LWxpc3QtaWNvbiwgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbiAubWF0LWxpc3QtaWNvbiB7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG46Om5nLWRlZXAgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0ubWF0LTItbGluZSwgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbi5tYXQtMi1saW5lIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG46Om5nLWRlZXAgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0ubWF0LWxpc3QtaXRlbS13aXRoLWF2YXRhciwgLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LW9wdGlvbi5tYXQtbGlzdC1pdGVtLXdpdGgtYXZhdGFyIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vZGVlcC8gLm1hdC1saXN0LWJhc2UgLm1hdC1saXN0LWl0ZW0ge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi9kZWVwLyAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSAubWF0LWxpbmU6bnRoLWNoaWxkKG4rMikge1xuICBmb250LXNpemU6IDEwcHg7XG59Il19 */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostInfoStr} from \"../../_model/hostInfo\";\nimport {HostService} from \"../../_services/host.service\";\nimport {ParamStr, RequestStr} from \"../../_model/service\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {QueueStr} from \"../../_model/code\";\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Subscription} from \"rxjs\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-monitoring',\n    templateUrl: './monitoring.component.html',\n    styleUrls: ['./monitoring.component.css']\n})\nexport class MonitoringComponent implements OnInit {\n    displayedColumns = ['User', 'Position', 'Queue', 'Command', 'Time'];\n\n    hosts: HostInfoStr[] = [];\n    hostInfo = {} as HostInfoStr;\n    haveUpdate: string = \"\";\n    queues: QueueStr[] = [];\n\n    subHostInfo: Subscription;\n\n    dataSource: MatTableDataSource<QueueStr>;\n    // @ts-ignore\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(\n        private host: HostService,\n        private router: Router,\n        private _eventEmitter: EventEmitterService,\n    ){\n        this.host.checkSessionID(this.constructor.name);\n    }\n\n    ngOnInit() {\n        this.getFrontendInfo();\n\n        //Getting value from App Component\n        this.subHostInfo = this._eventEmitter.hostInfo.subscribe(\n            data => {\n                this.hostInfo = data;\n\n                if (this.hostInfo.Updates[\"activeQueues\"] || this.queues)\n                    this.getActiveQueues()\n\n                if (this.hostInfo.Updates[\"activeFrontends\"]) {\n                    let hu = this.haveUpdate;\n                    hu = this.hostInfo.Updates[\"activeFrontends\"];\n\n                    if (hu != this.haveUpdate) {\n                        this.getFrontendInfo();\n                        //console.log('OperationMode: monitoring: ', hu, this.haveUpdate);\n                    }\n                    //console.log('OperationMode: monitoring: ', hu, this.haveUpdate);\n                }\n            },\n        );\n    }\n\n    ngOnDestroy() {\n        this.subHostInfo.unsubscribe();\n    }\n\n    getFrontendInfo() {\n        let params: ParamStr[] = [];\n\n        let request: RequestStr = {\n            Request: \"activeFrontends\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.hosts = data;\n                if (this.hosts) {\n                    this.haveUpdate = this.hosts.length.toString();\n                    //console.log('Queues: hu haveUpdate: ', this.hosts);\n                } else {\n                    this.haveUpdate = \"0\";\n                }\n            });\n    }\n\n    getActiveQueues() {\n        let params: ParamStr[] = [];\n\n        let request: RequestStr = {\n            Request: \"activeQueues\",\n            Param: params,\n        };\n\n        this.host.request(request, 'simpleRequest')\n            .subscribe(data => {\n                this.queues = data;\n                if (this.queues) {\n                    this.dataSource = new MatTableDataSource(this.queues);\n                    this.dataSource.sort = this.sort;\n                } else {\n                    delete this.dataSource;\n                }\n            });\n\n        //console.log('Queues: hu haveUpdate: ', this.queues, this.haveUpdate);\n    }\n\n}\n","export default \"input, select {\\n  max-width: 300px;\\n}\\n\\n.description {\\n  font-size: 12px;\\n  display: block;\\n  white-space: pre-line;\\n}\\n\\n.help {\\n  font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS1tYW5hZ2VtZW50L3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsY0FBYztFQUNkLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9tZW51LW1hbmFnZW1lbnQvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0LCBzZWxlY3Qge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuXG4uZGVzY3JpcHRpb24ge1xuICBmb250LXNpemU6IDEycHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG59XG5cbi5oZWxwIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from \"@angular/forms\";\nimport {ParamStr, RequestStr, ResponseStr} from \"../../_model/service\";\nimport {HostService} from \"../../_services/host.service\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {UtilControl} from \"../../_control/util.control\";\nimport {ConfigurationStr} from \"../../_model/config\";\n\n@Component({\n  selector: 'settings-module',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n  config = {} as ConfigurationStr;\n\n  response = {} as ResponseStr;\n\n  CodeMaxFileSize='';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private host: HostService,\n    private router: Router,\n    public _util: UtilControl,\n    private _eventEmitter: EventEmitterService,\n  ){\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngOnInit() {\n\n    function alphaNumericValidator(control: FormControl): ValidationErrors | null {\n      return /^[a-zA-Z0-9_]*$/.test(control.value) ? null : { alphaNumeric: true };\n    }\n\n    this.registerForm = this.formBuilder.group({\n      PublicInterface: ['',\n        [\n          Validators.minLength(4),\n          Validators.maxLength(15),\n        ]\n      ],\n      BackendPort: ['',\n        [\n          Validators.min(1500),\n          Validators.max(65534),\n        ]\n      ],\n      FrontendPort: ['',\n        [\n          Validators.min(1500),\n          Validators.max(65534),\n        ]\n      ],\n      WebSocketPort: ['',\n        [\n          Validators.min(1500),\n          Validators.max(65534),\n        ]\n      ],\n      StartContainers: ['',\n        [\n          Validators.min(0),\n          Validators.max(65534),\n        ]\n      ],\n      MaxContainers: ['',\n        [\n          Validators.min(0),\n          Validators.max(65534),\n        ]\n      ],\n      OperationMode: ['',[]],\n      NodeMode: ['',[]],\n      ClusterName: ['',\n        [\n          Validators.minLength(4),\n          Validators.maxLength(20),\n          alphaNumericValidator,\n        ]\n      ],\n      ClusterPassword: ['',\n        [\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ]\n      ],\n      HostUser: ['',\n        [\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ]\n      ],\n      HostPassword: ['',\n        [\n          Validators.minLength(4),\n          Validators.maxLength(20),\n        ]\n      ],\n      SelfRegistration: ['',[]],\n      CodeExecTimeout: ['',\n        [\n          Validators.min(10),\n          Validators.max(1000),\n        ]\n      ],\n      CodeMaxFileSize: ['',\n        [\n          Validators.min(1),\n          Validators.max(10000000000),\n        ]\n      ],\n      Queue: ['',[]],\n      MaxConcurrency: ['',\n        [\n          Validators.min(1),\n          Validators.max(1000),\n        ]\n      ],\n      Debug: ['',[]],\n      Error: ['',[]],\n      SmtpServer: ['',[]],\n      SmtpPort: ['',\n        [\n          Validators.min(1),\n          Validators.max(65534),\n        ]\n      ],\n      SmtpUser: ['',[]],\n      SmtpPassword: ['',[]],\n      DbHost: ['',[]],\n      DbPort: ['',\n        [\n          Validators.min(1),\n          Validators.max(65534),\n        ]\n      ],\n      DbUser: ['',[]],\n      DbPassword: ['',[]],\n    }, {});\n\n    this.getConfigs();\n  }\n\n  get fe() { return this.registerForm.controls; }\n\n  getConfigs() {\n    let params: ParamStr[] = [];\n\n    let request: RequestStr = {\n      Request: \"settings\",\n      Param: params,\n    };\n\n    this.host.request(request, 'simpleRequest')\n      .subscribe(data => {\n        //console.log(\"Settings | getConfigs: \", data);\n        this.registerForm.setValue(data);\n      });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.config.PublicInterface = this.fe['PublicInterface'].value.toString();\n    this.config.BackendPort = this.fe['BackendPort'].value.toString();\n    this.config.FrontendPort = this.fe['FrontendPort'].value.toString();\n    this.config.WebSocketPort = this.fe['WebSocketPort'].value.toString();\n    this.config.ClusterName = this.fe['ClusterName'].value.toString();\n    this.config.ClusterPassword = this.fe['ClusterPassword'].value.toString();\n    this.config.NodeMode = this.fe['NodeMode'].value.toString();\n    this.config.OperationMode = this.fe['OperationMode'].value.toString();\n    this.config.MaxContainers = this.fe['MaxContainers'].value.toString();\n    this.config.StartContainers = this.fe['StartContainers'].value.toString();\n    this.config.HostUser = this.fe['HostUser'].value.toString();\n    this.config.HostPassword = this.fe['HostPassword'].value.toString();\n    this.config.SelfRegistration = this.fe['SelfRegistration'].value.toString();\n    this.config.CodeExecTimeout = this.fe['CodeExecTimeout'].value.toString();\n    this.config.CodeMaxFileSize = this.fe['CodeMaxFileSize'].value.toString();\n    this.config.Queue = this.fe['Queue'].value.toString();\n    this.config.MaxConcurrency = this.fe['MaxConcurrency'].value.toString();\n    this.config.Debug = this.fe['Debug'].value.toString();\n    this.config.Error = this.fe['Error'].value.toString();\n    this.config.SmtpServer = this.fe['SmtpServer'].value.toString();\n    this.config.SmtpPassword = this.fe['SmtpPassword'].value.toString();\n    this.config.SmtpPort = this.fe['SmtpPort'].value.toString();\n    this.config.SmtpUser = this.fe['SmtpUser'].value.toString();\n    this.config.DbHost = this.fe['DbHost'].value.toString();\n    this.config.DbUser = this.fe['DbUser'].value.toString();\n    this.config.DbPort = this.fe['DbPort'].value.toString();\n    this.config.DbPassword = this.fe['DbPassword'].value.toString();\n\n\n    this.host.request(this.config, 'setConfigs')\n      .subscribe( data => {\n        this.response = data;\n        //console.log(\"Users onSubmit | edit: \", this.registerForm.value);\n      });\n  }\n\n  getInputMaxFileSize(input) {\n    this.CodeMaxFileSize = this._util.formatBytes(input.path[0].value);\n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyeS1jb2RlL3RyeS1jb2RlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'try-code-module',\n  templateUrl: './try-code.component.html',\n  styleUrls: ['./try-code.component.css']\n})\nexport class TryCodeComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    window.localStorage.removeItem(\"AnswerId\");\n    window.localStorage.removeItem(\"ExerciseId\");\n    window.localStorage.setItem(\"TryACode\", \"1\");\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWVkaXQvdXNlcnMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HostService} from \"../../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {EventEmitterService} from \"../../_services/event-emitter.service\";\nimport {AuthStr, ParamStr, ResponseStr, UniversalDTOStr} from \"../../_model/service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UtilControl} from \"../../_control/util.control\";\n\n@Component({\n  selector: 'users-app-edit',\n  templateUrl: './users-edit.component.html',\n  styleUrls: ['./users-edit.component.css']\n})\nexport class UsersEditComponent implements OnInit {\n\n  registerForm!: FormGroup;\n  submitted = false;\n\n  response = {} as ResponseStr;\n  userSession = {} as AuthStr;\n  isNewUser!: number;\n\n  ForceChangePass: string;\n\n  userId: number;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private host: HostService,\n      private router: Router,\n      public _util: UtilControl,\n      private _eventEmitter: EventEmitterService,\n      private _snackBar: MatSnackBar,\n  ){\n    this.host.checkSessionID(this.constructor.name);\n  }\n\n  ngOnInit() {\n\n    this.registerForm = this.formBuilder.group({\n      Name: ['',\n        [Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(60),\n        ]\n      ],\n      Password: ['',\n        [Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(50),\n        ]\n      ],\n      CPassword: ['',\n        [Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(50),\n        ]\n      ],\n      Email: ['',\n        [Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(100),\n          Validators.email\n        ]\n      ],\n      Module: ['User',[]],\n      ForceChangePass: ['0',[]],\n      TempChangePass: ['',[]],\n      Id: ['',[]],\n    }, {validator: this.checkPassword});\n\n    //Getting Credentials\n    this.userSession = this.host.getSessionID();\n\n    this.ForceChangePass = window.localStorage.getItem(\"ForceChangePass\");\n\n    if (this.host.getSessionID().Module == \"Admin\") {\n\n      this.userId = Number(window.localStorage.getItem(\"editUserId\"));\n\n      if (this.ForceChangePass == \"1\")\n        this.userId = this.userSession.Id;\n\n      if (this.userId)\n        this.getUsers(this.userId);\n\n    }\n\n    //Credentials\n    if (this.host.getSessionID().Module != \"Admin\" &&\n        this.userSession.Id) {\n      this.userId = this.userSession.Id;\n      this.getUsers(this.userId);\n    }\n\n  }\n\n  checkPassword(control: AbstractControl) {\n    if (control.get('Password').value != control.get('CPassword').value) {\n      control.get('CPassword').setErrors({\n        mismatch: true\n      });\n    }\n    return false;\n  }\n\n  get fe() { return this.registerForm.controls; }\n\n  getUsers(userId) {\n\n    let filter: ParamStr[] = [];\n\n    if (userId) {\n      filter.push({Name: 'Id', Value: String(userId)});\n\n      let requestDB: UniversalDTOStr = {\n        Operation: \"view\",\n        TableData: null,\n        Custom: \"users-edit\",\n        Filter: filter,\n      };\n\n      this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n\n            if (data[0]) {\n\n              data[0]['CPassword'] = \"\";\n\n              if (this.ForceChangePass == \"1\")\n                data[0]['ForceChangePass'] = 0;\n\n              this.registerForm.setValue(data[0]);\n            }\n\n            this.fe['Password'].setValue('');\n\n          });\n    }\n  }\n\n  setRoute(val) {\n    this.router.navigate([val])\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    let temp = this.registerForm.value;\n    delete temp['CPassword'];\n\n    //if (this.ForceChangePass == \"1\")\n    //  temp['ForceChangePass'] = \"0\";\n\n    let filter: ParamStr[] = [];\n    let requestDB: UniversalDTOStr = {\n      Operation: \"update\",\n      TableData: temp,\n      Custom: \"Users\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n        .subscribe( data => {\n\n          this.response = data;\n\n          if (this.response.Name == \"ok\") {\n            if (!this.userId)\n              this.response.Status = \"Record inserted successfully.\";\n            else\n              this.response.Status = \"Record updated successfully.\";\n\n\n            let action, route = '';\n            if (this.userSession.Module == 'Admin') {\n              action = 'Go to Users';\n              route = 'view-user';\n            } else {\n              if (!this.userId) {\n                action = 'Go to Login Page';\n                route = 'host-login';\n              } else {\n                action = this.response.Name;\n                route = 'view-user';\n              }\n            }\n\n            if (this.response.Name != \"ok\")\n              action = this.response.Name;\n\n            this._util.setResponse(this.response.Status, action, this.response.Name, route);\n\n            window.localStorage.setItem(\"ForceChangePass\", \"0\");\n            //this.router.navigate(['Users']);\n            //console.log(\"Users onSubmit | edit: \", temp);\n\n            if (this.ForceChangePass == \"1\" || this.host.getSessionID().Module != 'Admin') {\n\n              if (this.host.getSessionID().Module!='SelfRegistration') {\n                this._util.openModal('Password changed',\n                    'Please login with the new password.',\n                    'Close', '', '');\n              } else {\n                this._util.openModal('New User',\n                    'Please enter your new credentials.',\n                    'Close', '', '');\n              }\n\n              this.host.killSessionID();\n              this.userSession = {} as AuthStr;\n              this._eventEmitter.setLoginChange({Name: \"ok\", Status: \"\"});\n              this.router.navigate(['welcome']);\n            }\n\n          } else {\n            this._util.setResponse(this.response.Status, this.response.Name, null, null);\n          }\n        });\n\n  }\n}\n","export default \".mat-table {\\n  background: #fff;\\n}\\nmat-footer-row, mat-header-row, mat-row, td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\\n  border-bottom-color: rgba(0,0,0,.12);\\n}\\n.mat-cell, .mat-footer-cell {\\n  color: #000;\\n}\\n.mat-header-cell {\\n  color: rgba(0,0,0,.7);\\n}\\n.mat-header-cell {\\n  font-size: 14px;\\n  font-weight: 700;\\n}\\n.mat-paginator, .mat-header-row {\\n  background-color: rgba(0,0,0,.03)\\n}\\n.mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: rgba(0,0,0,.7);\\n}\\n/deep/ .mat-form-field-label {\\n  color: rgba(0,0,0,.7) !important;\\n  font-weight: 700 !important;\\n}\\n.mat-form-field {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.mat-column-Action {\\n  flex: 0 0 20%;\\n}\\n.mat-column-Id, .mat-column-Module {\\n  flex: 0 0 10%;\\n}\\n.mat-column-Nome, .mat-column-Email {\\n  flex: 0 0 30%;\\n}\\n/deep/ .mat-elevation-z8 {\\n  box-shadow: 0 0 0 0 rgba(0, 0, 0, 0), 0 8px 10px 1px rgba(0, 0, 0, 0), 0 3px 14px 2px rgba(0, 0, 0, 0);\\n}\\ninput {\\n  width: 100%;\\n  background-color: #fcfcfc;\\n  border: 0;\\n  border-bottom: 2px solid lightgrey;\\n  padding: 10px;\\n}\\n/deep/ .mat-form-field.mat-focused .mat-form-field-ripple {\\n  background-color: #fff !important;\\n}\\n/deep/ .mat-select-value, .mat-paginator, .mat-paginator-page-size .mat-select-trigger {\\n  color: #000 !important;\\n}\\n.mat-row:nth-child(2n+1){\\n  background-color: rgba(187, 196, 201, 0.16) !important;\\n}\\n.mat-row:not(:nth-child(2n+1)){\\n  background-color:#ffffff !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usb0NBQW9DO0FBQ3RDO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0U7QUFDRjtBQUNBO0VBQ0UscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxnQ0FBZ0M7RUFDaEMsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBQ0E7RUFDRSxzR0FBc0c7QUFDeEc7QUFFQTtFQUNFLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsU0FBUztFQUNULGtDQUFrQztFQUNsQyxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGlDQUFpQztBQUNuQztBQUNBO0VBQ0Usc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxzREFBc0Q7QUFDeEQ7QUFDQTtFQUNFLG1DQUFtQztBQUNyQyIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXRhYmxlIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbm1hdC1mb290ZXItcm93LCBtYXQtaGVhZGVyLXJvdywgbWF0LXJvdywgdGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCwgdGgubWF0LWhlYWRlci1jZWxsIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLDAsMCwuMTIpO1xufVxuLm1hdC1jZWxsLCAubWF0LWZvb3Rlci1jZWxsIHtcbiAgY29sb3I6ICMwMDA7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgY29sb3I6IHJnYmEoMCwwLDAsLjcpO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LWhlYWRlci1yb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC4wMylcbn1cbi5tYXQtcGFnaW5hdG9yLCAubWF0LXBhZ2luYXRvci1wYWdlLXNpemUgLm1hdC1zZWxlY3QtdHJpZ2dlciB7XG4gIGNvbG9yOiByZ2JhKDAsMCwwLC43KTtcbn1cbi9kZWVwLyAubWF0LWZvcm0tZmllbGQtbGFiZWwge1xuICBjb2xvcjogcmdiYSgwLDAsMCwuNykgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IDcwMCAhaW1wb3J0YW50O1xufVxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbi5tYXQtY29sdW1uLUFjdGlvbiB7XG4gIGZsZXg6IDAgMCAyMCU7XG59XG4ubWF0LWNvbHVtbi1JZCwgLm1hdC1jb2x1bW4tTW9kdWxlIHtcbiAgZmxleDogMCAwIDEwJTtcbn1cbi5tYXQtY29sdW1uLU5vbWUsIC5tYXQtY29sdW1uLUVtYWlsIHtcbiAgZmxleDogMCAwIDMwJTtcbn1cbi9kZWVwLyAubWF0LWVsZXZhdGlvbi16OCB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAgcmdiYSgwLCAwLCAwLCAwKSwgMCA4cHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwKSwgMCAzcHggMTRweCAycHggcmdiYSgwLCAwLCAwLCAwKTtcbn1cblxuaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgbGlnaHRncmV5O1xuICBwYWRkaW5nOiAxMHB4O1xufVxuL2RlZXAvIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xufVxuL2RlZXAvIC5tYXQtc2VsZWN0LXZhbHVlLCAubWF0LXBhZ2luYXRvciwgLm1hdC1wYWdpbmF0b3ItcGFnZS1zaXplIC5tYXQtc2VsZWN0LXRyaWdnZXIge1xuICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xufVxuLm1hdC1yb3c6bnRoLWNoaWxkKDJuKzEpe1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4NywgMTk2LCAyMDEsIDAuMTYpICFpbXBvcnRhbnQ7XG59XG4ubWF0LXJvdzpub3QoOm50aC1jaGlsZCgybisxKSl7XG4gIGJhY2tncm91bmQtY29sb3I6I2ZmZmZmZiAhaW1wb3J0YW50O1xufSJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostService} from \"../_services/host.service\";\nimport {Router} from \"@angular/router\";\nimport {UsersStr} from \"../_model/users\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport {ResponseStr, ParamStr, UniversalDTOStr} from \"../_model/service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UtilControl} from \"../_control/util.control\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\n\nexport class UsersComponent implements OnInit {\n  displayedColumns = ['Id', 'Name', 'Email', 'Module', 'Action'];\n  dataSource: MatTableDataSource<UsersStr>;\n  // @ts-ignore\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // @ts-ignore\n  @ViewChild(MatSort) sort: MatSort;\n\n  users: UsersStr[] = [];\n  response = {} as ResponseStr;\n\n  load = 0;\n\n  constructor(\n    private host: HostService,\n    private router: Router,\n    private _eventEmitter: EventEmitterService,\n    public _util: UtilControl,\n    private _snackBar: MatSnackBar,\n  ) {}\n\n  ngAfterViewInit() {\n    this.getUsers();\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  ngOnInit() {\n    //Credentials\n    if (this.host.getSessionID().Module == \"User\") {\n      window.localStorage.setItem(\"editUserId\", String(this.host.getSessionID().Id));\n      this.router.navigate(['edit-user']);\n      return;\n    }\n\n    if (this.host.getSessionID().Module != \"Admin\") {\n      this.router.navigate(['welcome']);\n      return;\n    }\n\n  }\n\n  addUser(): void {\n    window.localStorage.removeItem(\"editUserId\");\n    this.router.navigate(['add-user']);\n  };\n\n  editUser(user: UsersStr): void {\n      window.localStorage.setItem(\"editUserId\", user.Id.toString());\n      this.router.navigate(['edit-user']);\n  };\n\n  deleteUser(user: UsersStr): void {\n    let ret = this._util.openModal('Delete User: ' + user.Name,\n      'Confirm to delete the user?',\n      'Yes', 'No', '');\n\n    ret.afterClosed().subscribe(data => {\n\n      if (data['button'] == 'YES') {\n\n        let filter: ParamStr[] = [];\n        filter.push({Name: \"Id\", Value: user.Id.toString()});\n\n        let requestDB: UniversalDTOStr = {\n          Operation: \"drop\",\n          TableData: null,\n          Custom: \"users\",\n          Filter : filter,\n        };\n\n        this.host.request(requestDB, 'FDBRequest')\n          .subscribe(data => {\n            this.response = data;\n            //console.log(\"Users | dbList: \", this.response);\n\n            this._util.setResponse(this.response['Status'], this.response['Name'], null, null);\n\n            if (this.response['Name'] == \"ok\") {\n              this.getUsers()\n            }\n          });\n      }\n    });\n  }\n\n  getUsers() {\n    let filter: ParamStr[] = [];\n\n    let requestDB: UniversalDTOStr = {\n      Operation: \"view\",\n      TableData: null,\n      Custom: \"users\",\n      Filter: filter,\n    };\n\n    this.host.request(requestDB, 'FDBRequest')\n      .subscribe( data => {\n\n        this.users = data;\n        if (this.users) {\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.users);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } else {\n            delete this.dataSource;\n        }\n\n        this.load = 1;\n        //console.log(\"Users | dbList: \", data);\n      });\n  }\n\n}\n","export default \"span {\\n  font-size: 14px;\\n  display: block;\\n  white-space: pre-line;\\n}\\n\\n.welcome {\\n  width: 100%;\\n  margin: auto;\\n  padding: 10px;\\n}\\n\\n.system {\\n  width: 70%;\\n  float: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2VsY29tZS93ZWxjb21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsY0FBYztFQUNkLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3BhbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcbn1cblxuLndlbGNvbWUge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4uc3lzdGVtIHtcbiAgd2lkdGg6IDcwJTtcbiAgZmxvYXQ6IGxlZnQ7XG59Il19 */\"","import {CUSTOM_ELEMENTS_SCHEMA, Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HostService} from \"../_services/host.service\";\nimport {AuthStr, ParamStr, RequestStr} from \"../_model/service\";\nimport {EventEmitterService} from \"../_services/event-emitter.service\";\nimport {Subscription} from \"rxjs\";\nimport {HostInfoStr} from \"../_model/hostInfo\";\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  userSession = {} as AuthStr;\n  subLogin: Subscription;\n  hostInfo = {} as HostInfoStr;\n\n  constructor(\n      private router: Router,\n      private host: HostService,\n      private _eventEmitter: EventEmitterService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.userSession = this.host.getSessionID();\n\n    //Getting value from child HostCredentials\n    this.subLogin = this._eventEmitter.loginChange.subscribe(\n        data => {\n          this.userSession = this.host.getSessionID();\n        },\n    );\n    this.getHostInfo();\n\n  }\n\n  ngOnDestroy() {\n    this.subLogin.unsubscribe();\n  }\n\n  getHostInfo() {\n    let params: ParamStr[] = [];\n    let request: RequestStr = {\n      Request: \"hostInfo\",\n      Param: params,\n    };\n\n    this.host.request(request, 'simpleRequest')\n        .subscribe(data => {\n          this.hostInfo = data;\n        });\n  }\n\n  setRoute() {\n    this.host.setSessionID('', 'SelfRegistration', '||NPZ8fvABP5pKSwU3');\n    this.router.navigate(['add-user']);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}